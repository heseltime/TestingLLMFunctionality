(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    372639,       7343]
NotebookOptionsPosition[    294112,       5928]
NotebookOutlinePosition[    336568,       6830]
CellTagsIndexPosition[    336242,       6818]
WindowTitle->The Wolfram Prompt Repository and More
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2612715e-e229-478b-8d0a-dd7c08fc9409"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
/w/qQILY
     "], {{0, 100}, {450, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{268.015625, Automatic},
   ImageSizeRaw->{450, 100},
   PlotRange->{{0, 450}, {0, 100}}], "Title"]], "Title",ExpressionUUID->\
"0ed5406f-6a2e-4a48-850a-2f221da9dc50"],

Cell["The Prompt Repository and More", "Title",ExpressionUUID->"3bb26825-896b-4ae5-97d3-9a6680f118fc"],

Cell["Using LLMs in Wolfram Language", "Subtitle",ExpressionUUID->"cb1bc8d0-2388-4c4f-9650-dc355ccb6ae6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQ+4HXV95z9CpQIBIl1FDEhA2S1/3ERZn+Cyyk1CQBEhNeJK0M0FCa11
TUJrZUtiE+gKLpSH8Mju0sr+EtsSIiIJBEgUIQGJjebWmxqhoJSAVApLlZTq
4592n/M773PvhHPnzpwzM2dmPt/5zuv1PC8juTf3zsyZO+f7vp/v9/M99uKl
H7h0vyAIfv817f/5wEWXz/6937voDxdMbf/H+Ut+/+O/vWTxJe9d8qnFv734
9069eP/2Xx7e/twPtf/PrwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAA4Bu333776YiIg7hhw4ap1s8yAAAAgLLQWGfdunWL2q5su6bt1nFfuu22
21qIiEUbPmfa/3+Dnj3tP5e2nW79PAQAAADIwu233z5zfBwzaj2+QkTsUs+k
G/SMsn5OAgAAAMTRHqucN16P2uPA2AkRsaeqmeuZ1f7/5zGHEAAAAKwZn+O3
x3qMhIiY1/GMtcj6eQoAAADNoz0WGRpfv2A+JkJELEL9joh8BQAAAFWgdQnk
KUT02fFn3JD18xYAAAD8Y7yv3xrr8Q4iYlWO56vp1s9fAAAA8IPxGhV90RGx
cerZt379+vnWz2EAAACoN+1xxTCZChHxtqXWz2MAAACoJ+P7aRY+PvnKV77S
uueeezo++OCDrYcffhgRcSD1LAmfK3rGlPHs0lxo6+cyAAAA1AetpWqPITYU
NRbZsmVLa/v27a3HHnus9Xd/93eIiJX4xBNPtHbs2NF5Bt1+++1F5atR9rsC
AACAfrTHDNM1bhhk3KHxy/33398aGRnpjGusx1aIiFLPJNW1Bq1nqR+71p1a
P68BAADATcZ7/uVeS6U8pfk4ZClEdF3V0AepYelZSbYCAACAKONz/3LXqVSf
Ik8hYp3UM0u/C8qbr5StmBMIAAAA3eRdT6U8xbopRKyzyld6lrHeCgAAAAZh
3bp1q/OMJ7Qe3Ho8hIhYlFp/lad2RZ9AAAAAaI8JhvOso9q9e7f5GAgRsWj1
bLvrrrvy1K1WWT/PAQAAwAatuc46dtB4g3l/iOizmheofbByZKth6+c6AAAA
VEv7/X961t5/2gOG3hSI2BSzrrmiRyAAAEDzaI8B1mbNVNZjHETEqtV+V1n7
WFg/3wEAAKAass7/09w/6lSI2FRzzAkctn7OAwAAQPmsW7dua5YeFaynQsQm
q98rZell0X7G7rF+zgMAAEC5tN/zh7L83pW+f4iIY30Cs/RgX79+/TLr5z0A
AACUh+b+px0XsD8VIuIrjo6OZuphwX7BAAAAfnJbhr2q1AfLegyDiOiaDz/8
cJZ1Vqusn/sAAABQPJrzn3Y8wJoqRMTJaq1V2vmA43tZTLd+9gMAAEBxrF+/
fn7aTKW+wtZjF0REV9UcaWpWAAAAzeS2lPtV6few9FRHROztV77ylbS5iv2s
AAAAPCLtHECtHbAeryAiuu7IyEiWmtV06/cAAAAAGJy0+wDr96/UqhAR05lh
v+Bh6/cBAAAAGBzN76cHICJisaZdZ7Vu3bqN1u8DAAAAMDi3pdyzSvNarMcp
iIh1UX1T084FtH4fAAAAgMHQvP607/vWYxRExLp51113pXq+qier9fsBAAAA
5Oe2lHsBb9myxXx8gohYNzPsE7zW+v0AAAAA8pN2bZXWCViPTxAR6+bu3bvT
5qpt1u8HAAAAkB+tl07znq91AtbjE0TEOppyLyv2sQIAAKgx+h0pa6sQEcsz
bb916/cDAAAAyE+aXKV119bjEkTEuqr1qeQqAAAAv0nzXq/ftVqPSxAR62qG
3hXTrd8TAAAAIB/kKkTEcs2Qq4as3xMAAAAgOxs2bJia5r1eYwLrcQkiYl1V
P1VyFQAAgL/oPZxchYhYrqOjo6ly1fr165dZvy8AAABAdshV6JqbNm1qrVu3
ruPSpUsneOqppw7kmWeeOeHrfeYzn9n3vazPG/02ba5qu8r6fQEAAACyQ65C
C5Wdrrvuuk62UdZR5jn00EPVC83co446al/+uvnmmzvHan29sP6SqwAAAPyG
XIVlqrFkWHdSVjnxxBPNc1NelfuU/y666KJ9dS7r64v1kVwFAADgN+QqLFJl
DWUOZSjVfQIH8lDZKisqa6m2ZX390V3JVQAAAH5DrsJBDGtRquMEJWSWo18V
tE7t8i/+za+3bo/xr44+uPXtto+2/Zu2+u+4z5P6Gp885NWtjx30ax3nvmb/
QmtaCxYsaD300EPmrw26JbkKAADAb8hVmEWtNSoyR500npeW7Re0/qjt+v3H
fCbBvz/+0FJ95s2HdrLZyLSDOhns84f/eid7Kd9lPTfVsKxfL3RHchUAAIDf
kKuw31hQ/SVUgxmkr8TRXfnpz9r56L4e2amXzx4zpfRsFZu3xr+/Mt+ftM/h
4v3GMmG/89Z1s34N0Q3JVQAAAH5DrsK48Z+ylNZIBTky1GFdGUo5ZHfODBWb
q44+2DRXxalzVM5KqmmtWLHC/DVFe8lVAAAAfkOuwnDMlzdLKU98cL+xOk7e
OlRaf/hvft25XBXNWNE6lup81q8v2kuuAgAA8BtyVbPVeqmsc/wO68pRj5Sc
oyblqsPdzlXPjNfnorUregUiuQoAAMBvyFXN9NZbb83Ue0I1mD+qoB7V1ym/
5nyukpftN/H6LVmyxPw1R1vJVQAAAH5DrmqWmuuXdm/eM19lU5Pq6Wv2q0Wu
+tL+E6/lvHnzzF97tJVcBQAA4DfkqmaoeWhp9uk9aTxLFdlromjrmKtmzZpl
fg+greQqAAAAvyFX+a32p+0330/rpS52rS7VQ4te6+QqHFRyFQAAgN+Qq/z1
M5/5TM9+FCe+ev/WnUce3vr7WSeYZ6VMucqg1zq5CgeVXAUAAOA35Co/VY+/
oEee2vqWN7aeO+2k1j+8+993fObgA8zzUlp/eMRrnM9V10f6VrA/MJKrejO6
KJj6nY8Gp48sDFbKnQuDG9p/bpXt/7+n/WcLEXFQx58nW0fGni16zqwcuTBY
quePnkPWz0KoN+Qqv9TYLWkPKuWpr04/YkKeCv3h4VPM81LqXGWwh1XWY6Qf
IMb9bJKrJjK6MJipMc3OC4JR67EWIuK4W5Wz9HyyfkZC/SBX+WVSpvqT1x3W
+lFMngp99ujXmeel1Br0Ws96jOdHctWKFSvM7w20lVw1xs6FwXntHLWGGhQi
uq6eU6pp6bll/eyEekCu8kf1/AtielJsf8sbE/NU6N8fe4R9XkrrQfs7n6ve
GdkXWPuFWd8faGuTc5Xm1oyMze17yXqchIiYx87z68JgqfXzFNyGXOWP2iMp
iGSq7/3m0X0zlfzRydPt81IGXc9Vh0VylfoyWt8faGtTc9XOC4NF5ClE9MVO
Dav9XLN+toKbkKv8Mbo/1f858vBUmaqTq2a+2TwrZfHZYw9xNldp768gUje0
vjfQ3qblqvE8tcd6DISIWIZaF9p+zg1ZP2vBLchV/hhExvJ/285KaXOVellY
Z6VMuariXutZji3aY/2EE04wvzfQ3qbkKo0zRsZ6bZmPexARK3ArPS4ghFzl
j8EAuarTa92BvJTWHx55oLO5aiU91jHGJuSq8Z7F1mMcREQLh62fwWAPucof
gwFzFb3Wi8lV0V6A9FhH6XOuGu9LscGBcQ0iopnqdWr9PAZbyFX+GERy1fd8
zlWHvtrZXEUvQIzT11zVzlTTy95/6vHFY/7gd4LWjy5DRMyunh/hs6TkfLWV
/YWbC7nKH6dNmzZhPH/H9CMy5apa9VqveA+rLMcWRPItvQBR+pirtKagyF5/
Gvc8/6mg9fKKoPUvnw1arc8hIpannjN63ui5o+dPgXWrUdZcNRNylT/OmjVr
wnj+j9+Qvh9gJ1cd/0b7vJRBF3PV9phcZX1foBv6lqvaY4fhQcce3x0OWns+
EbReusJ+fIWIqJyl55GeS6MfHTBbLQxeol9g8yBX+aPW8QRd4/m5hxyYKVfV
rtf6m93LVdFegMq61vcFuqFPuWrkwmDZoHnqxcvtx1CIiL3Uc0rPqwF/hzRs
/cyG6iBX+eO11147qVbyo9NOTp+rTvm35lkpU66qsNd62mO6LNKzYnh42Py+
QDf0JVcNUqfS73/JU4hYJ1XD0vqsQepX1K2aA7nKH7WOJ4jkqp0nT6fXeoW5
6mP0AsQEfchVeddTaTyicQlrphCxrur59cMl+ecEst6qGZCr/PKQQw6ZMK7/
n0e/LluuOvgA87yUOldV2Gs97THRCxCTrHuuUn+rPJnq0Y8FrV9cZT8mQkQs
wp+tzDc3sNPLgj6B3kOu8st58+YNtMaqVr3Wpx7gXK46OpKr6AWIoXXOVZ1M
laOXuvprUaNCRN/Uc02/M8pRu9pq/TyHciFX+eWKFSsGWmP17BsPN89Lqa2w
13raY4pee+v7Ad2xzrlKe11mHT9ovoz12AcRsUzVNzDHnMDV1s90KA9ylV9u
2rRp0th++28e7eceVge8yqlcFddjfenSpZ3xtPV9gfbWNVe1M9WqrOMGelMg
YlPU3lc56lbD1s92KAdylX9G11hl2cfq79sZzDwvZdClXBXtsR564oknMh8Q
a5mrtM4663hBe2xaj3MQEatUv0vK+qwcXRRMt37GQ/GQq/xzwYIFE8f1Bx5Q
yB5Wj7/+N1o73jmrtfV9Z7cemTO79eQhB5nnqqp6rQ+Sq4LxbGV9X6CtdcxV
WgtAnQoRsb/qeZoxW621fsZD8ZCr/DNuH6sfnPJvU+Wq5047KTYzKEf9fzfd
NME/v+661veOOco2V007yKlcddqsWa3zzj67NW/27NZBBx1Ez3XcZ91ylfZb
yTJG0DoD63ENIqKlWddb0XvdP8hV/hm3j9Wmt7wx9x5Wm//LRyZlKleyVVW9
1tMcy9Z3v2vCtVn13/7bhNfgqKOOMr830M665aostarHF9uPZxARrc3RJ5D+
gJ5BrvLTadOmTRjTL3ztlPS91g87cF9W+Kv/eGpipurOVpojaJKrDncoV73v
7EnX5u0zZrCfFXasU67Smuq04wKNIeiljog4pp6H2gs97TNUcwOsn/lQHOQq
Px0eHp5Us8q6h5XqUP0yVejtf/jfbGpWFfVaz5urLvjgB5kLiB3rlKt2Lgz2
pB0TaI9M63EMIqJLqn8PNatmQq7y05tvvnlSrho9eXqmXusbli1Nnavk1nPO
rj5XvWY/Z3LVyMx/P+maXL506YTXYNasWeb3BtpYl1w1cmGwjDVViIiDmXGt
1bDlcx+Kg1zlpxrDBZFc9T+Pfl3qXJVm/p8r8wFdyVW7/t3xk67JTe1rErDG
Cv+uPrkqba1K81yY/4eIGO8vrsowF/CCYNTyuQ/FQa7yV9VGgq4x/dxDDkzd
a33dVVdmzlVSNa6qc9Wzx0xxNlfJIJJvre8LtLEOuSrLflXqKWw9bkFEdNks
NSv2s/IDcpW/ai1PEBnT/+i0k/vmqm9/eH6uTBW66zePLywzPf5rQevRLv/6
1UHr21GPPLj1raMPifU7bzqk9b1jJvq3XT795sPIVViJdchVaecAUqtCROxv
ph4W7eev1bMfioNc5a/qPRdExvTfm/nmvrlq4x9dMVCuSluz+kEkKz10QNB6
sO2mX8/m5tcf1Lr/+N8ozK9Pn9p6sO3Wtt9801g+23Hg/p3jDPNd3Pkk9fmI
vgbqg299b2D11iFXaS5Kmvd/9v9FRExn6v2CLwg2Wj37oTjIVX4bRMb0t04/
omemeuLcyfv/FlGzUhbZ1c4lf5UzO/XyvtcdWGiuivPew14d+73v//Wx89F5
KRumyVX0Wm+mrueq0UXB1LTzVahVISKmU8/LDHMBp1o8/6E4yFV+e8IJJ0wY
0y/us4/Vg0t/p5Bc9eVlSztZ4/4C81OSyjxWuSoquQqTdD1XjaTcs+oHv2M/
TkFErJOp9wr+SDDf4vkPxUGu8tvoPlYnHnhAz1x12/+4ppBcJTce+RulZyp5
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
forLUx/bL7lGpfVUt956q/k9hcVKrkKf1DomZZQi5vkd84agdfrbxlx0dtBa
efFEz3vX2MdmHF9cvlIOVH3N+jpisyRX+Q+5qv5q/U0Qec+I61FhnavW/q//
1brvjjtKzVRJdS3NM7TOWV9qe37MXr/dnnDCCayn8lRyFfqg8pTWTfV6jiWp
XLT0Q0FrwzVB66Ut7a+3Pb+ja8e+jnKXMpeyWZ5jIl9hlZKr/IdcVX9XrFgx
4X3ipJS1qqpy1V/86Z+2vvzFL7a23Hln5ZnKOmd9Ybw2FbcfVdTh4eHO2Nv6
fsJyJFdh3dUapSz1KWWdonJUGvU99L1U88qas7QujPmBWLbkKv8hV9XfJUuW
THh/ONowV31pzZrW3evXm2enrDnr28uWdnppqC9G3qylf6t1XspsH5z2xtTv
59qbihqV/5KrsK6qRqXeD2meZ4dNGctSe+4ISs9RaWpaNyzNlrFUi6O/BZYl
ucp/yFX1N65nxWUpelbIkbfNKCRP3fZ//o8z9agi81Z3j0LlJa3b6v47Gfdv
//KWW1pTpkzpm6dYR9UcyVVYR9PWqJSnNCevirpUHrd+fqyO1e88gvG5gdSu
sAzJVf5Drqq/2jM2iHlvOD9Fttr1m8cPnKk2tLOBdQZy0U8vWzbpNVFPigUL
FlCfaqDkKqyT2oMqTc901YLWLA/Mc1OWuYLKf8qB/c5t2X+yfx3QL8lV/kOu
8kON1YMc2Up7QQ2Sqb7yF39hnl9cdsZb3zrh9dC+zayhaqbkKqyLa85PV5/S
WibrnJRXzVNMU79StmReIBYlucp/yFV+qDGbaiFBimy1u+317b/bsHJlZ+x/
6xe+kCtTqWe6dW5xXc0HjL4eWg9nfb+gzc8ouQpdV3tRxb2PdKu+567O98uT
r9RPsNf5kq2wKMlV/kOu8kfNB1Sf7iDmfUH7WWnN1TvH+9KpjhKO/TWPL2+P
CuvcUgf/ywUXULNCchU6r/ajinv/CK17jaqX6m/Ra26g1phpbqT1a4T1llzl
P+Qqv9TYLSlbdXv9Z1/pt6B9erW3VNZcdc/tt5tnljq4sf3zE+1hQc2qeZKr
0GX7ZSqfalRJqn9gr72HyVY4qOQq/yFX+We/bPWW446bNPa/q/0aU6sq3uuv
vrpTr3rTUUdNqllZ3ydY/c8luQpdU/PbevWn8LlGlWSvdVfKVswJxLySq/yH
XOWnvbLV7y5eHJsBtO+U1kz1ylOqa7nQ/0+99k479dRJdSBlxgXnnttZ12R5
fFdecUXrDUcc0fP3v/PmzWM+YIMkV6Fr9stUqt2ohmOdcyzUHlxJ14X1VphX
cpX/kKv8VeO46J7Bsl/mUL5Snz/1swjVf7uw3++frl7dyU7Rc4pT+Upz8Ko+
xrPmzk11fPLEE0/srIuzvlewmp9HchW6ovb61T5NSc8mZSrf5/31U/3jk66P
spX1a4j1k1zlP+Qqv43ubdXdr6Ju/sHSpanzSqhqRspiLmaqUGUr6lb+S65C
V0xTp2p6pkqTrZaeZv9aYr0kV/kPucpvr7322gnvA5o/Z52P8qh5dUHGvBKq
bFVF3WqQY9T+Y9b3CpYruQpdcei45GeR1haRqSbaa07g1kvtX0+sj+Qq/yFX
+a3W8ARd7wEW8+IGNa6fXla1Fqvs4+y3nqqfmzZtMr9fsDzJVeiCvfr+KVNZ
ZxhXTeplobmUrLXCtJKr/Idc5a8axwUezAE8M8fcuji7e8sXreYaDnp8w8PD
5vcMlvvzSK5CS284h0w1iEk92JkPiGklV/kPucpfb7755gnPfvX7ts5IWS2i
VhV62qxZpR1ndO/fPM5qH5/1PYPlSa5CSzd8lEw1qOqNmHQNmQ+IaSRX+Q+5
yl+1Zifoeu5X2b+hKFVjCgbMK6HKZy7nKml9z2B5kqvQSu1lq32X4p459KjI
5sqL46+j5gNav87ovuQq/yFX+etRXXvRlpkpyrSovBJa1nH+7iWXFHJ8n/nM
Z8zvGyxHchVaqLU/SZnqmDeQqfKYNB9wzfn2rze6LbnKf8hVfhrtr15F34Ym
5yrNV5xx8smFHOOp7ddKczit7yEsVnIVWpjUT/2wKc3d83dQ99wxdv2i15Sa
FfaTXOU/5Co/9aW/epG56ojXv77049Wey9pnS8ctlbXklIMPzny8hx56aOvM
M8/s1LDWrVvHHlc1l1yFVbvyjOTny4ZrAvN8UmeT5gNSs8Jekqv8h1zlp+ot
F3Q96+u4tkoWtb5KuUZ5x/JcVNPSHldh3sqbtVTPuuiii1rXXXddpy5pfa9h
OslVWKVaU5X0HLlhaWCeS+qu5k9Ss8Kskqv8h1zlpyeeeGIl89+q8M3HHpu6
HhXWh6T6/ynDKE+5vm+Xcu9bjjsuV2bUOjr1KGHuoNuSq7AqVTPZf79i6vzo
pqvOsL/PMLvkKv8hV/lp0PX8reu+VaGaW6c9rJSbwuyk/1ZmUj1LH7c+xqJU
BlQeDHK+16qepVoWdSz3JFdhFe653H7Mj9VIb/f6Sa7yH3KVf956660Tnr0L
zj3XPC9gNqNzBt9wxBGZ33NVw2JNljuSq7AKv7Ag3xh99erVk/aS7/all15q
rVq1yjxL5HHt2rU9z00fW13A3u5Vu5KaVe0kV/kPuco/lyxZMuHZW9eeFThZ
1efU0131ujTzBlW/Yn6gG5KrsApPPCLfGF1rckVSdtq2bVsnW02dOtU8T+Q9
t2Xt98K4jyt3iaGhIfNjzaL2era+3zCb5Cr/IVf5Z3Q/4Ouvvto8D2A5qq6l
uYPKWdqjLEh4/9U9YX1fNl1yFZZtr/5/aeyVnZQ5hDLIIN/Dyl27diWem/5u
7969PWtarnkM/TFqKbnKf8hV/jkrsj7HeuyP1amMlTRnUH0EmRdoJ7kKy7RX
/799vqq3Q7OHXslOMR/fV9dpf16/r1WJGc4zPLfOfL+Yjy+7bFnn48MXDduf
V4rzpJ97PSVX+Q+5yj+DrmevahjWY32sXq3LiqtfqU+k9f3ZVMlVWKZJ+/9O
ss8YPsxOM982c9LHpr52rK6zdetW+6zRK1clnOfGjRs75zb92OmxH3/66afH
alrt8zQ/tx7nSK2qvpKr/Idc5ZfqAxd0PX/r3gsQe6v+7Fo/F+5DHKq/+/3/
+l9b09/0pknvycwJtJFchWWp2kX05zzRPuN4ZY5e2Unrr5yo6+Q4T52bSDq3
sKbVWWNmnad6nCe1qvpKrvIfcpVfRnsBnjV3rvnYH4tVa6rO6rOeqtv9999/
0t+pt4n1vdo0yVVYltqLNu5n/5TfzJetwuw0/7fmx35cdZ09e/bY1nVyZsh+
56Y1Zr1qWtbnSK2q3pKr/Idc5ZfRXoCqXVjnACxO1afS5qleqk8ge1xVK7kK
y/CGc+J/xpd+KGht/Xy+XKW8FGanuI8rk5jWdQaozfU7t7CmtWHDBidzFbWq
ekuu8h9ylV+qn2zQ9Qy+avly8yyAxag6VRGZKlR9LKzv1yZJrsKifWllOycc
OPln+7Ap7Y9taX/O9qB1+tvyZSvN8+uVncLegSZ1nZjzOezV6c+x37mpt4V5
fw5qVV5KrvIfcpVfRnsB0mPdH9VLPYgbHw2g5o1a37NNkVyFRZvUV33lxUEn
U8nRtflyVb/spL4WvXoHVpo3Dg5aa96R7Tz39ZSPmcsY9ufo9F13KFdtvdT+
nsPBJFf5D7nKL6O56i9vucU8D2AxFlmrCqVmVZ3kKizSPZfH16qOecMrtapQ
zQmMfQb0Gdv3y04mfdfjcuRJ7fM8fyxfpT3Hfj3lTfuux5zjeSfa33M4uOQq
/yFX+WUQeRZbZwEszuhrW5SbNm0yv2+bILkKi3TRKfE/z2uWBxMylVTO0tzA
2GdAnzF+r+xUeV0noVb10vygk6uy1qx69ZSXZn3XI8d/2GvGcrT1PYeDS67y
H3KVXwbkKm+dcvDBpeQqegNWI7kKi1Jj7LifZdWqopkqVHkr9hnQZ4zfb8+q
Sus6cTmynaWUqUJja1YJ59mvp3y/vYSrOkfN97S+57AYyVX+Q67yR9Udgq5n
8VuOO848C2BxFrW+6jWvec2E/2av4GokV2FRzj8p/md7wzVBYq4apIdFvz2r
KqnrxBz3jKnBhEwltw5lO8d+fdf77SVc9jk2sVfFjz891VtHPzK19c0P9nb7
B35j9L6hodOxnt65YsVScpUfRveuYk9gv9RaudjxQkbnvPvdk/5OY37r+9d3
yVVYhOpdEPdzrczUK1PJxL7rKbJVrz2rSt9PN+GYlaGiuUoump7+HLv7rsed
W7+9hEs/Rw97VfzT8kNa3198bOtvPnJCa8eCt3X82pnvat03ezZi7b37wgtT
vdeTq9x3xYoV5CrP/YOlSwfOVdd/9rOdWmb339EXsHzJVViEQ8cljL/bmalf
rhqkh0W/PatK20834Tmm7BSXqaTWW8X2XU84z37nFta0Su3PEXeOp9jfb0X4
q//+6tbzv/e6To4iP6Hvkqv8Mbon8IJzzzXPAVi82ht4xskn58pUHxi/J7Rf
dPffK5Nb37++S67CQR2kVtXtjOPzZatefddL20835ji7e1UkmdjDIuE8e51b
uMYsaS/hMs5xxpFj+5NZ33N5/dnKA1t7Pn5066//81vNx7mIVUqu8sdortLY
2ToDYLn5SjnpiNe/vmeW0se1Nkt1qvDfRnOV9pO2vn99l1yFg5rUA1B7VGXJ
VXvuyNcfMOy7npSdCt9PN+GZNjov6JmpQs+blj5b9espH+4lrD4dZWcq9f8b
XWJ/v+VRtSnN8aMuhU2VXOWP8+bNI1c11I3tn1HlpqhJn3/V8uUT7hXte2Z9
//ouuQoHMakHYNZaVah6XMR9vaBPtuqVnQrru97j90Q3zAxSZapwPqB6W6Q9
z377ce3atavY/hwJx7XmfPv7LY/kKURylU9G9wQmV2GS1199NbmqYslVOIhJ
taq066riXHlx7wwTlwX6ZaeB+673OJ5ea6p6ZavE3uuRc+zXU77QvutJ51jD
NVXPLjmytfXsd5qPZxFdkFzlj9FcpZqE9fgd3ZRcVb3kKsxr0bWqbhednT1b
9ctOufuuF5ypQjVvMLGPReQc+/WUD/uuJ+0lPNA51ixT/eOnX9v6xnnvMB/H
IrokucoftQ9R9zNaY2fr8Tu6KbmqeslVmNcyalWZ6lYx+SPMTr3qOqn7rvf5
voNkqtTZquscw77rccca7iWsfFVEltp3jjXLVOpJYT1+RXRRcpU/Rp/T5CpM
8tPLlpGrKpZchbnGryXWqrpdszxlthp35syZPbOF5sr1nAuY8vssPT4YOFN1
Z6ue661SnpvOKzEzZriG+87xNPv7LIvql249dkV0VXKVP0af1eQqTJJ+gNVL
rsI8aswdNxZX34kic5VU/Ut5Le77Va1qS0n7/g6i1lsl7htcsce8tv06ftT+
Hkurev2VMe9vy5zZrQfnjfnwmbNb33wPYn19cJhc5YvRZza5CpM87dRTJ9wr
6tFvff/6LrkKs6r9i6YeGDMef0NQeKaK1q70PZLyQBWWkam6VV9By/N7+zT7
+yuL/7T8kMJ6U3xt7uzWI2fNbo28b3brb88bQvTKnYsXkqs88KGHHiJXYWrf
ctxxE+6VW2+91fwe9l1yFWZ15RnxY3LlnjJzVXe+Ul+LxL2uapyr5J73ta/x
SSnXXZWg5nha32NpfP73Xjdw//SvnzG7teO9s1u73m8/7kUsU3KVH2pcHH1m
a08j6/E7uudd7fsieq9s2rTJ/B72XXIVZnX6ayePxcuuVSWpeYdLPxS0Zhxf
bLZIqotVkau65wYuLfi8pK6VcukfL47/+NBx9vdYP5/95JED16a+c479WBex
KslVfhiXq6zH7+im0T2Bp02bZn7/NkFyFWZxdIltraqfe+4YW491w9KxvKV1
Wd3G5a/wY/p8ncfo2rGvFXeeVeYqqe8Xdxw63mi9TucWPV+dk/oq6pro2kSv
V9K6ta2X2t9rSWruX946lfLUt89mnh82T3KVH5Kreqva3V/ecov5cbjgWXPn
TrhPFixYYH7/NkFyFWYxqV/FS1sC80xVtLF5w5FcVdQ5Km/Fff2Zb7S9z5JU
j4o8mUo9KLR2/9Fz7ce3iBaSq/yQXNXbGW99a+eaqF+Deow3dY5k3BzAm2++
2fz+bYLkKsxi3BzA894VmGcgclV+k/ZgXnO+zT3WK1Pl6funGhXrp7Dpkqv8
kFzVJ1edfPKk66PeDardqOe4enw0oZ4V3bdKarxvff82QXIVptX1OYDkqnxq
fmDc91DPR/V+tL7vQvPsT6W+FNSoEMlVvkiu6u2frl7dmnLwwbHvaVFV21LW
0jqkIrOWvtbvLl7cyXP6+hbX4Q1HHMEcQCPJVZjWJs0BbFKuklqDFfd95p9U
/X0W5/cvOTZzptKeU9ZjWURXJFf54bXXXkuu6uOVV1yRKlfFqawV5q1Q1bii
ht9L/1+5TJ+nmlh3nlG+s5iHGFerog9gdZKrMK1xe1b5OgewablK2Tipb731
HsHqp541U6l3uvU4FtElyVV+qH1du5/PU6ZMMc8xLqqcE/d+VqWu1KpmzZpl
ft82SXIVplFj67jnhvqcW+cfclUx6rWM+17K01Z7WuXpU0G/P8TJkqv8MJqr
VFuxzjCuelo7T8S9p1XhmXPnOpMn6VdRreQqTOOiUyY/N1TfsM4+5KpiVf0x
7vtZ7WmVdf4fc/8Q4yVX+SG5Kr2ag/fmY49tTKb60xtvnHQs1Kqql1yFaYyb
A6g+ctbZh1xVrL3mA648o/z7rNustaoH55GpEJMkV/khuSpj1sjQx6IIf/eS
S0zOU33V1ScjejwPPfSQ+T3bNMlV2M8mzgFsaq6SSfMBO695hWutHh0+nr5/
iAVJrvJDclV2r//sZ0vPU+rvrgxndY7RPYCl7hXr+7WJkquwn3F9AH2fA9jk
XCWT9rSqaq3Vz1YemGnPX/anQuwtucoPyVX5/IOlSwvPUqqDac6fcpvluamn
e/TYTjjhBParMpJchf2c+cbJzxPf5wA2PVdpPuCM4+O/t+6Hsve1yrJXFX0q
EPtLrvJDcpVdttJaLfXCUG8I9XK3Ph8Z11P9kEMOoa+6oeQq7KXGz3HPF1/3
AiZXveLo2uS1VmX2sfjHT7820/w/6/EqYh0kV/khuWrwbJV3vZX6ly8499xC
9xAuOlNJ+v/ZSq7CXiatrdpzR7FjeBeNO+8m5SrZa63V8CnF3muhWWpV3znH
fryKWAfJVX5Irhpc5aIzY9YjZVF1K8tzUL6LfV8eHja/R5suuQp7Gbe26pg3
FD9+d9G4Z1bTcpVceXG12SptD0D6/yGml1zlh+Sq4vNVlvqV5gKq5qUe7hbH
rL5/p516auyxLViwwPz+RHIV9rapa6vIVRNN6mMhi+y//k/LD0ldq6JXBWJ6
yVV+GM1VGmNb5xMfVC8/9UhXzlJvv9Du9VTW8/9ubX//uF7qAZnKKclVmGST
11aRqyab1MdCFtUjMG1vdfb/RcwmucoPo7lKY37rTILle/3VV7emTJkS+/5L
P3W3JFdhklsvTRhDN2BtlSu5as073MlVvXoEFtXH4hvnvSNVrhp5H7kKMYvk
Kj8kVzVPvcZx77vq+3fttdea35M4UXIVJqn5XdGf4ybsW9UrV90wM6g0V608
ya3XQNlK6+virs2a8/PdZ6Fp96zSflXWY1TEukmu8kNyVXPstZZq2rRp9FJ3
VHIVJrnolMk/y6e/rdpxvKVxtRnlHOtcZf0abP18fK7SnsGD7Gv17CePTJWr
tjEHEDGz5Co/JFc1w17z/mbNmsWevw5LrsIkTz9u8s/z0g9VP463Uvklev7k
qjF1H8Q97xcN0B9w5D+/lX2AEUuSXOWH5Cr/TZr3J+mj7r7kKkwy7mf6hqXV
j+HJVe7lKs0HTNozOG8Pi61nvzNVrnr0XPsxKmLdJFf5IbnKX//0xhsT+/1p
LRX7/dZDchXGqbFx3M+25oBZj+mblKuWHu9mrpJJewZrz7M891yaTPX1M6hV
IeaRXOWHK1asIFd5aK8a1QknnNB66KGHzO89TCe5CuNM6gWoOoX1eL4qz3tX
TKZ5XVBprtL3ix6DS/uHxWVPrbMqK1extgoxn+QqP7z11lvJVR7Zq0Yl6aFe
P8lVGOcN58T/jFuP46t05cWTz3/m1KDSXDX94Jia2cX21yZUe5nF3Sdrzu9/
j3Wbdj/gb76HXIWYR3KVH5Kr/LFXjUr9/vRaW99vmF1yFcYZ12PdlflnVZk0
z63KXBX3/V2bixnXd33mG3vfX1H/8dOvJVchlii5yg/JVfW3X41KvSno91df
yVVIroo3qZ/46LygkkylPYhjv/9a+2vTbVxdT2bpX5E2V7EfMA7iU8suaT17
9Qrz47CQXOWH0Vyl8bl1TsD0/u7ixdSoPJdcheSqZOOefRvUl6GCXLXmHfWY
i6k1d7HX6aO977Fuv3/Jsaly1XfOsR+fYn18cvGHW8/deE1r7wObW//6039u
Cf2pfGV9bFVLrvLDaK6S2uvIOi9gf8+aO5caVQMkV2GccXtXqY+D9Ri+auPm
uC2aHlSSq/R9ot9bexVbX5O010nZnFyFVfvM8qWtH9/95dbPn/pBKwl97ImF
55gfa5WSq/xw06ZNk561bzjiiNZd7dfOOjdg9kyl/unUqPySXIVpc5VL/RKq
Ur33otdBvSSsela4ui9zbO/E45Lvr7y5ynpsiu4Z1qRe3vGNfTWpNKiGZX3s
WVUWfPG2NbnqbeQqf5w3b96k5y3zAd01ae7frFmzqFF5KLkKyVXJJvW72/O+
oNRMpTVccd9XvTSsr0mccWuspr+2/31GrsI8pqlJpeG5Gz9nfi5pVabqPl/9
f+XJtHU3cpU/ai8j1Tmiz1zVRKwzBE701ltuaU2ZMmXSa7VgwQLz+wjLkVyF
5Kpkk9YOae1Tmbnqhpnx39fV/cMSeyeSq7Agn7/l852aVNHUZa1Vr3NX7e2Z
5ct6/ntylV9G9wcOPe3UU5kT6JBxvdS1lsr6/sHyJFchuaq3WtMUvRZl72MV
NwfQ1bVVMql34ksrk+8xchVmsSx+9cI/OL/WSrkp7blonqDmRka/BrnKP1Xz
iHvuak6g6iTWmQLv7qx9i74+rKfyW3IVps1VWmtkPX63MKmPeFn91pP6q9+w
1P5aJLnnjvhj3npp/3uNXIVpLBPVgqzPL8kXb1ub65x+tnu0M08w/DrkKv/U
+O2EE06IffZq7tlVy5eb54omq32q4l4bee2115rfP1jezyW5CqMuOiWmD0ED
+6z3ygxl9QWM6wMYODwHMDTumMlVWJRl8/wtN5mfY1St/xoU9fJQvWvXH/0B
ucpDe2WrgHmBpvbaq0refPPN5vcPlvMzSa7CqOxfNdG4fndTDyi+f4W+Xtzz
tw61wrjjTttrnVyF/awCl9Zaab1UkbzwwgvkKk/VOC5pTmAwXrv69LJl5jmj
af7W6ae3Tn1V0PGkV01+XQ499FD6AXoouQrJVf1NWj9UdM0qqVal7299Dfqp
+yN63OQqLMoqcGWtlfJdlp7xaSBX+e+SJUt61kdmvPWtTu8hvO2WW1rfufCC
jn87462tR//jqfv+e/s1V7cerEHd7Rs3rm7tmn9u68kjj2g9s38wwfVtD4vk
K+YD+ie5CuO84ZyY+swh9mN3S+P2vg0KXGeVtK7K5X4V5CqsQvVhqArrtVbK
dUVnKkGuaoaaWxbXgz1wPF8pi0RzSJzKK7vnzW2NXLq4k8Osjzv0W5ct62TB
fsd//X4TXwvtRWZ9z2CxkqswTq2LiXseW4/dLU3qJT70+qCQXKUeg3Ffvw61
KnIVlmnRc+L6YbXWKrpHVZGQq5qjxnVxewdHdSVfjSy+JFWmSspZymR/tcKm
R4fyVFxtqpfdr8FRRx1lfr9g8T9/5CqMOrqk3mP8KrOD1H5Tg2SqpP2q6jT3
klyFZVl1rhL99oMqw7IylSBXNU/VrqZNm9Y3X6kvu9ZfWfW3+P5bjsudq7p9
6tApnVqWsk7Zcwbz5KnQ6For6/sEi5VchUnGPX9Vs7Eev1uatM5qkB4W+nf6
93Ffd3St/TkPkqvUV5JchYNqkas0F6/KtVZp96jKC7mqmWqMp3VX/eYGSvW3
OGvu3E5/8CpzVRGZKk5lrLg61sj27a1n2tfmJy++2PHlvXs7f/7f555rPbF7
d+uR++9PPNbtV3821Xy/Xr6TXOW15CpM8pjXxtQfGro3cLdLPxT/njR/WpAr
V2keYdzX0/exPtdBcxX1KixCi1wltAdUFef347vvKP1cyFXNtl/PwKiqYalP
eBX7C5eVq6J1rB+27+1f/epXk342fr5t66S/U87663b+Co9Ra7nUR6OI4yFX
+S25CpOM2xtY/catx+/Wah+ppB4Wa94RFDL/T1/f9f2qyFVYlVa5Smhf3jLP
rYg9qtJArkL50EMPZcpXQQUZq+xc9dwpM1v/smdP7M+FMpU+Jy5biZd27mzt
vvCCTjYr6niYB+i35CpMMq7X+vQj7cfvLpjUwyLLfED1EUya/1fHdWzkKixL
y1wlylpr9ezVKyo7B3IVRsd+mh+YZv1Vt2844ojWgnPPLbTfRZmZ6h8vHt73
MxCXnZS5wuwVJfz8X7av1d+/eXphx9R9PTU/0/pewOJ/tshVGOeGj8Y/V/fc
YT+Gd8G4vYJl2v6ASf3/6loTnHk8uQrL0TpXlbHWqow9qnpBrsIktYfSrFmz
MuUrqfVYp516aqeWNciarKcOPbj0TCXC/PTPX1zb+e9/Wn1D5+/2Xrmy86f+
W+jjYd4KUbb64W9MLTxX6bpbv/5YrOQqTPKllfHP0qb3rgjVPL3DpsRfo5Un
BT0zlT4e9+/qOP8vNO581pyf7l4jV2EvrXOVKHKtlfbjqjJTCXIV9lNzBPPU
sEK7c1aWetbjM04uZe7f/3vppQk/A90fV0aSz885vfMx/Rn+XffndRPOGRzE
L0VyFftX+Se5CntJ74reJvUHlEn7BSft/xvUdP6fVBaMPZ9L091n5CrspQu5
ShSx1qrMPap6Qa7CLG7atKk1PDycO2OFao8szRu8avnyxPVZu8+YW3iuipvz
18lOhx+2r0al/68/RViz+seLFo3lq/bHwszVjWpggxzXFyK5SjnW+rXGYiVX
YS/PO3Hyc1LzvazH8S6Z1B9w+sHtvDE/mJCp9N9Ja6rq1v+v26R8uefydPcZ
uQp76UquEoOstbLKVIJchXktKmOFhlkrrGsNsi9wnP/3A/NjfwaUk5Sb/v64
YzqfF66Z+ue1a/bVuML5fz+5bGlsrlL/i0GO7bL9Jl6LFStWmL++WKzkKuzl
DeckjJdZY7VP1WpmHB9/naK915N6quvfW5/HICb18Uh7n5GrsJfP33JTyalj
cH71wj905gpK7UX14m1rWs9evbydw5buO4+y96jqBbkKi1BzBZUFNH8t7pmf
R/UdLzJX/eyujZ17XvMAf75tW2vvlavaGWmoU4dSlnru7TM62SrMV6HKUf/3
t87bl83G5gkOdf69vk44r1Afy3tsZ0V6Ad56663mrykWK7kKe6l6Q9xz8Ial
tuN419T+vUnvGeql3qunutZo1Wn/3zg1NzR6XppDSq7CItT8OxgMchWWoXKB
5rLl6Xux7z2wwFylLCSUgZSfOnWpdn5SnUp9KcIsFdaiwlqV/hThfEDNA9Tn
q24Vfh39qa+rvhZ5j4+9q/yXXIX9nHHk5OdgXXvWlamyZtL7hva1SvzYcvtj
H9S43oja/4xcheQqNyBXYRV25yz1EE963wtKylWqL4UoAylHdfewUF+/7lwl
9N/heqxw/VSYs8K/09cJv8YgcwGjuYp6lX+Sq7CfcftYybr2ras6X/Ry0dn2
x1yEg/RYJ1chuap8yFVoodZmqY+71mclZa0i5wFGe6t3+qMfflgnW/3Tjasn
7EMV/l33vL/uutdPfm9Z5+vp3+vrdJP3+M7fj1zlu+Qq7OfoEn/rLEWrrKle
6XHXK2qde6pHjTs/7X9GrkJylRuQq9AVVc8KSspVWgsVJZzrF/YC3Defr/33
4Ry/Trb6rfM6f6c5g92f3127Csl7fNG+FeQq/yRXYRrj+q1PP7LasXtd7LXW
qtu6r6kKTeoFqDxOrkJylRuQq9AVy8xVqjF1E+7nq8wUzvEL5/xpPl+nl8X4
mqufbdyw798pb+nz9ac+p6h6FbnKf8lVmMakuYB13W+pbHuttZI+9f1Q3TLu
HLPcX+QqJFeVC7kKXTHaS7DIXBVdXxX2TY+q+YAyui+wclncv+leo/X/9u4t
LFdpjqT164HFSq7CNCb1BXz/f6pu/F43k9Za+dbzI6leRa5CcpU7kKvQFaO9
A4vMVcpKIpqplJm0lkq5qfvzwxqV/ozmM/X96/4aYbZSH/e8x3d9JFctWLDA
/PXAYiVXYVoXnRI/fv7G/6pm/F4349ZaaZ8qX9ZUkauQXFUfyFXoikcdddSE
9wrVcIrKVfJfnn66c893MlA7L6l3eqceNb5eSr3Tw76AymGaDxj2s+jMFxzf
O1ifr3+nf6+vE9arwvmEeXxk/4nvk4ceeqj564HFSq7CtCbtEXzWrGrG73VU
a6jCupX+9C1T9cpVqnGSq3BQn1h4TuvlHd+wjCReQK5CV4y+V1xfcK6K610h
lJGi/dX13909ApWhRJjF4uj+/DyeFOm1rr2WrV8TLE5yFaZ1ekzvilBfejBg
dpUV4+6JrZcGqe8tchXG+ezVK1q/euEfCk4YzYRchS6oPg3R94ovFZipwjl/
WgMVJcxVqlWF8wHVwyKsYXXqVR+Y36lfqQdgXK5SZhv0+D7GGiuvJVdhGtUz
O27sHDr0dpsxPbph3D1BrqqXTy7+cOvHd3+59dyN13T+v+WxUKMqnl/+8pfk
KjT35ptvnvResbvgXJVUs5qQvQ4/bHye39C++X/h34XzA/VnN8pq3Xtc5TW6
xkp7e1m/LlicO3bsSJurhqpNVeQqlxw6rneuCugN2Gjj7gfNGyVX1cef7Z7Y
R1h1ImWb52/5fOuZ5UsrOw7VqP71p/9casZoKmne6++55x7zcQn6a7THuiw6
U4Wq70Q3nbx03DGdWpTWSv3T6hsmfL7+O9zXKuy93k1Sb8Gs3rf/xPNXHw/r
1wWLU7+bIldhL1V3iBs3R2U/q+Z6+tsm3w/qzU+uqofP33JTqnG5steLt61p
Z5/lnZpSkcdAjap8yFVobTRXHVZgL8C4+YC/3LVr3/0f7lvVTbgvsP6M0v35
g/SqiLP7GtC7wi/T5qrbb799ZsWxilzliGlqVaE+7cuE6Y3rKX/6cUHqe4xc
ZedTyy7JXR/6+VM/aO19YHNn7qC+ziDHwDqq8nnggQf6vtffdddd5uMS9Ff1
Fe9+nyiyx3raulU34fqquMwlfrl3b+tb43MFizTau8L6dcHi3LJlS6pcVW2i
GoNcZW9SrWrBbHpY4CuuvHjyfTDzjZPvJ3KVeyobFYXymWpOqmmlnTv43I2f
K+z7Q2/S5CppPS5Bf43uXXVSBblqe9t1Fw23nh3vvx4lKVOtXbu2NX369M5x
Ht0+zpX7jX2tIo7pneQqb1XNn1yFSSbVqvbcET+WDsbnA/rYTxyT3XBN/L3w
0sr4+4pc5YZV7Aul3KZ+GJo7GO2HoVoXVEfa+SmPPfaY+dgE/bTK9VVfaHtW
JL+oR8TGjRtbe2P6BYqn29lr9erV+/JUnMpE6j0xSL8N6lX+euedd/Z9xq5b
t25XBTFqEuQqW5NqVYvOHhtLx+17Gzr/3bbjfKxW5ey4+0B9JMlVbqq5dxaE
/TCifTKgfHbv3p0qV6mflfXYBP00LldtLjBL6Wupj/lhr4p/T+pW2WloaGif
/T4/zrNyZqzurzFt2jTz1wWLMe0ztu22cpJTb8hVti46JblWFY6nNecv7nMC
1lo1zsOmTL4Hlp4WpLrXyFXVW+T8P6gHTz31VKr3fK0PsB6foJ/G7V/1sQH3
BQ6z1NEpslSZnjU+V7BfTjw/0mdda86sXxcsxu3bt6fNVWuLzEtpIVfZOvXA
5FpVt8pPSc8Z1lo1x7jeFdpLmlzlnlXM/wP3+OlPf5r2Pd98fIL+esghh0x6
r7g+Q7baPT7Hr4ospcyzYsWK1gknnJDp36lepvmCl+030ei6Kqmsaf2aYDGq
70+a5+v69evnF5eW0kOusjNpH2Cto0k7ppZTDyFbNcU1y+PvgTXnB33vN3JV
dVrN/wM32Lx5c6r3/ZGREfMxCvpp3FxAqcyhvPSlSIbSfyt3fSwhl/RSeeja
a6/tZBdlpLhMF1Xz8pSlHnrooQnHvWnTps76LH08yzH0kr2r/PGJJ55I/Xur
DRs2TC0sLGWAXGVn3BxAzfNKGlP3WmtFtmqGugfi5gKmqVmRq6qT+X/NJu38
//vvv998nIJ+Ojo6Wmg2iarspAylHBT3/fX3N998cyffhSpHKXvp2NKcQxEZ
S5kv7fdD99W61DTP1nXr1m0sPDClhFxlZ9o5gN32WmtFtmqGST0ibzgnIFc5
IPP/4Cc/+Umq9371tNLvX63HKuinyiVpakdpDbOU8lLV56K6lnLZvHnzUp2T
PkdZzvo1wGJN2199/fr1y0oLTn0gV9mYdQ5gt0lzwQKyVSNMqlkpp++5PCBX
Gcr8Pwi5++67U73/qy+79VgF/VV5JLqfVRZVK1LNyCJL9VKZUXMPlZ2U9XSO
+lP/rb+nRuWfek3TzgFsO72KDBUHucrGrHMAo5Ktmm1SzUp7oZGr7GT+H4Sk
na9y++23U7PC0tX8uzS1njCfKJtE1z4hWpq2X4XVvlUh5Cob88wBjNovW239
fLVjfazOXmvtkuYDkqvKlfl/0M2zzz6b+nerDz74oPmYBZujaj3KWd1S30GX
Tft7qvFctdogTu2DXFW9SXsBp5kDGLVXtpKrPlbteB+rU7k56XWP6w9IripP
5v9BHGnnAsrHHnvMfOyCiOiiWotahzmAglxVvSvPGGwOYNR+2Wr+u8fqG9Y5
AIt36YcS6pUHBq3RJQG5qiKfWb7MeggPDpJ2j2B6AyIixpthH2DzWpUgV1Xv
eSdOHgef/rbBxtf9stX0I1lz5aPKyzOOT5etyFXlyjxAiCPtXlZSc12sxzCI
iK6oPSu0BjVlptprtWdVN+Sq6tVeQ0FkDKw+BIOOsTWPMK5PXKjWXK1eWt2Y
H6txzx3Jr3t3tiJXle/LOx6xHsaDY7zwwgtZ5q90xhHWYxlERGvVzydtphp3
VfUpajLkquoNClpbFadqUkn1i9Cht4+Nxa3zABZnr7VWYbYiV5XvEwvPoScg
TOKBBx5IPTbQOIK1VojYZJWp0vb/G/dpF2pVglxVrUk9K4qco6e5Yee9q3e2
CsZ7WrDuyh979odsZ6vvDpOrqlA9LP71p/9sPZR3nl+98A+tn+0ebf347jta
z99yU2eNWrfKqNG/0+dpvqX+nf59XUi7T3CoxhP0XkfEpqr1plmemW2Hq01P
yZCrqlU9sIOYcW8Z4+ykPY661bor+rH7Y69s9fv/nlxVlc/d+DnrobxzKAft
fWBL59o8ufjDhVxnZa9nr17RyWau1wmz9AmWW7ZsMR/bICJWrfZKz5ipnq40
OPWBXFWtcfsBD9qzopfKTL3WXIWqZyBzA/0wKVtdeCy5qko11m86ylK6DkXl
qH7q+6im5WIt66c//WnrjjvuyJytqFshYlPMkankUNXZqRfkqmqd+cbJ4131
yi5znK25ftpzOPp94xw+m3zlg3HZilxVvZqv1kTUv0N1JMtrr/mYqo+5RNb5
gOGcQNZbIaLP6vdHOeb+OTX/L4RcVa1BTJbRGLiKsbZqV/16WgTkK2+MzgMl
V1Wv5qk1aa2VckxVtam06nhUM3Pldciyp1V3Lwv6BCKij+boURG6turMlAZy
VbUGMRmm6vVNGm+nmRsYjOcr1l/V1+46JbnKRtVNfEd1OdfyVFRlXFfmZv71
X/91njEE+1sholdm2Z8q4rbKA1NKyFXVGjiQq6RqUVrXFXc8cao3+8bPVX+c
OLhhtiJX2elrHwutY7Ke75dV9RV0ocdFznUEnbkyzAtExDqrGpWegXky1bp1
63a50lM9DnJVdVbRYz2rynRZ8pX2Fl72n5kjWDc1/5NcZatra30GRbUf1YCs
r2te1d/Ckl/+8petzZs358pWUmMSelogYt3cvn173hqVMtXe9r+daRCXUkOu
qs6kXGU95pZZ85Wc2R6rr13BHlh1UK/R759CrrLUlz2DtU6pbjWqJDVH07J3
YJ4egdF1V8pX1uMkRMR+futb32rdeeeduZ934w5VHpQyQq6qTpdzVWiefBWM
r8NinqDbfncFucparUFypX9CHpQLXV9HlVXlXfUvtELZapC6ldRY5cEHH2yN
jo6aj50QEUO1fkr1qZx9KWpVpwohV1VnHXJVaN58JbUXlupYzBV0y+//MbnK
BbW+p45oHmOd5/3107KnheYE5l1vFVfD0hos/W6YeYKIWLUjIyOd3/MUUJva
t56q/ef0iuNRbshV1bnyjMkZRH35rMfbvdTaL/U9SNs/MKrmCmo9luUaMhyT
XOWOL9621mwMnwdlKutrVoXW/UXy9gnsl7Puueeejspbym9Sta06S2YcUz1M
rF8LbJ7hc0T5KXy+FJWjIplqo8s9KuIgV1VnXK5STch6vJ1W7bOVt4YVjPe8
YF8sO8lVbmk59ywLquNYX6sqtc5Wefa3aqL6nbh1prF2gB7ViM7bzlSrq85E
RUCuqs6656pQ5SLtgXXMG/LXsKzPoYmSq9xSc+oseyakoSl1qqjW2eonP/nJ
QP0smmDT+3UMsJcqYh0crjoPFQW5qjp9yVXdah1WnnmC7DVcveQq91Q/Olf7
WDQ1U4Va92FXP4ui1lz5aNNzleZdWb8GiCW4rS79KZIgV1Wnj7mqW62hWvqh
sb2SoucZlfVW1UuuclPr2kgcP9s9an5dXNCFPcdeeOGF1gMPPGA91nHOJucq
rZOzvv6IBfv0bTWuUXVDrqpO33NVt5oreMPSoHXeu5pzzq5LrnJXy150UVQ/
87nvX1Zd2XNM+eruu++2Hvs4Y1Nz1Y4dO8yvPWJRqn/6bZ7kqRByVXU2KVdF
3XDN2Jos9b6wPpamSq5yW1fmA6oPvPW1cEnX9hxTXwvyVTNzlXp1WF93xCIc
z1Or6tbrLw3kqupscq5Ce8lV7qr6kAuo/7v1tXDRZ69eYf3STED7XSlfqXbR
1P4WTctV9P5DH1Tf9PXr1y/zMU+FkKuqk1yFlpKr3NWFNVaa72Z9HVzWhbVW
SWiOoPa+alIdq0m5Sr3/ytgbCLFsx+tSa9tZar7PWaobclV1kqvQUnKVu7qw
l5V6E1pfB5dVTdGl+YBJqI/g448/3tp+/9dam268vuPtf/5F8/FV0TYlV9FP
HWvktnHXtl1V975+eSFXVSe5Ci0lV7mrNU3b+zev1r3X06LaY1LvkZ2LFzrt
w5/+ZKoxXFNyVdbef6oPqDbQ/v9DiGXblBpUFshV1RmXq6YfGbRWfQyxfL/w
AXKVi1qv3aH/XzZd6Q+YRK9MVQeVrW4jV3XMun+ZMlVTawQArkCuss1ViFV5
4bHkKhe17rFOr4psurAWLom6ZypJrhozZz/14QAATCFXkauwGZKr3NSy/kGt
Kp+/euEfzF6zJPRa+rBGjlw11vsvR6ZaFQCAOeQqchU2Q3KVm1pCrSqfrtWs
fMlUsum56rHHHsvTT31tAABOQK6qzj2XB63DXmM/vsZmSq5yT+3Ba4n2vLW+
BnXVlZqVT5lKNjlX5en9t27dul30DgBwB3JVtY4uCVqLTglapx+HWK3L306u
ck3Vi6xQb3fr86+z1uviQnzKVLLJueqee+7JWqd6mkwF4BbkKsRm+P1LyFWu
ablvleayWZ9/nVWtzxofX8Om5qo8/dTp/QfgHuQqxGZIrnJPq7lkmjtmfe4+
aNlzZO8DW8zPvwybmKvy9P7THlXW40cAmAy5CrEZkqvc8bkbrzFdn+PrmLxq
LfcJ/tnuUfPzL8Om5arR0dE8vf+GrceOABAPuQqxGZKr7LXOUyE+zh+zUGub
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
AAAAQKkXD4UaYQ==
    "], {{0, 530.}, {854., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{556.2421875, Automatic},
  ImageSizeRaw->{854., 530.},
  PlotRange->{{0, 854.}, {0, 530.}}]], "Input",ExpressionUUID->"5d64779a-69eb-\
4472-9bd4-acc393c42d0e"],

Cell["", "EndOfSlide",ExpressionUUID->"9608776b-afd6-4805-bbfe-1eb0c141b664"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0222c63a-bab8-4fc8-8c18-a65fcef254c1"],

Cell[CellGroupData[{

Cell["Outline", "Section",ExpressionUUID->"c4a6cb86-9caa-4303-99de-6879e949761f"],

Cell[TextData[StyleBox[ButtonBox["Introduction",
 BaseStyle->"Hyperlink",
 ButtonData->"Introduction"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"b030dd82-11f7-4846-8f88-\
dbe620cf6063"],

Cell[TextData[StyleBox[ButtonBox["Using LLMs programmatically",
 BaseStyle->"Hyperlink",
 ButtonData->"UsingLLMsProgrammatically"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"730842dc-5c22-415d-95f9-\
d9c8919e4395"],

Cell[TextData[StyleBox[ButtonBox["The Wolfram Prompt Repository",
 BaseStyle->"Hyperlink",
 ButtonData->"TheWolframPromptRepository"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"7011e9f1-3577-42b4-8631-\
0987527a548b"],

Cell[TextData[StyleBox[ButtonBox["Chat objects",
 BaseStyle->"Hyperlink",
 ButtonData->"ChatObjects"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"7250d4df-0a43-46b5-ba1c-\
006c041bc804"],

Cell[TextData[StyleBox[ButtonBox["Chatbooks",
 BaseStyle->"Hyperlink",
 ButtonData->"Chatbooks"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"cec0fd06-bb89-4052-963a-\
68646d1166aa"],

Cell[TextData[StyleBox[ButtonBox["Summary",
 BaseStyle->"Hyperlink",
 ButtonData->"Summary"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"b8533899-d4c3-47d0-a995-\
216b09b2e679"],

Cell["", "EndOfSlide",ExpressionUUID->"8797ae39-1a61-4b94-8269-29a81db781f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"49a3161e-d421-4558-94e4-f3bb30de0011"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellTags->
  "Introduction",ExpressionUUID->"cb208bda-92af-4f93-ac45-b3a8c0de83da"],

Cell[TextData[{
 "In April\[Dash]May 2023, lots of ",
 ButtonBox["LLM-related functionality",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/resources/\
Wolfram/LLMFunctions/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PacletRepository/resources/Wolfram/\
LLMFunctions/"],
 " was added to the ",
 ButtonBox["Wolfram Language Paclet Repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/"], None},
  ButtonNote->"https://resources.wolframcloud.com/PacletRepository/"],
 ". Most, if not all, of this was integrated into Mathematica in ",
 ButtonBox["Version 13.3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/guide/\
SummaryOfNewFeaturesIn133"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/guide/SummaryOfNewFeaturesIn133"],
 "."
}], "Text",ExpressionUUID->"ba569715-6f88-4825-a03b-cdda4fb93edb"],

Cell[TextData[{
 "In order to use these tools, you will need to obtain an OpenAI API key. \
Further details can be found ",
 ButtonBox["here",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://support.wolfram.com/62525"], None},
  ButtonNote->"https://support.wolfram.com/62525"],
 "."
}], "Text",ExpressionUUID->"ba4ddd34-1794-4256-8c4d-facaa2dff7f7"],

Cell["", "EndOfSlide",ExpressionUUID->"04e10ec7-b2c6-45df-818c-f0a3de2f5726"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8e25dada-feff-4eca-b86d-17633821c50c"],

Cell[CellGroupData[{

Cell["Using LLMs Programmatically", "Section",
 CellTags->
  "UsingLLMsProgrammatically",ExpressionUUID->"cb3364a3-6bfa-45f3-bfa8-\
ab96109a70ad"],

Cell[CellGroupData[{

Cell["LLMSynthesize", "Subsection",ExpressionUUID->"983f94be-97a6-4567-9563-e110e183386a"],

Cell[TextData[{
 ButtonBox["LLMSynthesize",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/LLMSynthesize.html"], 
    None},
  ButtonNote->"https://reference.wolfram.com/language/ref/LLMSynthesize.html"],
 " is perhaps the most standard LLM-related Wolfram Language function. You \
write some text and it gets sent directly to an LLM."
}], "Text",ExpressionUUID->"a47f09f6-8113-4841-bd4a-5bca95b8a330"],

Cell["Send a message to an LLM:", "Text",ExpressionUUID->"39d83161-dd61-4aa6-9b06-ff71735e55cf"],

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", 
  "\"\<Tell me something interesting about mosquitoes\>\"", "]"}]], "Input",Ex\
pressionUUID->"05a7f3d3-f166-43eb-aa06-90f969baaa2e"],

Cell["Continue a piece of text:", "Text",ExpressionUUID->"1950f32b-02dc-4c68-96bf-6e260e200952"],

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", "\"\<The cat sat on the \>\"", "]"}]], "Input",\
ExpressionUUID->"7590e6c6-f932-4eac-8492-8619ab3c5d3b"],

Cell[TextData[{
 "As with many of the LLM functions, there are options to fine-tune the \
result, most of which are applied through the ",
 ButtonBox["LLMEvaluator",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/LLMEvaluator.html"], None},
  
  ButtonNote->"http://reference.wolfram.com/language/ref/LLMEvaluator.html"],
 " option:"
}], "Text",ExpressionUUID->"fbe577cd-395c-4e68-b6de-f1ecc82917f5"],

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<Tell me something interesting about mosquitoes\>\"", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LLMEvaluator", " ", "->", " ", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Model\>\"", " ", "->", " ", "\"\<GPT-3.5-Turbo\>\""}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Temperature\>\"", " ", "->", " ", "2"}]}], 
     "\[IndentingNewLine]", "|>"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"MaxItems", " ", "->", " ", "100"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"88fa168d-5110-4b61-bd62-25f5415bc599"],

Cell["\<\
One benefit of using LLMs programmatically is that the results can be \
inserted into other code.\
\>", "Text",ExpressionUUID->"121d0ae1-a930-49a8-8d95-8d68630964a9"],

Cell["Find countries that have been to space:", "Text",ExpressionUUID->"5de9e84d-5411-477c-95dc-55759ac466c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"countries", " ", "=", " ", 
   RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<Country\>\"", "]"}], "[", 
      "\[IndentingNewLine]", 
      RowBox[{"StringSplit", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"LLMSynthesize", "[", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<List the countries that have been to space. Return only the \
country names (do not number them).\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"LLMEvaluator", " ", "->", " ", 
           RowBox[{"<|", 
            RowBox[{"\"\<Temperature\>\"", " ", "->", " ", "0"}], "|>"}]}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        "\"\<\\n\>\""}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"_", "?", "FailureQ"}], "|", 
      RowBox[{"_", "?", "MissingQ"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GeoGraphics", "[", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", " ", 
       RowBox[{"Tooltip", "[", 
        RowBox[{
         RowBox[{"Polygon", "[", "#1", "]"}], ",", " ", 
         RowBox[{"#1", "[", "\"\<Name\>\"", "]"}]}], "]"}]}], "}"}], "&"}], 
    ",", "\[IndentingNewLine]", "countries"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]", "]"}]}], "Input",ExpressionUUID->"c298beb2-8580-44ed-\
a8b6-d8f3fb6eb105"],

Cell["", "EndOfSlide",ExpressionUUID->"658a1b9a-e99e-492c-be4d-fbd76529ab48"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b8c73f10-c16b-4e8f-aa5c-329d2b66780c"],

Cell[CellGroupData[{

Cell["LLMFunction", "Subsection",ExpressionUUID->"4f7710bb-0ec9-49fa-a5d8-e5d9f2e3bfe5"],

Cell[TextData[{
 "Use ",
 ButtonBox["LLMFunction",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/LLMFunction.html"], None},
  
  ButtonNote->"https://reference.wolfram.com/language/ref/LLMFunction.html"],
 " to set up templated strings:"
}], "Text",ExpressionUUID->"879798ce-fa8e-4acb-af95-265bfd0f91df"],

Cell[BoxData[
 RowBox[{"neatFacts", "=", 
  RowBox[{
  "LLMFunction", "[", "\"\<Tell me something interesting about ``\>\"", 
   "]"}]}]], "Input",ExpressionUUID->"9a8bbd0c-e259-45af-80b6-f0ad263c40b0"],

Cell[BoxData[
 RowBox[{"neatFacts", "[", "\"\<cobras\>\"", "]"}]], "Input",ExpressionUUID->"3d96002c-9af7-42b9-8058-d7144f6d96d1"],

Cell[BoxData[
 RowBox[{"neatFacts", "[", "\"\<Ada Lovelace\>\"", "]"}]], "Input",ExpressionU\
UID->"c5fa0121-e4f0-4548-b801-379a481ee87b"],

Cell[TextData[{
 "LLMFunction is like a combination of ",
 ButtonBox["StringForm",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/StringForm.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/StringForm.html"],
 " and LLMSynthesize:"
}], "Text",ExpressionUUID->"3f67c030-c495-49fa-8e5d-35ac0b870dd1"],

Cell[BoxData[
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<List `1` types of `2`\>\"", ",", " ", "\"\<10\>\"", ",", " ", 
   "\"\<mammal\>\""}], "]"}]], "Input",ExpressionUUID->"4f3ec99b-76db-4c08-\
97a9-73da199e90d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMFunction", "[", "\"\<List `1` types of `2`\>\"", "]"}], "[", 
  RowBox[{"\"\<10\>\"", ",", " ", "\"\<mammal\>\""}], "]"}]], "Input",Expressi\
onUUID->"072d22aa-3aba-4a17-998f-0930ee6823b0"],

Cell[TextData[{
 "Or ",
 ButtonBox["StringTemplate",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/StringTemplate.html"], 
    None},
  ButtonNote->"http://reference.wolfram.com/language/ref/StringTemplate.html"],
 " and LLMSynthesize:"
}], "Text",ExpressionUUID->"f8ae5445-116a-4019-bc96-683964f8eaac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "StringTemplate", "[", "\"\<Put \\\"`phrase`\\\" in `tense` tense\>\"", 
   "]"}], "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<phrase\>\"", "->", "\"\<I run to the shops\>\""}], ",", " ", 
    
    RowBox[{"\"\<tense\>\"", "->", "\"\<past\>\""}]}], "|>"}], "]"}]], "Input",\
ExpressionUUID->"a5886458-237d-4ab4-b3ca-204c3a2e35ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMFunction", "[", "\"\<Put `phrase` in `tense` tense\>\"", "]"}], 
  "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<phrase\>\"", "->", "\"\<I run to the shops\>\""}], ",", " ", 
    
    RowBox[{"\"\<tense\>\"", "->", "\"\<past\>\""}]}], "|>"}], "]"}]], "Input",\
ExpressionUUID->"efbe4d21-82f4-42eb-be5c-c7b72b15ae62"],

Cell["Values in the association do not need to be strings:", "Text",ExpressionUUID->"7615a283-b573-4bcd-931c-774189325a66"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "LLMFunction", "[", 
   "\"\<Write a one-paragraph report about `student` based on the following: \
Grade: `grade`, Strengths: `strengths`, Weaknesses: `weaknesses`.\>\"", "]"}],
   "[", "\[IndentingNewLine]", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<student\>\"", " ", "->", " ", "\"\<Billy\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<grade\>\"", " ", "->", " ", "\"\<A\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<strengths\>\"", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Sociable\>\"", ",", " ", "\"\<Funny\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<weaknesses\>\"", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Noisy\>\"", ",", " ", "\"\<Disruptive\>\""}], "}"}]}]}], 
   "\[IndentingNewLine]", "|>"}], "\[IndentingNewLine]", "]"}]], "Input",Expre\
ssionUUID->"b72da70b-0267-4d78-81c8-633e874b4d20"],

Cell["\<\
LLMFunction takes a second argument for converting the output:\
\>", "Text",ExpressionUUID->"5d24c18f-ce32-4609-a038-4a1ccad12dba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMFunction", "[", 
   RowBox[{
   "\"\<List `1` types of `2`. Give the output as a Wolfram Language \
list.\>\"", ",", " ", "\"\<Expression\>\""}], "]"}], "[", 
  RowBox[{"\"\<10\>\"", ",", " ", "\"\<mammal\>\""}], "]"}]], "Input",Expressi\
onUUID->"87df3c3d-12c3-4dd3-a222-9f4819add67d"],

Cell[TextData[{
 "Apply it to a non-string input (this uses a ",
 ButtonBox["TextString",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/TextString.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/TextString.html"],
 " insertion function behind the scenes):"
}], "Text",ExpressionUUID->"682a2ed0-8943-4022-8019-adcf2f15a641"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMFunction", "[", "\"\<Name a `` colored animal\>\"", "]"}], "[", 
  
  TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
   "RGBColorSwatchTemplate"], "]"}]], "Input",ExpressionUUID->"e21f8e6a-6d99-\
4b08-a14c-1aa2293ea6fa"],

Cell["Use a custom insertion function:", "Text",ExpressionUUID->"aca5fb4e-75ce-46ee-987b-77ce1f90841d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMFunction", "[", 
   RowBox[{"\"\<What does a `` eat?\>\"", ",", 
    RowBox[{"InsertionFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"CommonName", "[", 
        RowBox[{"ImageIdentify", "[", "#", "]"}], "]"}], "&"}], ")"}]}]}], 
   "]"}], "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
0YnB/t6rTPIMZqp3bODa1HSv3igJhm2BkP3Djx58/uVnGzvbkURcbzHQGNTe
/lssNg2Lm2UwKVweg8miWO0mCo1YquSFMsHwxNDW/iYSOxOKB+HMxVqJQCHn
y6Xh8bFL165mCvnT58/ypeJwMu7weXaODpR6/crWRjAebS61Q7Ho0vqyzWGG
GBxN+KlsLBI/ClbijamFKqxQjk7mzSI1IZzR5ufsvpQo01SWV03NXX+goGzt
xlfvFOa3MrWVzJMv76RK4dZ67ZOvHxfq+Y29rYcffZrMlfyRxPrOPpZEs7t9
NCbvjXdOnb1w9dylq+cvX7tw7drljo5bAwM9I2PXbvXcGhodm8WNzWAlaqNY
rRUoFWQGh8OXUBhsOpOh1qrKtaw7aD18tLK0nbH6WYG0IFIQpCvS+VXXxn7u
zsPFjz7ffvTx+p1Hrf179Y2d/PJ6prWUBt6tb5WX1/IbO+WNneLqZm7vqH7v
8fLB/ebevdLe/fzmUXT7bpQtmxJp0QzhBJkzTBdMD09fn8J2C5S4SUzXxc4T
N3reu3br9DRmyOY00JkUnoDLl/CgtuPx0yoFh8chjAx1ajQCs1VhMEgCAduX
X33ym3/69eLqilgp94R80C8uXT1HomK6uq/h8LOgwDPISalUfOHS+XK1MItG
9A7cjMQDV2+ct9h11zsv6oyKM+dOLa20xiaGB0b745nEpeuXbR4XVyzkiATr
u5uA7MLSosvnBfhW19c8Pvfe4RZfwMjmYosrc7OY8UwhtLLR4Iupi6sgPvMq
reTg/k4sE4hkvKly6OEXR8VW0Z8Ofv3XX8NBuVUNpqIff/3nSpMxXSk++PQj
vcO+fefe8tYBR6wMJFLF5tz7l66IFAqD1fHia689//KrTz373NPPv/DaidfP
Xzw3MjbIYFGdHms6m2ivtg6Odp98+uEnP/jikx98dfj40dr2XnNpKZ5OqfRq
HBmLJczaXfq1rfryTj5dNbmi7GRVXm2bl7fiR/fnn3yyBvn9/pP5g3vl7YPc
0nq8XPc12/FF0Mn1zPp2buewuH+3dP/J3KOP2/ee1A8fZw8eR3YegNQ7qbxJ
nhzDV6BlegpTONs7ehGwowknB6fO3+h9q2vgVGff+yjcKJ6I0OoUEqkAiENj
UyhUrFDIhGGziTqdJBJxmMzSVMpXLKRjiWgslTY5HFqzUalTjU2PoLCIjs4r
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
n34Mbw0DG2b/0ePW5pYzHNXYnfZQzJ8pxSsLzkgqni/9+Gd/dXBv7+9/9c38
Sri54l7dDS3v+Ns7noUtR3XZWFu2NdeCpQVntqGtr5rrq8ZiWxktcXwZYrhI
yc5zC3OewpyvNh+fX8yVavFSLdpspQrVYKkeLlT9MHPteH0+0lpK0+gzExM9
/qBNJGKIeNS5UiIesH36eO+br5/srjb++R9/2qqkt9bmxSJux63Oi9evswXi
P/jjP7UHw4F0HkGkrh7cJbD5Ur2xo3fgvQuXTp09C4KjN1tOnfkAAIXlvdHT
1zMylp+bH8cQescn/cn0CGL2/UtXF5bXQD+HxqcgFroDYaDAyCQinEh39fQH
ogm9xQ6nCsdjXKHgrXdPDY6O5atlSJ4XOm5U2y0SiwuOtrK7g6NTIMrCPVQe
+/DJ4/J8myuVM0X8x1986giE+sYmM5Ua0BAEU2u17z94BBx87rVX3zj9HrAP
TaVBSbzSfQv87sVXT7z06mvffebZF77/yvQs0mq3bW5v7B/uQB5uLTYXlxcW
15baa0tgzes7G4Dmp19+8ZO//tkvf/ub3/3n//nf//kfv/qXf/n6r36yuLkN
b2r2+j2xBGzpjb29+nzz/odHv/6Xn+7dbWwfVtd2Mwsb4dqys7Zqb+8e/1G4
sRpMVbW5OV11yZppqAIZVjDHjJW5qTp/fi2eq3uyJd9cK1Opx0rVSLOVaS8X
mu18pRFvrxSX1ouZvCuZcabSXqmUKZGxlUqhUso53GiV076vPzn6xd989WB3
8ZsvHv3lVx/++OvP0CgEIHjjVjfklv/+//xBIJURqPWjKNzS7iFfpYsVqyfP
XwRcIMVd7eqCavyd7z09hkCASUFawNKZrY3dnvHpIQQStuvFju7TF6+kC2Uo
YgOjE5AVs6UqxIn3z19KZAtwQKQx4dGXX38T2orWaHj+5VfPnL+UzOcxJML5
q1cTxQKSQB6cnAa/m8ahQahDiQSaQgQEbb4gFHCzx/ng04/GZzEgFxCcTp47
6w5H7zz5CHLXS2+8deK9UzBw//zqOsj7d557AeAD9oHmg8i4/b6VjfW9g92N
rfWtHRCYoyOwk93NrYOd3Tv7+3eO7j66d+fh3UcfP/7q6y9/9M0Pf/Y3P/3V
b375b//+u//49tt///bbf/ztb+9/+CFYBigz3ErVyv+PqbcObyvN78WnszsY
cmzHFGMMiYMOxw44TuI4ceI4iWPHMTODLLCYmY6kI+mIj5hlZgjzzGRwO13o
ttsudAvb3ntLt7/23t6vZv/55XkfPScWHb2f90OCc0JTwV/95vvf/P5naw+n
H7+YjS5avFPKwLxiak0H8EWXMXtAaPVxvVMyz5TY4KSgOMHonrCHJp0RBWrj
Ga0iu1sdnbZEpoCDNki+0RkcMF3ZiMwsuoCJVqcSd2uFYiqJMiQQ0Li0scUI
7jAI/+L75//+97/48tniX3779tHCVNCD32+4d7L0TE3dHXiZ25OThUrkck1t
xc3bjlCMKpAAyUsvV96ov78jNX1wggShDlIBJB+hTHng+ClYlpjTd63uflv/
iEiNwl92pmdKVRoKg116oeJaze3IzHzx4aMwDBZ7wcEjlTW3bS7f3oNHqm/V
Gi3mov2H9hQVaw1GiJTQz6B83W5svlR90xUO3bp/j8nnQxFo6u549PpV/zgR
gFt58tAVDly7XUekcytravkK+asvv4bwCRmm6HDJibIyM44/f/P5vQetEDUL
ig8C7wA+MO7phRkAbnl1ae3hJuDoCwVRzMji8QdHx+Cpuwf7Ia2RqJNcPk+j
04ZCoZcvX/7617/+53/9l//vv/7zX//93/79P/73Dzj+33/9z//cfPGKKRLW
PajXYdpQ1PPb3//lL3/1s7XNuR++G6N2RmSeaQUelvpmNJ6oyuYTO8HXpjXO
gBi1UtTGMYOdgjq4OhsPwbioSWixS0MxY2wG6osV4FtYCUWmHe4A6vRpQVR9
IRODNTZG6GXSR1UiesiOeM2i3/3i5T/++qt/+f1PH8+H/+JPv44GvOfPnjtw
5HBrd2dh8T6we6FSnZiZXVl7Z5zBoQmlFJ6ovr3zwrXqxIxMSOkVVVUwUcAj
EMkT58pnVzeGyfSTF6/Q+BK+QpOzd39qzh5QYxDP7PwiiKPuQPhSVTVUMKVW
f7r8Ugkwzu0HMoIU213OI8dP7UrPlKnUfUPDRQcP8iVyIFrx0eNai/n63dpR
UnzBTDDovqlYTX0jIPj8i8/jb7k0PLhaUwfLaeP5y66hkbOXK4GAcC+QhRef
fdbQ3L47twCeApienpVNZ7MePX8MXJtfnJMrZd39fVerr+8/fATon56Vm5Cc
ujMlPTkjIzktPSVjd/rujJy83MMlR65UVvX1D9rs+OMnz37/D38A+P7j//zf
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
31KDnrL59OHDZ49mlxdtPq/e5sBDwdjS/MLm2srjp0/efPb2u2+fvvt86fnz
xRcvog8fRjfWo+sr0fWl2MYqbPiXlgLLy/NPnn77V3/xm3/6+8B8CHWq2Uqi
0szyzOi809rAbPz4lnT22CRj8OnL5a+/ezM164cwE4gaglO68Jxi9Rkys85Z
fireeKmz+9g2Dz+2YQ2u6K1hwcITw8pz3fITZPGhNroo901xwsu8tbeK5c/E
q19KVr4SBx9TApuc4tPJCakf7UpNTEhISNmVlJi0PSllR0pmQs6+XXqcZ/ZN
mgPDpkD37DPa0mfM1Xe8tz/HFp7IGjpP7T+e0jvQeuDQ/o+3fSSUCa7euJKa
neoNB6vrbm9J3tlPABe2bknMKL9WM7O2cebSFWj9Mh3WRyBevnHrxRdfQiA8
ePIYzNvl61Unz5ZCPTlw5DDkz+3JyeBx1bdvQwE04zho6QeffIqg+rsN93/8
8SckKq36Vu2OpGTgIJAUgIZlANJddOAwIAVFb0tCUmffoESJ7EhOBTTliE5v
scBjHjl5Mjg7c/DkiYw9BRBER0kT4IMdPd2ziwvBWGiUOHa2/CKE29TM3Iyc
PQWHDpaUnjp2tuxO0wMKhw0O652ZmX30eA1o+PrVDOjqo43A0rx7bja4shLe
2Fh4/vynv/vdL/7m1yavRWbksxUE15TONaXBw1J7UK7UsxQIe4TQCTHmm5+8
nV8O+sJoZE4bmBY7w9TgPM3k7baHhqbX+Gb3pNnFfPxVNLKhUztGpjbFK6/l
T77UvvjW8OZ7y+Zn6jd/hj37Tj37kjH3irn8jrvwlrP6hbpl+NJHO95LzUhK
TE764d/OpF0Ju/OSah9cmNkwBpcEtugoFuyU22u8a30zL4mRx+Rn32ne/dLp
iNJGJx9sSXz/StUFvoT7o0/e6+hvFylkiWkpZyougFIVHio5Vlq++OhJVV3d
e59u5asQjcV2o/5+Qtru1t7+jadPD5841j88JFXJsvNzVIjyxKnjY8QJaChN
HR2jJNJ7H36oMRob29ree/99vlTaOzj03o8/6BkcgTL44ZbtUpUGij/kW4PV
WnTwIIR8h9dbdqH8oy1bu/sHDGYLuGRiSiqko/DMDOTPrKL8yMLs5ZvXIYFg
dqvT795TvGeSRVtcX25ovr89aUdyWvrOXWmpGTlpu3N3ZWQlZaYn7k7bkbYr
OS01KxuK0IELV6+N0eiIFdCcmtlYW3j8ePHZMyDmzOPHq2/e/Pp//dPLb95h
HjNHMSnRUoF6kBtRB9M/qzU5pTqLCDgYiNh+/hdfrz4MB6aUsSVZZJHrjBD0
eI/c0KSzd3liVJOLArK58tJtDrK07uH5F5KVzyWbX8tefK969VNk/XPR46/l
618IZp5SFl8xVt8JFt/wph7Hj2hdVLJrRyLQMBn+paTtSkzduac4nS7qckRY
wWXu8ivp/HOWc7F39g356c/E868ZK58Lv/wV9vkvrHgE7rsd9u3GrcrkjASB
lHfp2lXwJkgmQyQi1HxIFLUPmhKzsxGLbXptgyGShOYXNCZL4eFDdC7bjNv3
HSrminiXrlQQyRNNLQ96h/qu3qwG3okUih9/+qlAJhscH3//448HxsZAPwHB
ls4eBlfw3gcfw2VdYzPwFLPbj5eWQvJxBQLAUwix0B8XV9f2HjgIqgu4rz95
VHzsSEpOpm8qItGotiYmkOmUJ6+f9I32tva0WlyWvKI9uzJSMjLjoTIpOT0l
NRMSZkpmRvqerMw92VA1cqAxZcTXA0TQXbt3Q9Yqu3zpSs3NrpFRldnsX1h4
+vW7v/rD3zojPo0FMbsRoZrCU0zQBP0saT8elgdmDL6YkSsiWByqn/75u40n
YWBfdInnio1hnh69Y0Bn6zd7xkyuCdQ6EVpQxlbR8JoqsMJbfitf+1K5+a38
8fcimPz51zSYfPdCv326xzk7aAl1R9epluCI1jHeMXw9Jz8xbXciwJecsjM5
PbG+9ZrOQZEY27Dw4OtfGMKPSJbpzvm39Ed/Kl3/WuZZHnv+vXT+5eTUw0mJ
vpXG6dlTmHHj9vXWrrZrt24OEQggXOBiEpUCbDE9f48nFlVhJijazd29BBrD
E4lBGiy7eIEvFQ8RRq7WXB0aH2zrbiVSJ27X3xkhEooO7rc47NsTdw6Pj+lN
2I8++rC27q7RYv7w009u3a0DfkHf7+rrBwsDvKRqdddA33sf/lihRTgC/ifb
tl68VPHi1cs7dXe37Nh+/PSptccbQ6Sx97d8SGJRIa4QaeT2vvbQTNDkNExQ
R+WItPhAUWp6SlpaCizgwqJ9xfsPQmRKSk/dmrI9ITUhOQVYGy8aMMA6s3Ky
/1g90jLSoYnkFBaC4MytL/30r38uUYs1JoUGkzCFYwRa5yilVYEyxGqKwS5y
+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
MVwPN4OrHB4b7rUDaoAX7neAPcEA5TT9sCTgLlK1EODjCugU2ug4qfdBx63z
V/eyFPXzL8XLb1R95Mvnqw6WVpzIyEmHCqMx6u0el8PrliEqIonS1NRyqqw0
LTszIT1lV3YWxOnsvUXtA90Lj+ccU3qeblRiGZZYe8VYu9E3ao9QA4t81D2A
ejrnn5NiD0ft0SHEOqTQEcqvlNCYhJ/98qvPvl6cXZetvaE++oqkcdxGPc3W
cI8p3GqO1fs2Oqw+Ll/ZJ9UPkwT3RYZeIr+Bqx5iSgbMDolUQeELiDa7Qqok
SpE4EyHDGHG+2shW6flylK9CRVozPzgldQXZvqhcqp3gqkdosm6hYUiA9vLU
nUTmbZagzeKg2dwUlaZHp4ei3dE/fE2OjFlwqUTB1GIKIGD9/bssTvxwQxDs
IYHv2Vd07tKlqzdvlldWHjx54k8+/aS+rdUR8jV0to4zyDQhm6sQyQ0I6KrO
atRgGph2sUJoshuVWjkMEGTMZkDNCMAXPzy1GwPsoM2ZXcb4BlAQj18LsMJV
qFWjtWpQuw4SvtFugBuoDHJgK7jzJJ3AYBNHx7sam6vvNJSLdYPr79Te9ZG5
1xyppfVcVeGx0mIiJf69tdj89OL6MrS8tWcPV58+mt9YjixMi7WKWw/q8vYX
JqalpGdlFh0osHh0loBM45rU+yfs00TPPCm0Sp15zPMvTTqmRrBgpzXSbgp2
WP2jkPmVOsrpc/smyIO/+f3PvvzJ+ty6MrwytPRyVIvf4amrfHPD1lBz7HFv
+HGrO8TVmsdZ0naGtGVS8oDAvUeTdBuc/MWHHqWWodXxlSqWzsC1OERixYjR
zgYO0vmD8cOzo3wzroUM7ItJjThJa6KYPAKDhy8yjGtddKV1gqPokmqGWPxO
QE0i65ApuvQGIoJOcIUdqIkajBo8AaPFgbR03K28dp40Ob6nIO98xUWNHg3P
zEwvLs6urT589RIuDQ77ifPnaEKuFEVa+zqhaNP4LJFapkLBqhRChSB+Qg1U
LlcJYfBFTBBSoCS0LY1RDnoI1yq0IpNDp7eoUbPKYAXsNLANG7B+dBYVDKVe
otTLVAapVCMQq3l8KZ3KHgeJuNdYdeNW6eB4PWIku2Ic+8yoZ2Uo+mTCs0Sq
az995eZpsYwbiviFMkFbb1vnUG/32ACRTVebUegUay82N149snrxpo627Pyc
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
RbBki7X2/wEcK4xb
     "], {{0, 26.4}, {36., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{300, 300}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
     MetaInformation -> <|
      "Source" -> 
       "http://www.madamzebra.com/Differences-between-species.html", "URL" -> 
       "http://www.wolframcdn.com/waimage/hset050/9cd/\
9cdb4637dd9f0c37d49a943408241658_v002s.jpeg"|>],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{60.55725097656273, Automatic},
   ImageSizeRaw->{36., 26.4},
   PlotRange->{{0, 36.}, {0, 26.4}}], "]"}]], "Input",ExpressionUUID->\
"49fe8280-8695-4a82-aa1a-c38d416bac77"],

Cell["", "EndOfSlide",ExpressionUUID->"d73d0618-564e-4362-bb1e-5d75b5571c6d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"087fca65-a9ea-441e-8554-19c9a7cfdc56"],

Cell[CellGroupData[{

Cell["LLMExampleFunction", "Subsection",ExpressionUUID->"f283fb09-df63-4c72-9e54-d09c6eddbcac"],

Cell[TextData[{
 ButtonBox["LLMExampleFunction",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/LLMExampleFunction.html"], 
    None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/LLMExampleFunction.html"],
 " creates an LLMFunction from few-shot examples."
}], "Text",ExpressionUUID->"ef588e1a-95f9-4473-aa2e-85245cd07669"],

Cell["Use examples to categorise something:", "Text",ExpressionUUID->"c7105c6a-bc09-4485-b2ce-f670a61acaf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMExampleFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<apple\>\"", " ", "->", " ", "\"\<fruit\>\""}], ",", " ", 
     RowBox[{"\"\<chicken\>\"", " ", "->", " ", "\"\<meat\>\""}]}], "}"}], 
   "]"}], "[", "\"\<orange\>\"", "]"}]], "Input",ExpressionUUID->"6acc44f2-\
e8b0-48d0-ade3-f91ac6078291"],

Cell["\<\
If an item can\[CloseCurlyQuote]t be categorised neatly, the LLM will often \
make up a new category:\
\>", "Text",ExpressionUUID->"b5217377-b48e-4ce4-92d3-4706e594c29f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMExampleFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<apple\>\"", " ", "->", " ", "\"\<fruit\>\""}], ",", " ", 
     RowBox[{"\"\<chicken\>\"", " ", "->", " ", "\"\<meat\>\""}]}], "}"}], 
   "]"}], "[", "\"\<concrete\>\"", "]"}]], "Input",ExpressionUUID->"1bd8093c-\
9acc-4913-80c0-0dc363bea818"],

Cell["Use more complicated outputs for the examples:", "Text",ExpressionUUID->"5b828ea9-686d-4dc2-83ad-0aa2e9357585"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMExampleFunction", "[", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<apple\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<fruit\>\"", ",", " ", "\"\<company\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<beef\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<meat\>\"", ",", " ", "\"\<trouble\>\""}], "}"}]}]}], 
    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], "[", 
  "\"\<gift\>\"", "]"}]], "Input",ExpressionUUID->"384562f4-45eb-4e41-996f-\
954916c1f7b7"],

Cell["(Note that the output is a string, not a list.)", "Text",ExpressionUUID->"751518f0-cec4-4c58-a9de-939860ba222c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Optional: ",
 StyleBox["More examples",
  FontColor->GrayLevel[0.5]]
}], "Subsubsubsection",
 WholeCellGroupOpener->True,
 CellFrameMargins->{{Inherited, Inherited}, {3, 3}},
 Background->GrayLevel[
  0.95],ExpressionUUID->"368e25e4-ae58-4895-9e0c-3ebc8914f150"],

Cell[CellGroupData[{

Cell["Text offensiveness", "Subsubsubsubsection",ExpressionUUID->"4e3a3e13-bcc7-4da7-a3f6-e44fca3ed8e9"],

Cell["Score the offensiveness of some text:", "Text",ExpressionUUID->"95f30449-1487-4bf7-b836-b3e0dcf55479"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMExampleFunction", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<You are a nice person\>\"", "\[Rule]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<I disagree with your argument\>\"", "\[Rule]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Only an idiot would say that\>\"", "\[Rule]", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<You are a moron\>\"", "\[Rule]", "5"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<You are an ugly donkey\>\"", "\[Rule]", "7"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<I'm going to kill you\>\"", "\[Rule]", "9"}]}], 
    "\[IndentingNewLine]", "}"}], "]"}], "[", 
  "\"\<That's a silly argument. You have the brain of a fish.\>\"", 
  "]"}]], "Input",ExpressionUUID->"426a6955-2586-4c63-95be-ba50bbf1ee83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Object categorisation", "Subsubsubsubsection",ExpressionUUID->"30b14ff7-bbe1-4f91-bfd6-3719bee4f820"],

Cell["\<\
Combine LLMFunction and LLMExampleFunction to make a categorisation tool. \
Note that a significant amount of prompt engineering is required to get the \
output in the desired form (and even then, it\[CloseCurlyQuote]s not \
guaranteed to give the desired result):\
\>", "Text",ExpressionUUID->"099b77b7-9fe2-4531-84de-596093f25e27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "autoCategoriseData", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"autoCategoriseData", "[", 
    RowBox[{"data_List", ",", " ", 
     RowBox[{"n_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"LLMFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
     "\"\<- Categorise these items (to follow).\n- You MUST use exactly `2` \
different categories.\n- Label the categories appropriately; do not number \
them.\n- Return only one possible categorisation.\n- Return a Wolfram \
Language list of the form {\\\"item1\\\" -> \\\"category\\\", ...}\n\n- Here \
are the items: `1`\>\"", ",", "\[IndentingNewLine]", "\"\<Expression\>\""}], 
     "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"data", ",", "n"}], "]"}]}], ";"}]}], "Input",ExpressionUUID->\
"5d320aae-a04b-42a5-b41f-4b87ebc9a0c4"],

Cell[BoxData[
 RowBox[{"categorisationRules", " ", "=", " ", 
  RowBox[{"autoCategoriseData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<cheese\>\"", ",", " ", "\"\<chicken\>\"", ",", " ", "\"\<beef\>\"", 
      ",", " ", "\"\<milk\>\"", ",", " ", "\"\<yoghurt\>\"", ",", " ", 
      "\"\<cheddar\>\"", ",", " ", "\"\<lamb\>\""}], "}"}], ",", " ", "2"}], 
   "]"}]}]], "Input",ExpressionUUID->"b7ffadbd-d223-4a34-9029-9e7eb24c0dab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMExampleFunction", "[", "categorisationRules", "]"}], "[", 
  "\"\<red leicester\>\"", "]"}]], "Input",ExpressionUUID->"75934dba-c3ed-\
4951-886d-26633459771b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMExampleFunction", "[", "categorisationRules", "]"}], "[", 
  "\"\<concrete\>\"", "]"}]], "Input",ExpressionUUID->"01930e0e-d2a8-4581-\
868c-70bd0902d10a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data extraction", "Subsubsubsubsection",ExpressionUUID->"d93ff712-720b-4004-89b8-7b8ef894c009"],

Cell["Create a data extraction tool:", "Text",ExpressionUUID->"4969e8b6-d800-4977-a432-d965c685fdee"],

Cell[BoxData[
 RowBox[{"nameAgeHeightExtractor", "=", 
  RowBox[{"LLMExampleFunction", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "\"\<Alfred Nobel is a 52 year old male who is 6ft tall\>\"", " ", 
       "->", "\"\<{<|\\\"Name\\\"->\\\"Alfred Nobel\\\", \
\\\"Age\\\"->Quantity[52, \\\"Years\\\"],\\\"Height\\\"->Quantity[6, \\\"Feet\
\\\"]|>}\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<Robert is a builder from Wales and his height is 1.7m\>\"", " ", 
       "->", "\"\< {<|\\\"Name\\\"->\\\"Robert\\\", \\\"Age\\\"->Missing[],\\\
\"Height\\\"->Quantity[1.7, \\\"Meters\\\"]|>}\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "\"\<Mike and Sue Jones are married. Mike is 25 and Sue is 22\>\"", " ",
        "->", "\"\< {<|\\\"Name\\\"->\\\"Mike Jones\\\", \
\\\"Age\\\"->Quantity[25, \\\"Years\\\"],\\\"Height\\\"->Missing[]|>, \
<|\\\"Name\\\"->\\\"Sue Jones\\\", \\\"Age\\\"->Quantity[23, \
\\\"Years\\\"],\\\"Height\\\"->Missing[]|>}\>\""}]}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", "\"\<Expression\>\""}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",ExpressionUUID->"e54b1f62-c33a-\
4f5e-a289-b5c7b4dbcea5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "nameAgeHeightExtractor", "[", 
   "\"\<I met the Smiths the other day \[Dash] John and Kate. I can't believe \
he's 70; he doesn't look a day over 55. His wife was very tall, perhaps six \
and a half feet\>\"", "]"}], "//", "Dataset"}]], "Input",ExpressionUUID->\
"9a9c4faa-9345-47d1-b3c1-ae0b83dfad47"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Subsubsubsection",
 CellFrame->{{0, 0}, {0, 1}},
 CellMargins->{{Inherited, Inherited}, {0, 0}},
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameStyle->GrayLevel[0.7],
 FontSize->10,ExpressionUUID->"c1776b43-5eb0-47c2-8523-aa2ee0de6bf0"],

Cell["", "EndOfSlide",ExpressionUUID->"de56da44-464f-4bd5-aa6f-555492d1c6f5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ee440faa-4ab9-4874-b8b5-9bae7ea35638"],

Cell[CellGroupData[{

Cell["LLMTool", "Subsection",ExpressionUUID->"87be5aa1-161d-4435-b395-f3c2d187cc91"],

Cell[TextData[{
 "In March 2023, OpenAI introduced ",
 ButtonBox["plugins for ChatGPT",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://openai.com/blog/chatgpt-plugins"], None},
  ButtonNote->"https://openai.com/blog/chatgpt-plugins"],
 " (including a ",
 ButtonBox["Wolfram plugin",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/wolfram-plugin-chatgpt/"], None},
  ButtonNote->"https://www.wolfram.com/wolfram-plugin-chatgpt/"],
 "). These can be mimicked programmatically with ",
 ButtonBox["LLMTool",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/LLMTool.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/LLMTool.html"],
 "."
}], "Text",ExpressionUUID->"10614a42-4560-482e-973f-96d9e9da75b3"],

Cell["Create a tool to inject city area data:", "Text",ExpressionUUID->"ebb5804b-bd36-4dff-bb4b-8352a0e50dbc"],

Cell[BoxData[
 RowBox[{"cityArea", " ", "=", " ", 
  RowBox[{"LLMTool", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<cityAreaCalculator\>\"", ",", " ", 
      "\"\<Find the land area of a city\>\""}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<city\>\"", "\[Rule]", "\"\<City\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#city", "[", "\"\<Area\>\"", "]"}], "&"}], ")"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellID->1028315427,ExpressionUUID->"65506b8c-8b76-4b4d-ae64-d750f9772c8b"],

Cell["Use the tool in LLMSynthesize:", "Text",ExpressionUUID->"70cd6ce5-55ed-41b6-821b-57382d621a43"],

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<Which has the bigger area, Tokyo or London? Use the tool to check each \
one.\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"LLMEvaluator", "->", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Tools\>\"", " ", "->", " ", "cityArea"}], ",", " ", 
      RowBox[{"\"\<Temperature\>\"", " ", "->", " ", "0"}]}], "|>"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellID->982157977,ExpressionUUID->"a7f30f7a-37e7-4b36-afb7-6dcdcb21b301"],

Cell["Check the values used by the tool:", "Text",ExpressionUUID->"983e1ec7-648d-4e6c-be4d-a31ea5616235"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}], "[", "\"\<Tokyo\>\"", 
   "]"}], "[", "\"\<Area\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}], "[", "\"\<London\>\"", 
   "]"}], "[", "\"\<Area\>\"", "]"}]}], "Input",ExpressionUUID->"0bb29d3f-\
b0a9-400c-8288-16b762b9dfcc"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
 "All"], "Input",ExpressionUUID->"a74c6d19-e56e-4e8c-a368-4ef8a6d74d0a"],
 " as the second argument in LLMSynthesize to get metadata:"
}], "Text",ExpressionUUID->"9544ccc8-a22c-484d-9d56-0a07f3fc560f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cityAreaData", " ", "=", " ", 
   RowBox[{"LLMSynthesize", "[", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<Which has the bigger area, Tokyo or London? Use the tool to check \
each one.\>\"", ",", "\[IndentingNewLine]", "All", ",", "\[IndentingNewLine]", 
     RowBox[{"LLMEvaluator", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Tools\>\"", " ", "->", " ", "cityArea"}], ",", " ", 
        RowBox[{"\"\<Temperature\>\"", " ", "->", " ", "0"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellID->187410015,ExpressionUUID->"76b3278f-b632-44b7-a86c-9b8ff8dac220"],

Cell[BoxData[
 RowBox[{"cityAreaData", "//", "Keys"}]], "Input",ExpressionUUID->"86f2f018-325a-4711-95ca-a143f44e8f05"],

Cell[BoxData[
 RowBox[{"cityAreaData", "//", "Dataset"}]], "Input",ExpressionUUID->"e3221987-5112-4028-860c-bf3fd7559699"],

Cell[CellGroupData[{

Cell[TextData[{
 "Optional: ",
 StyleBox["More examples",
  FontColor->GrayLevel[0.5]]
}], "Subsubsubsection",
 WholeCellGroupOpener->True,
 CellFrameMargins->{{Inherited, Inherited}, {3, 3}},
 Background->GrayLevel[
  0.95],ExpressionUUID->"cc69fc15-17b0-45d4-96fd-39d94daf0a02"],

Cell[CellGroupData[{

Cell["City populations", "Subsubsubsubsection",ExpressionUUID->"ff203b0a-52d4-4624-ba82-6a983890630e"],

Cell["Generate text injected with facts:", "Text",ExpressionUUID->"a27956af-859d-42f9-902e-495e34efb418"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cityPopulation", " ", "=", " ", 
   RowBox[{"LLMTool", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<cityPopulationFinder\>\"", ",", 
       "\"\<Get the population of cities.\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<city\>\"", "->", "\"\<City\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"#city", "[", "\"\<Population\>\"", "]"}], "&"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",ExpressionUUID->"f166fcf2-\
8d22-45ed-8166-0fcb6043e7fb"],

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<Write a short paragraph comparing New York with Chicago. Use the 'city \
population' tool for each city.\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"LLMEvaluator", "->", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Tools\>\"", "->", "cityPopulation"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Temperature\>\"", " ", "->", " ", "0"}]}], 
     "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\
ExpressionUUID->"0e240e6f-c295-46ce-ab3b-7c9d1abcff53"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Explicit computation", "Subsubsubsubsection",ExpressionUUID->"b9350203-ce55-4726-aed4-2f1da9168462"],

Cell["Run a calculation and give the result in LaTeX form: ", "Text",ExpressionUUID->"8cf85a67-2ac7-4e54-ab1f-cbbefd76035f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"codeRunner", "=", 
   RowBox[{"LLMTool", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<runCode\>\"", ",", "\"\<Run Wolfram Language code\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", "\"\<code\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ChoiceDialog", "[", 
         RowBox[{"\"\<Run this code?\\n\\n\>\"", "<>", "#code"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", "#code", "]"}], ",", "InputForm"}], 
         "]"}], ",", "\[IndentingNewLine]", "\"\<Code not allowed\>\""}], 
       "\[IndentingNewLine]", "]"}], "&"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"a11d985f-5df2-4298-bd0d-43e1dcaaf423"],

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", "\[IndentingNewLine]", 
  RowBox[{
  "\"\<Compute the integral of 1/(x^3+1), giving the result in LaTeX (using \
$$ for mathematical expressions). Use the 'run code' tool.\>\"", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LLMEvaluator", "->", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Tools\>\"", "->", "codeRunner"}], ",", " ", 
      RowBox[{"\"\<Temperature\>\"", " ", "->", " ", "0"}]}], "|>"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->"6cb03985-a545-4c16-\
913d-d12e7da326e5"],

Cell["\<\
(You can copy the result as plain text into an input cell to see it displayed \
in a more traditional form.)\
\>", "Text",ExpressionUUID->"145800f3-8ea0-4946-848c-14731e1274c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implicit computation", "Subsubsubsubsection",ExpressionUUID->"b83dd5d2-497e-4cbf-9c50-36db8ca8e8c3"],

Cell["Let the LLM decide what it needs to compute:", "Text",ExpressionUUID->"498aa549-31e7-4010-bef7-eccea2381766"],

Cell[BoxData[
 RowBox[{
  RowBox[{"calculateTool", "=", 
   RowBox[{"LLMTool", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Calculate\>\"", ",", 
       "\"\<Calculate results of mathematical expressions\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<math\>\"", "->", "\"\<HeldMathExpression\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ChoiceDialog", "[", 
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Calculate this?\>\"", ",", " ", "#math"}], "}"}], 
           ",", " ", 
           RowBox[{"Spacings", " ", "->", " ", "1"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ReleaseHold", "[", "#math", "]"}], ",", 
        "\[IndentingNewLine]", "\"\<User decided not to calculate\>\""}], 
       "\[IndentingNewLine]", "]"}], "&"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"071d87d4-2c50-4326-abff-3b2a0945280a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"LLMSynthesize", "[", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<A ball is dropped from a height of 5m onto a flat surface. When the \
ball hits the surface, the coefficient of restitution is 0.8. What height \
does the ball reach after one bounce? Use the 'calculate' tool as many times \
as you need to figure out the answer.\>\"", ",", "\[IndentingNewLine]", "All",
      ",", "\[IndentingNewLine]", 
     RowBox[{"LLMEvaluator", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Tools\>\"", "->", "calculateTool"}], ",", " ", 
        RowBox[{"\"\<Temperature\>\"", " ", "->", " ", "0"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",ExpressionUUID->"a7ff2cbe-\
5dc7-400f-86b6-47c7c2d4bc0a"],

Cell[BoxData[
 RowBox[{"results", "[", "\"\<CompletionText\>\"", "]"}]], "Input",ExpressionU\
UID->"12710db8-0592-4c21-8b32-eb2368daaba6"],

Cell[BoxData[
 RowBox[{"results", "//", "Dataset"}]], "Input",ExpressionUUID->"48a067be-643e-4888-a155-5e7597911d88"],

Cell["Calculate the result manually:", "Text",ExpressionUUID->"21264f11-478e-48cb-9fa9-5937e515693c"],

Cell[BoxData[
 RowBox[{"Module", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", " ", "=", " ", "0.8"}], ",", "\[IndentingNewLine]", 
     RowBox[{"h0", " ", "=", " ", 
      RowBox[{"Quantity", "[", 
       RowBox[{"5", ",", " ", "\"\<Meters\>\""}], "]"}]}], ",", 
     "\[IndentingNewLine]", "hMax"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"First", "@", 
    RowBox[{"SolveValues", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"hMax", "/", "h0"}], "]"}], "==", "c"}], ",", " ", "hMax"}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->\
"c6a058e3-2d69-479c-914f-db32f1de4073"]
}, Open  ]]
}, Closed]],

Cell["", "Subsubsubsection",
 CellFrame->{{0, 0}, {0, 1}},
 CellMargins->{{Inherited, Inherited}, {0, 0}},
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameStyle->GrayLevel[0.7],
 FontSize->10,ExpressionUUID->"6eba87a4-a5a1-486b-bfc6-ebc0714e6c40"],

Cell[CellGroupData[{

Cell[TextData[{
 "Optional: ",
 StyleBox["How LLMTool works",
  FontColor->GrayLevel[0.5]]
}], "Subsubsubsection",
 WholeCellGroupOpener->True,
 CellFrameMargins->{{Inherited, Inherited}, {3, 3}},
 Background->GrayLevel[
  0.95],ExpressionUUID->"6e65126b-d3ce-4427-a01b-4d0aea4e8cb9"],

Cell["When you call an LLM with an LLMTool, it works like this:", "Text",ExpressionUUID->"0da009bd-bd5e-4c71-a3f2-9b12d6864c61"],

Cell[CellGroupData[{

Cell["\<\
Wolfram Language calls the LLM, tells it about the tools and asks for a \
response to a prompt.\
\>", "ItemNumbered",ExpressionUUID->"232dcc66-9fa7-4a0b-a484-7a83314c7090"],

Cell["\<\
The LLM (hopefully) decides to use the tool to help create a response.\
\>", "ItemNumbered",ExpressionUUID->"4e62ed4c-7d99-43e2-b0db-34de1ab6c5a2"],

Cell["\<\
Instead of a response to the prompt, the LLM responds with a call to the tool.\
\>", "ItemNumbered",ExpressionUUID->"b27b35b0-9a6b-47fb-9bf8-278caee850f6"],

Cell["\<\
Wolfram Language receives the tool call, runs the tool in the local Wolfram \
Language environment and generates a response.\
\>", "ItemNumbered",ExpressionUUID->"c677075b-31a7-4cd7-b07d-6194e2f37aa7"],

Cell["\<\
Wolfram Language calls the LLM with all the information (tool information, \
original prompt, tool call and tool result).\
\>", "ItemNumbered",ExpressionUUID->"789eea0b-ec1a-452e-972a-8f6361c9b7fd"],

Cell["\<\
The LLM uses all the information to generate a response to the prompt.\
\>", "ItemNumbered",ExpressionUUID->"b765e8b2-50fc-4be8-81fd-065f5fbea386"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Subsubsubsection",
 CellFrame->{{0, 0}, {0, 1}},
 CellMargins->{{Inherited, Inherited}, {0, 0}},
 CellFrameMargins->{{0, 0}, {0, 0}},
 CellFrameStyle->GrayLevel[0.7],
 FontSize->10,ExpressionUUID->"e67e7d13-510d-49b1-b24e-48b1e04c4188"],

Cell["", "EndOfSlide",ExpressionUUID->"1d106a56-893c-4125-b8ed-004924375595"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6084a335-2601-4ca4-9b2c-8d7107a71608"],

Cell[CellGroupData[{

Cell["The Wolfram Prompt Repository", "Section",
 CellTags->
  "TheWolframPromptRepository",ExpressionUUID->"3533e356-681a-4346-beb6-\
ace970c69e68"],

Cell[TextData[{
 "The ",
 ButtonBox["Wolfram Prompt Repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository"], None},
  ButtonNote->"https://resources.wolframcloud.com/PromptRepository"],
 " makes it easy to effectively interact with an LLM."
}], "Text",ExpressionUUID->"05bd00db-bc5e-4f5b-8247-fbc2860510e0"],

Cell["Prompts from the Prompt Repository are:", "Text",ExpressionUUID->"43b44496-a4a9-441f-bdea-281280c53aa4"],

Cell["Available in Version 13.2 or higher of Wolfram Language", "Item",ExpressionUUID->"b7db7ce1-9da0-4a1d-9769-131ac39d1eaa"],

Cell["Reviewed and tested for effectiveness", "Item",ExpressionUUID->"8c6f2feb-742f-4684-bcb5-fdcab428314e"],

Cell["Templated", "Item",ExpressionUUID->"4a2e23e0-073c-40ad-b13b-d80b6c281b7e"],

Cell[TextData[{
 "Referenced by name in ",
 ButtonBox["LLMPrompt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/LLMPrompt.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/LLMPrompt.html"],
 " and ",
 ButtonBox["LLMResourceFunction",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/LLMResourceFunction.html"]\
, None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/LLMResourceFunction.html"]
}], "Item",ExpressionUUID->"293fb158-345a-4745-84e2-b4f60b7e5762"],

Cell["Open source", "Item",ExpressionUUID->"20879e53-41c0-4129-9070-a06e47265359"],

Cell["Easy to create", "Item",ExpressionUUID->"734ad4d5-5db7-423d-aa55-347d24a04690"],

Cell["Seamlessly integrated into Wolfram Language", "Item",ExpressionUUID->"bbf98490-0489-4a83-8b3b-3756e1061544"],

Cell["", "EndOfSlide",ExpressionUUID->"e525b222-9691-4591-b6f9-3497abc3f8e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"adb5fa33-497b-4948-81bc-3a14732ac830"],

Cell[CellGroupData[{

Cell["LLMResourceFunction", "Subsection",ExpressionUUID->"f3a37ba5-f908-45ed-94e9-76782981c561"],

Cell["\<\
LLMResourceFunction is a dedicated function for retrieving a prompt, applying \
it to parameter values and sending the prompt to an LLM.\
\>", "Text",ExpressionUUID->"56cac5ba-edab-4874-8f51-10882568d120"],

Cell[TextData[{
 "Retrieve a ",
 ButtonBox["translate",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/\
Translate/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/Translate/"],
 " function:"
}], "Text",ExpressionUUID->"4c82c481-3515-4acc-b80c-babadf834dda"],

Cell[BoxData[
 RowBox[{"LLMResourceFunction", "[", "\"\<Translate\>\"", "]"}]], "Input",Expr\
essionUUID->"3c89ccf9-ce86-4674-bf08-a0bc76dce54e"],

Cell["Translate some text to Portuguese:", "Text",ExpressionUUID->"30807609-7acb-4d6a-8d7f-837e9c46152e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMResourceFunction", "[", "\"\<Translate\>\"", "]"}], "[", 
  RowBox[{
  "\"\<Portuguese\>\"", ",", 
   "\"\<Thank you for attending this presentation\>\""}], "]"}]], "Input",Expr\
essionUUID->"8e1e65b5-ceff-42c0-8709-19b515675cfd"],

Cell["\<\
Prompts can contain post-processing (interpretation) of responses. \
Post-processing is not maintained by LLMPrompt; it is only used by \
LLMResourceFunction.\
\>", "Text",ExpressionUUID->"e15e1659-dbce-4139-bba2-aafbdbd12a44"],

Cell[TextData[{
 "Get ",
 ButtonBox["sample code",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/\
WolframSampleCode/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/\
WolframSampleCode/"],
 " for a built-in function:"
}], "Text",ExpressionUUID->"29c1ce3b-6a18-4667-af75-2085d7b481fd"],

Cell[BoxData[
 RowBox[{"sampleCode", "=", 
  RowBox[{
   RowBox[{"LLMResourceFunction", "[", "\"\<WolframSampleCode\>\"", "]"}], 
   "[", "\"\<GroupBy\>\"", "]"}]}]], "Input",ExpressionUUID->"dc04c221-a025-\
41b7-9fac-7689878bb989"],

Cell["\<\
(Note that the result is not a string, but a held expression.)\
\>", "Text",ExpressionUUID->"0bb162df-3981-4056-9826-f01f23b8f008"],

Cell["Evaluate the sample code:", "Text",ExpressionUUID->"2bcee273-be59-46f1-bb51-61b7acc9decc"],

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", "sampleCode", "]"}]], "Input",ExpressionUUID->"7028886e-e9a2-4dd4-a8c5-5ba610f7eda7"],

Cell[CellGroupData[{

Cell["Building on top of a prompt", "Subsubsection",ExpressionUUID->"746af438-bf03-434e-b62e-5e51398ac895"],

Cell[TextData[{
 ButtonBox["Assess",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/\
QuestionAnswerAssess/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/\
QuestionAnswerAssess/"],
 " a question and answer, producing an ",
 ButtonBox["AssessmentResultObject",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/AssessmentResultObject.\
html"], None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/AssessmentResultObject.html"],
 ":"
}], "Text",ExpressionUUID->"2f8fb456-1006-4e02-9d35-a915e2a84807"],

Cell[BoxData[
 RowBox[{"assessment", "=", 
  RowBox[{
   RowBox[{"LLMResourceFunction", "[", "\"\<QuestionAnswerAssess\>\"", "]"}], 
   "[", 
   RowBox[{
   "\"\<Where is St. Louis?\>\"", ",", 
    "\"\<At the confluence of the Mississippi and Missouri rivers\>\""}], 
   "]"}]}]], "Input",ExpressionUUID->"29c2a271-acbe-43c8-917d-5ac0204b4620"],

Cell[BoxData[
 RowBox[{"assessment", "[", "\"\<Score\>\"", "]"}]], "Input",ExpressionUUID->"865b15ce-82cd-49db-9fd2-22a6872a566e"],

Cell[BoxData[
 RowBox[{"assessment", "[", "\"\<AnswerCorrect\>\"", "]"}]], "Input",Expressio\
nUUID->"ef60281e-0ac8-4319-9cbe-5bc13a68dc58"],

Cell[BoxData[
 RowBox[{"assessment", "=", 
  RowBox[{
   RowBox[{"LLMResourceFunction", "[", "\"\<QuestionAnswerAssess\>\"", "]"}], 
   "[", 
   RowBox[{
   "\"\<Where is St. Louis?\>\"", ",", "\"\<Right where it should be\>\""}], 
   "]"}]}]], "Input",ExpressionUUID->"7c3da6af-2799-4d58-949e-ed7f8e7f50f9"],

Cell[BoxData[
 RowBox[{"assessment", "[", "\"\<Explanation\>\"", "]"}]], "Input",ExpressionU\
UID->"cb7508e2-aeeb-4d9b-9d8e-b5529089cc51"],

Cell["\<\
Sometimes you don\[CloseCurlyQuote]t want a do-it-all function for a prompt\
\[LongDash]you want more control.\
\>", "Text",ExpressionUUID->"abd6b28f-fbf6-4860-b136-485c9ff57e57"],

Cell[TextData[{
 "Use the assessment function to return simply ",
 ButtonBox["True",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/True.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/True.html"],
 " or ",
 ButtonBox["False",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/False.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/False.html"],
 " inside a wider question framework:"
}], "Text",ExpressionUUID->"e7193a1b-cecb-40e5-bdb7-acdcc2bdfed1"],

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"question", " ", "=", " ", "\"\<Where is St. Louis?\>\""}], "}"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"QuestionObject", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"QuestionInterface", "[", "\[IndentingNewLine]", 
      RowBox[{"\"\<ShortAnswer\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Prompt\>\"", " ", "->", " ", "question"}], ",", 
         RowBox[{"\"\<FieldType\>\"", " ", "->", " ", "String"}]}], "|>"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TrueQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "LLMResourceFunction", "[", "\"\<QuestionAnswerAssess\>\"", "]"}], 
         "[", 
         RowBox[{"question", ",", "#"}], "]"}], "[", "\"\<AnswerCorrect\>\"", 
        "]"}], "]"}], "&"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->"13930bd2-f5f6-49a2-\
835e-4bc664e11f63"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   RowBox[{
    TagBox["AssessmentResultObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztmkFKw0AUhoO6cOkVvIIrtyIuiruKB2gxFjcRUkG8UVX0CMFlcoBAycpt
jpDVmB+MhmIyk5nOTPp8P7xCSufl/8hk3kumx/P76e1eEATLw/pjOns8i+PZ
09VRfXAdLe8WUXgziR7CRRifzvfrL0++46AOwWKxlFVVlcjzXGRZJtI0HVXA
E7zBo0z4XZIkow54lAnMvn3KAh5lwvXz7VMW8DiUoygKUZal14AHUw7k8S14
YA7m2LZsc3x+JGL9/mrsEzmQq0s2OXDe58sLsZqci/Xbiz5DPRY5kKuLxRZH
m6EJHZaGoYkuFlscmAft8+uwbDL85PhjntqcV50+FFiGjrV9n+uw6Ixxse4O
8aV7DV3VDxV/JvPQZR3s82nC4Jqjj8V0bfPRl6iwDK01vvqrPhadeskc/3te
UbjPKay7FOoghb6EQp9IoW+n8hxF5bl2k2VX3zO0WXb9vY9LMQdz2NA2OKjs
44wxVDio7HNS2Xem8j8AFov1qy/UT4TN
                "], {{0, 24.}, {24., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {150, 150}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UFABpJaBSSGxoCCHCagqN6+kKMjdSSEiMkqB/QkDFwMrAx+DMgNnYnJxgWNA
gA9INYxGBd+uMYAMZLisCzILUx4v4EpJLU4G0n+AODu5oKiEgYExA8hWLi8p
ALF7gGyRpGwwewGIXQR0IJC9BcROh7BPgNVA2HfAakKCnIHsD0A2XxKYDfYs
XzqEDQoTPqi9ICDomJKflKoA8r2GoaWlhSaJfiAISlIrSkC0c35BZVFmekaJ
giMwpFIVPPOS9XQUjAyMDBgYQOEOUf05EByejGJnEGIIgBCbI8HA4L+UgYHl
D0LMpJeBYYEOAwP/VISYmiEDg4A+A8O+OcmlRWVQYxiZjBkYCPEBzyVWug==

                  "], "RGB", "XYZ"], Interleaving -> True, Magnification -> 
                Automatic], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSizeRaw -> {24., 24.}, 
              PlotRange -> {{0, 24.}, {0, 24.}}, ImageSize -> 20], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Item\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["None", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJztmkFKw0AUhoO6cOkVvIIrtyIuiruKB2gxFjcRUkG8UVX0CMFlcoBAycpt
jpDVmB+MhmIyk5nOTPp8P7xCSufl/8hk3kumx/P76e1eEATLw/pjOns8i+PZ
09VRfXAdLe8WUXgziR7CRRifzvfrL0++46AOwWKxlFVVlcjzXGRZJtI0HVXA
E7zBo0z4XZIkow54lAnMvn3KAh5lwvXz7VMW8DiUoygKUZal14AHUw7k8S14
YA7m2LZsc3x+JGL9/mrsEzmQq0s2OXDe58sLsZqci/Xbiz5DPRY5kKuLxRZH
m6EJHZaGoYkuFlscmAft8+uwbDL85PhjntqcV50+FFiGjrV9n+uw6Ixxse4O
8aV7DV3VDxV/JvPQZR3s82nC4Jqjj8V0bfPRl6iwDK01vvqrPhadeskc/3te
UbjPKay7FOoghb6EQp9IoW+n8hxF5bl2k2VX3zO0WXb9vY9LMQdz2NA2OKjs
44wxVDio7HNS2Xem8j8AFov1qy/UT4TN
                "], {{0, 24.}, {24., 0}}, {0, 255}, ColorFunction -> RGBColor,
                 ImageResolution -> {150, 150}], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UFABpJaBSSGxoCCHCagqN6+kKMjdSSEiMkqB/QkDFwMrAx+DMgNnYnJxgWNA
gA9INYxGBd+uMYAMZLisCzILUx4v4EpJLU4G0n+AODu5oKiEgYExA8hWLi8p
ALF7gGyRpGwwewGIXQR0IJC9BcROh7BPgNVA2HfAakKCnIHsD0A2XxKYDfYs
XzqEDQoTPqi9ICDomJKflKoA8r2GoaWlhSaJfiAISlIrSkC0c35BZVFmekaJ
giMwpFIVPPOS9XQUjAyMDBgYQOEOUf05EByejGJnEGIIgBCbI8HA4L+UgYHl
D0LMpJeBYYEOAwP/VISYmiEDg4A+A8O+OcmlRWVQYxiZjBkYCPEBzyVWug==

                  "], "RGB", "XYZ"], Interleaving -> True, Magnification -> 
                Automatic], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSizeRaw -> {24., 24.}, 
              PlotRange -> {{0, 24.}, {0, 24.}}, ImageSize -> 20], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Item\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["None", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   AssessmentResultObject[<|
    "Score" -> 0, "MaxScore" -> 1, "MinScore" -> 0, "AnswerCorrect" -> False, 
     "GivenAnswer" -> "I don't know", "Explanation" -> None, "Timestamp" -> 
     DateObject[{2023, 8, 6, 9, 58, 18.712319`8.02470259679021}, "Instant", 
       "Gregorian", 1.], "AssessmentOptions" -> {}, "AnswerComparisonMethod" -> 
     "Item", "SubmissionCount" -> 1|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "All", "]"}]], "Input",ExpressionUUID->"b13ee74f-\
4606-4d79-b6bc-fdfb9fe42e8f"],

Cell["", "EndOfSlide",ExpressionUUID->"e95a46d2-6ccd-4a5e-9150-8549d995dbd3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"70e63c9e-efdb-439d-a217-f57937298787"],

Cell[CellGroupData[{

Cell["LLMPrompt", "Subsection",ExpressionUUID->"77c01ad2-772a-47e8-9392-06f7f2c002a0"],

Cell[TextData[{
 "LLMPrompt is a lower-level tool than LLMResourceFunction. It gets a prompt \
from the Prompt Repository but does not communicate with the LLM. It is \
typically used along with LLMSynthesize, LLMFunction or ",
 ButtonBox["ChatEvaluate",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/ChatEvaluate.html"], None},
  
  ButtonNote->"http://reference.wolfram.com/language/ref/ChatEvaluate.html"],
 "."
}], "Text",ExpressionUUID->"0a752269-748a-42f0-9d92-46e1486a839b"],

Cell[TextData[{
 "Retrieve the translate prompt with LLMPrompt. It is always given as a ",
 ButtonBox["TemplateObject",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/TemplateObject.html"], 
    None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/TemplateObject.html"],
 ":"
}], "Text",ExpressionUUID->"cf90222b-28b1-46bb-b016-1c446886e7f7"],

Cell[BoxData[
 RowBox[{"prompt", "=", 
  RowBox[{"LLMPrompt", "[", "\"\<Translate\>\"", "]"}]}]], "Input",ExpressionU\
UID->"ed573479-6cd8-419c-b096-0d3fb61a5b4f"],

Cell["Get the prompt text with default parameter values:", "Text",ExpressionUUID->"e590cce0-9af9-4e7e-be5a-ad757cd3be68"],

Cell[BoxData[
 RowBox[{"prompt", "[", "]"}]], "Input",ExpressionUUID->"748aaf1c-a46b-47d6-a6d7-5227a8762eca"],

Cell["Get the prompt text with different values:", "Text",ExpressionUUID->"63d69550-425d-4d12-be6a-dc62f578bf11"],

Cell[BoxData[
 RowBox[{"prompt", "[", 
  RowBox[{"\"\<Korean\>\"", ",", " ", "\"\<Hello, my name is Bob\>\""}], 
  "]"}]], "Input",ExpressionUUID->"f96c01b3-9227-43bd-b707-74617591ddfc"],

Cell["\<\
Use the second argument of LLMPrompt to prefill some values and return a new \
TemplateObject:\
\>", "Text",ExpressionUUID->"2627ec1d-c1ba-40ad-a116-cf833b339be4"],

Cell[BoxData[
 RowBox[{"toKorean", "=", 
  RowBox[{"LLMPrompt", "[", 
   RowBox[{"\"\<Translate\>\"", ",", "\"\<Korean\>\""}], "]"}]}]], "Input",Exp\
ressionUUID->"6d535109-984e-4f97-8bcc-b0bb12ba8fd4"],

Cell[BoxData[
 RowBox[{"toKorean", "[", "\"\<Hello, my name is Bob\>\"", "]"}]], "Input",Exp\
ressionUUID->"f48f01f7-5627-449a-b1c7-c8a718b0c851"],

Cell["Send the prompt to the LLM and get a response:", "Text",ExpressionUUID->"cbd3a562-576f-4867-9031-7f2b27f85f0e"],

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", 
  RowBox[{"toKorean", "[", "\"\<Hello, my name is Bob\>\"", "]"}], 
  "]"}]], "Input",ExpressionUUID->"f5e0a70d-3c7b-4892-a970-ba2b8360f9da"],

Cell["Do the same operation with LLMFunction:", "Text",ExpressionUUID->"9e57c31c-d7e2-4f46-bcd3-c2b6f32dbb3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LLMFunction", "[", 
   RowBox[{"LLMPrompt", "[", "\"\<Translate\>\"", "]"}], "]"}], "[", 
  RowBox[{"\"\<Korean\>\"", ",", "\"\<Hello, my name is Bob\>\""}], 
  "]"}]], "Input",ExpressionUUID->"53a824e5-c5d7-4e88-b9b2-8c09d1b72e47"],

Cell["", "EndOfSlide",ExpressionUUID->"514f01c2-9054-494b-beea-b9fdaf1c11de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c4b51ccf-e13f-4d09-8842-5ec7a2ad0a76"],

Cell[CellGroupData[{

Cell["Combining Prompts", "Subsection",ExpressionUUID->"2ffc8be4-010b-4763-bb37-becb5b20cd2a"],

Cell["\<\
Perhaps the most exciting feature of the Prompt Repository is how easy it is \
to combine prompts to create new behaviours.\
\>", "Text",ExpressionUUID->"4b417d21-6954-4ef1-af26-741d6650da40"],

Cell[TextData[{
 "Create a ",
 ButtonBox["haiku",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/\
HaikuStyled/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/HaikuStyled/\
"],
 " from a ",
 ButtonBox["cheerleader",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/\
Cheerleader/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/Cheerleader/\
"],
 " about muffins:"
}], "Text",ExpressionUUID->"de755511-cca8-4f87-a1d6-07cbdd6d1723"],

Cell[BoxData[
 RowBox[{"haiku", " ", "=", " ", 
  RowBox[{"LLMSynthesize", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LLMPrompt", "[", "\"\<Cheerleader\>\"", "]"}], ",", 
     RowBox[{"LLMPrompt", "[", "\"\<HaikuStyled\>\"", "]"}], ",", 
     "\"\<Tell me about baking muffins\>\""}], "}"}], "]"}]}]], "Input",Expres\
sionUUID->"8e7de8d4-2e33-4082-8c3d-a1976c548b50"],

Cell[TextData[{
 "Create a tool for ",
 ButtonBox["summarising",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/\
Summarize/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/Summarize/"],
 " content at a fourth-grade ",
 ButtonBox["level",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/\
GradeLevelSuited/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/\
GradeLevelSuited/"],
 ":"
}], "Text",ExpressionUUID->"e4a77753-2351-47ce-a72a-4b047f0622c7"],

Cell[BoxData[
 RowBox[{"fourthGradeSummarize", "=", 
  RowBox[{"LLMFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LLMPrompt", "[", 
      RowBox[{"\"\<GradeLevelSuited\>\"", ",", "4"}], "]"}], ",", 
     RowBox[{"LLMPrompt", "[", "\"\<Summarize\>\"", "]"}]}], "}"}], 
   "]"}]}]], "Input",ExpressionUUID->"2c76bc76-a9d0-4d06-814a-aa68d8d156df"],

Cell[BoxData[
 RowBox[{"text", "=", 
  RowBox[{"RandomChoice", "@", 
   RowBox[{"TextCases", "[", 
    RowBox[{
     RowBox[{"ResourceData", "[", "\"\<War and Peace\>\"", "]"}], ",", 
     "\"\<Paragraph\>\""}], "]"}]}]}]], "Input",ExpressionUUID->"281b5df2-\
89bb-4797-ba49-87fe999ff286"],

Cell[BoxData[
 RowBox[{"fourthGradeSummarize", "[", "text", "]"}]], "Input",ExpressionUUID->"48cbd78e-73df-4401-b4a7-e35f95e6a503"],

Cell["", "EndOfSlide",ExpressionUUID->"dc20e1e2-2593-470e-94ec-32964751d06b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"77f7c721-c1ee-4004-a0fc-e52bf3ac132a"],

Cell[CellGroupData[{

Cell["Categories of Prompts", "Subsection",ExpressionUUID->"db66f31a-6957-4228-b56a-b17ab128503b"],

Cell[TextData[{
 "Sometimes prompts don\[CloseCurlyQuote]t work well together. For example, \
it would be difficult to have a piece of text that was ",
 ButtonBox["understandable by a five-year-old",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/ELI5/"]\
, None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/ELI5/"],
 ", yet also ",
 ButtonBox["full of medical jargon",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/\
MedicalJargonize/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/\
MedicalJargonize/"],
 ". For this reason, the Prompt Repository currently contains three \
categories of prompts:"
}], "Text",ExpressionUUID->"52e39a16-6aad-45b0-81d2-96804d7787e4"],

Cell[TextData[ButtonBox["Personas",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://resources.wolframcloud.com/PromptRepository/category/\
personas"], None},
 ButtonNote->
  "https://resources.wolframcloud.com/PromptRepository/category/personas"]], \
"Item",ExpressionUUID->"c89b46de-4704-41e6-b557-201113702fd8"],

Cell[TextData[ButtonBox["Modifiers",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://resources.wolframcloud.com/PromptRepository/category/modifier-\
prompts"], None},
 ButtonNote->
  "https://resources.wolframcloud.com/PromptRepository/category/modifier-\
prompts"]], "Item",ExpressionUUID->"88906b47-3052-455e-9e17-1fb4ed97f693"],

Cell[TextData[ButtonBox["Functions",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://resources.wolframcloud.com/PromptRepository/category/function-\
prompts"], None},
 ButtonNote->
  "https://resources.wolframcloud.com/PromptRepository/category/function-\
prompts"]], "Item",ExpressionUUID->"ff898ace-15b9-4a52-8b68-6deb8e84f781"],

Cell["A prompt can be in more than one category.", "Text",ExpressionUUID->"5c9e39d3-3482-4714-99c5-ecf69535a7a4"],

Cell[CellGroupData[{

Cell["Personas", "Subsubsection",ExpressionUUID->"54a3208c-5a94-4aa8-8a69-0700411c3f61"],

Cell["\[OpenCurlyDoubleQuote]You are X. Respond like X, doing X-like things\
\[Ellipsis].\[CloseCurlyDoubleQuote]", "Text",ExpressionUUID->"b0265fc6-7b45-\
47a5-8176-adb868190115"],

Cell[TextData[{
 "Get a ",
 ButtonBox["Wolfram Language assistant",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/Wolfie/\
"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/Wolfie/"],
 ":"
}], "Text",ExpressionUUID->"3e89b800-bab4-4b65-82a3-b4d582b56ca2"],

Cell[BoxData[
 RowBox[{"LLMPrompt", "[", "\"\<Wolfie\>\"", "]"}]], "Input",ExpressionUUID->"b0be8569-04e1-4464-99e7-b5511ccc8bf4"],

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"LLMPrompt", "[", "\"\<Wolfie\>\"", "]"}], ",", 
    "\"\<How can I collect apply a function to the last value in an \
array?\>\""}], "}"}], "]"}]], "Input",ExpressionUUID->"48b8243c-3d7a-4d87-\
9b99-9c0dc1ddf9bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modifiers", "Subsubsection",ExpressionUUID->"0655e5a0-2066-4fe4-a58e-e4bee4ee3770"],

Cell["\[OpenCurlyDoubleQuote]Always respond in the form of X. Never do Y\
\[Ellipsis].\[CloseCurlyDoubleQuote]", "Text",ExpressionUUID->"db8fe9f5-bf61-\
45f7-8f69-5d63cceac244"],

Cell[TextData[{
 "Return results in ",
 ButtonBox["JSON format",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/JSON"],
     None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/JSON"],
 ":"
}], "Text",ExpressionUUID->"a393f637-d8c6-41b4-8a34-ae1c5ecec549"],

Cell[BoxData[
 RowBox[{"LLMSynthesize", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"LLMPrompt", "[", "\"\<JSON\>\"", "]"}], ",", 
    "\"\<Give me some stats about Usain Bolt\>\""}], "}"}], "]"}]], "Input",Ex\
pressionUUID->"ed384848-25c8-423d-9a5b-47cdbda9f089"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",ExpressionUUID->"05065130-56aa-4da0-8d06-6a320eee7b00"],

Cell["\[OpenCurlyDoubleQuote]Convert the text below according to \
X\[Ellipsis].\[CloseCurlyDoubleQuote]", "Text",ExpressionUUID->"a1dd1f2b-5b0c-\
466b-b7f6-ca7b50ac826a"],

Cell[TextData[{
 ButtonBox["Convert code",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/resources/\
CodeImport"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PromptRepository/resources/CodeImport"],
 " from other languages to Wolfram Language:"
}], "Text",ExpressionUUID->"a564ae7d-3e93-4694-aebc-1fc5858dd447"],

Cell[BoxData[
 RowBox[{"javaScript", " ", "=", " ", 
  RowBox[{
   RowBox[{"LLMResourceFunction", "[", "\"\<CodeImport\>\"", "]"}], "[", 
   "\[IndentingNewLine]", 
   RowBox[{
   "\"\<function transpose(matrix) {\n  const rows = matrix.length, cols = \
matrix[0].length;\n  const grid = [];\n  for (let j = 0; j < cols; j++) {\n   \
 grid[j] = Array(rows);\n  }\n  for (let i = 0; i < rows; i++) {\n    for \
(let j = 0; j < cols; j++) {\n      grid[j][i] = matrix[i][j];\n    }\n  }\n  \
return grid;\n}\>\"", ",", "\[IndentingNewLine]", "\"\<Javascript\>\""}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",ExpressionUUID->"aedfb276-74b4-\
4e67-81dc-b666c3795411"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReleaseHold", "[", "javaScript", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"transpose", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]}], "Input",ExpressionUUID->\
"66dd17f6-6c52-4234-a236-33494cc3159b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combining prompts", "Subsubsection",ExpressionUUID->"1855dab1-5344-4e6b-bb84-8b24bc13e1af"],

Cell["\<\
Prompts can be combined in many ways, but there are some rules:\
\>", "Text",ExpressionUUID->"b2dc9e89-a38e-41bb-8b1d-01b1e1e844df"],

Cell[TextData[{
 "The \[OpenCurlyDoubleQuote]maximum\[CloseCurlyDoubleQuote] combination you \
can have is 1 persona + 1 function + ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "4a8da397-e019-4581-9866-591b9928ebcf"],
 " modifiers."
}], "Item",ExpressionUUID->"af954b64-2ff7-470c-9322-33b985a279f5"],

Cell["\<\
Many modifiers and functions are mutually exclusive (e.g. a response can\
\[CloseCurlyQuote]t be both CSV and JSON).\
\>", "Item",ExpressionUUID->"0954d2bb-bec0-4498-835f-47f8a94c359a"],

Cell[TextData[{
 "Composition of prompts is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " like composition of functions; they do not nest."
}], "Item",ExpressionUUID->"bc08ea41-f511-4d88-896f-90cd9f1dc324"],

Cell["", "EndOfSlide",ExpressionUUID->"e52bd786-9fd8-401f-9136-02756d97f2ff"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"06ea562f-b061-4033-a372-f6c6a228a0cd"],

Cell[CellGroupData[{

Cell["Creating Your Own Prompts", "Subsection",ExpressionUUID->"bbb6c004-5d97-4646-bd18-03a4778e54b7"],

Cell["\<\
It is easy to create your own prompt, whether you want to use it yourself, \
share it with a team or submit it for publication in the Prompt Repository.\
\>", "Text",ExpressionUUID->"650e9a1e-5f58-4209-a109-74403b42bae4"],

Cell[TextData[{
 "To create a prompt, go to the ",
 ButtonBox["Prompt Repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository/"], None},
  ButtonNote->"https://resources.wolframcloud.com/PromptRepository/"],
 " and click ",
 StyleBox["Submit a Prompt",
  FontSlant->"Italic"],
 ". This will download a new prompt definition notebook:"
}], "Text",ExpressionUUID->"e4e610e2-aecd-4d0c-9b1a-bf7a55b77052"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Wtq9Zdxlee0+MLNt0W2nX9tUeVtd4ymff+t7zrUepV4yzL5m3pSf8a5Z2Dn3
Ped6neSR6Zd0xgAAKpK+VwIAAAAAgpN1A70yqRUrVhg1NTWmV199FWVEzumT
Tz5pKnb+JadO+hqtdM55TP3OsWjP2IqtGSdrNVrbyJ/9tP9BTX7+0azRKb6P
sbrfBXltVPc933cbOjgzq6G9/WezgjwyXWN1cNfIgvVBVy/Qs36j9Nfe7vsu
c7Vadq+7Om9b51quUYyn8/cLejuucalx1HE9yX1Kxtn63pxJLcgjMybpjAEA
VCR9rwQAAAAABOOVRUpGlXRehngVyyXJJJPVs32DvOf665d0VX7v3sf75713
3tSWrts551uV+VNV9/HE/d3y3jt+eCPfx+isr5S5HpMYa2e9V9BsjDwyXWO1
ZEbrvH0IydHDtuuc47dr6+JztVqk9tf+HlnfNcrxdOaRq+Z3yvv+jPHNAu1n
lyNbHTuoYd73ySOzJ+mMAQBUJH2vBAAAAAAEU6weMulcDMmSa4BMMj1mO57r
y/yQqu+9Z3qrvPdKhuC2nXOdyruntVLex+03XJ733hV3dfR1fJ/tGVmQFW1d
2SeRsd7wYPeCvthrvlSRR6ZnrKR9Z42x1xqPftww7JK8dlXWXnXO73pXkd8R
0DWezjzSWSsadG7kSaMvzduPc81Y8sjsSTpjAAAVSd8rAQAAAAD+ua0XSU0k
LG61kqwnmYznl/cKnKXY52aUTKbYdpJL2ffRo1195X3IHLD29765cZCv49u3
OX9Nu6AZoA7O9fWC1q+RR6ZjrKQGsmnDkwvOqTM7C0JydPs8x6o1l1J7bH9P
kPmN/Yyn23qwYwc2zNtm2+q+vvbx+Z78eaDdzhl5ZPaEyQdqepxhvHhDJ9Pm
dsd7brtz6KXmdruvubLwe9WX59rxamNLp5OL7m9r19Ny37Psubat+R7V49l2
9XkFbbiRdkvt23R9B2Nb/wu05TE1veobr88abRx4armxb8U817F01fY4sz/7
ls81Pty40njjznHGC/3O8TUeW7vV8dxWxkS2kz56bffSjV2Mdx6aYXz03Grz
/3ePaVWwjfRN5TzY7RrZXNv52D26pbn99kP3TNXrsdRxq54/axz9sJ8b67O0
Z2zrTF0XKpK+VwIAAAAA/JFciSwSpbjVScocv0lfv5Xm050j8p7re+WKdpKX
2Oug+nc7x3N7+zyS8r6Du9UyQXvtmWQUfo9v7xP5c8rKvpMaa8lZnNmVn7lr
LeSRyY6VnEdZH9I5N2qxfC4IZy2tnwzfeR5eeXJAZOPpdrybHL/jMGGEvzmW
n13WM+/9bjXb5JHZEyYfeGvBRMN6vXnXDZ7b/u29N83t/vHV3wq+99XH7+fa
eeeB24q2IbmG9Xp74aS8771yywCj2Ovbr78yvvroPWP/6gWeffzo2T8XbcP5
ksxKZd/W65vPPzXeffgOY3PHE32P855x7YxvvjjofmzffGPmesXyJvOYvv3W
vU9//dwzA7aPx+cvb/Pso/HtP8ztPntxs+v3X5rQzfjqkwPug3Pove8um5Xb
9v2195YcT7eXrvMh42Juc2jMvY7Zfj0WPQc+z5/83e9Lsl3nZ0mu+aJ9T9F1
4UfS90oAAAAAgD9kkVDlzCSZtzUZLRqf6ju/cK5tJ2voeW1/3ZCLfdeQvf70
wLz39Otytu9jc/YzSKapkz3DFc8HqKXLSh658LarzNwurCBjFMVYSV3tAzPb
FqxHamly0UnGxzuqtYxldd/z89peOre98nv/4JjjWOY81nWOVfJIIeNsbSN1
nvL7C6r7GDPgopL3I/LI7AmTD9jzyLfmT/DcVjWP/Pabr40tXU51z3+u75Db
7u17p+Z9TyWDktfXBz8qWjvmJ4+0t6G6b3n99Z3XfI2x1NEV5EYuOZIz75Ea
NslgC14u75X6OJXxkNrGkrnT3q0F39s16gqlY/jb/reMze1PiCWPtF5u5yOX
R375Weg80u/5C5JHfrxprXIemabrgjwSAAAAAMqXW21k0pkX0qumpoYayRS4
aURj39nHjPHN8t7z2lMDPbdfs7Bz3va3XV86I1k+r0Pee+befIXvY3v8vq55
bUhmluRY2+ehFGsXd/HdRlbySJ2kzjVIn5xjJXnwi+urPO1ed7Xx9EM9zPUa
Jdsb3f9Ccx5j5/ypdl1b1zPn49Uxjp/sHFGQWx/YNlz5/S8/OSDvvUHXcFQZ
z2J55K3X5a9jKfWeKu1L5muviZbflXDbjjwye9KWRzrzlSB55Hsr7zJrwGRu
ztf+OML44LH7zZzTnr3IvJZeOYtkLC/0Oaso+3yx9n1L/mR9XebzlHlE31+z
OG//8neV8X3z7vF54/Lp9qeMPeO+mytWMtvXZ44y/vH3v5rf+6Tm8fzxfv/t
w4f7zTfmuarpWc/8nmSpB3c9m9f2azOGl8ydpL4xSO701ccf5NqQ/e6d1NP8
usz1KfOXWvmfXCPWuDnHW3I06/XlWy+5nhNd50NXHhnk/Mm8ps7jOrj7+Vwb
8n7n9+35fak8Mk3XBXkkAAAAAJQvaiPhFzWSyVs1v1Pes32pZSz1njbN6+a2
r1/nmJLbH3hheN4+rrzstJLvGT+8ke+aSqc/OTLNlk1qJzrWzjk+l85p57uN
SswjdzzaL1CfnGMVBcnmZQ5XXePo/Dz263yW7zakVtPexvZH/a3hqDqexfLI
VzfkZ6LD+5yv1P7aRV3y3rewSM5IHpk9acwjzbxw6KWB80h7BmWRnOevf3k1
t81f333dM2fZNaKZ8jiU2reQtQKtl2RCpdqUOkEZq2LHa5FMb/+ji/K+9uqt
g3Lvk7zLbSyF5LbWy21uUrd60bcXTfaVO8l8qNbr7wfedT/WQ9tITaTXWoSS
/1qvL17fHen50JFHhjl/TpJjWq8dgy/x3NYrj0zTdRFE0vdKAAAAAIAaqWuj
NhJ+udVIJn0tV5p3nh+S92y/WaNTPLeXOSnt24+sulBpP855YT/c5j23pWSH
9u2ldsrvsa2c3zGvjaYNT050rJ1zfUpe6rcN8sjgY6WL1C9KXXGpuuAgJH+0
72vFXR19tzFrYn5eN3FkYy19U80jhf3zK+MldZ+l2pd1aO3tF6s5JY/MnjD5
gO480tzmn/NGfvmXVwrznxB5pFtG9NqMYUVzFt15pPj6s0+KZkVOHzz+YK7N
Umv0Fe7n49x735h7rXd+ZZu707l2pzUeMmb2vm/peJJy7iT1iEGPI+/cac4j
vc6HjjwyzPlz0pVHpum6CCLpeyUAAAAAQI1zrlZqI6HKWSPJnK3xkxpH1ezv
ifu75W37yJ1qa9tNv7Zp3vseu7dr0W1l//Zti83bWIrMu2lvR/LAJMfZOefn
kw+ozWNpl5U8UubolBxRB5UsS2WswpBr8IZhl5jzCH+0Xc86kU7OOmLJ8YKs
Selce1XmCdZRw+knj5SM0E+uKnPS2rfv2b5B0W3JI7MnTD6gO4/86743jI+3
PJZr85Xp/fPzn5B5pPjLfdNz2znXXIwtj/zmm5JtyjqX1qtYHZsbqbezXqXy
NPHq7UNy23/59l738fj2H+a8t9brw40rlXMne44ox10qTysm0jzScT505JFB
z58bHXlk2q6LIJK+VwIAAAAA1Mg8m+SRCMKZR0q2nfT1XGkkV7A/39+ysnfR
baXWyr7tO5uGKO1j47Keee+7sbpR0W1f+HPfvG0njCi+rRfJsuztyNp0SY6z
M+OqWdXHdxtZySPffnZw4n1yjpXkcttW9y3Juaaq+ZlYUfwzocsDM9vm7XNg
93MCt+WsR964tIf28fTKI993bOuVL4qHZ7fL215qm4ttSx6ZPWHyAd155N8P
7DPXsrMyDOdckTrySHuuJftzzVkM/XnkzmFNc7WfklWValMyMtVt7fZO7J7r
y8eb1ym9Jzfen39aJHf6Nu88yd+3D7hIOXf62/63cn2S43p32SyzVtXPcenO
I73Oh448Muj5c6Mjj0zjdeFX0vdKAAAAAIAa55ybMg9n0jkXssE5ZytrSMZv
oaOWaf70VkW3bXTBibntZD1E1X1IzaPUe1nvlfyq2LYLbr1SOZvw4qwTE0mN
sbPmU8g6e37bIY+MfqykJtFZMyxrMupcJ9JNh5an5+1zzcLOgdu6a2rLvLZG
91ebV9nPeHrlkcI596y8v9i2na+ql1cX+qlHTSx5ZPaEyQd055FffXLA/Lus
JWi9JLvK5T8a8kgzK/r6K9e+2PNIySqlXtPp4K5nfedfUuf5j79+kdvmg/UP
ePZP1rq0Xl++9ZKvcyJza+b68shspfdY+ZtkR8XGQ/7+0o1dcn//4o09yrnT
jiGNjW+/+dqwv+Tv0v62fuco9VFnHlnqfITNI8OcPzc68sg0Xhd+JX2vBAAA
AACoYe1IBEUembyda/op5QzOPOL6oRf72k/X1vXy3r9vs/v6cNV9z9eSbTnn
gCyViUTJLRt9P0BfyCPjGavVCzoVnK/Ft0eXeznXcRWS0UldYRCyDqyzNjjI
Gqxe41kqj5Q8VSU3fHfT0LztRpVYk5Y8MnvC5AO680hZ387Knv7xty//mVt9
Y2ztXve7/EdTHim5pz1PcctZir3c5lq171v6LWvvCTkeZw4ntWabO57o2b+X
p/bLbS/z1/o5J/ZjeG3GcKX3/O39t3PvkfrUYrmTkLUQrdfeyb2Uc6ft/S/M
XQPO12cvbjG/79XHoHlkkPMRNo8Mc/7c6Mgj03pd+JH0vRIAAAAAoIY8stCi
RYtyqqqq8ti/J5LuK3lkZftsT37tYrF1Fp35gt/6rbk3X5H3/lXzO7luZ8+2
ZI7NMMdmPy4h618mMcayfp4zbwpSb0ceGd9YdWp1RkGm994W9ww9rLuntSq4
PnQLU2/pNp6l8kjJP2XMrO1bNqntup2zPvvZZT092yWPzJ4w+YD+PPKT3Nde
nzU61/YnL2wwv7ZnXLvc18LkkZJBfRfafFs0s5EsRnIvp1L1kUVfh/Yl75V1
/EqN695JPXNv+3T7077OyQePP5R77xt3jlN6z1cf7c+9Z0vHk9xzp7bHmV+T
esbcPKf/zI/95E4vTehmfPnmi4XD8803Zo5X7H1B88gg5yNsHhnm/LnRkUem
/bpQkfS9EgAAAACgplLzSHvWWLduXeN73/teKNKGsGeWSR9j3HmkSPp6rkTO
uSIPvDC8YBtZ87HUNl6cdZhu9ZWf7ByRt01V17NDHVfry+vktXfHhGaJjO+k
UflrEhbLZkohj4xvrF5cX1WQ6Y0d2DCSvjrrGaPQv1vw9SjdxrNUHimuHdww
7z1SJ+zcxv4ZlXlyS7VJHpk9YfIBySCtlzMfdPr7B++Y2/3j738tmqHY80hh
r8+S9Rx3jWxedH++5mv959p+zrxJx/qRkrt+9NxqUy73lP4umqzcnmRk1uuv
777u85zcmHvv/kcXKb1HMmK3DMstd3JmW+88cPs/x/RrX7mT1EN+um1DLsMy
93+oDasW1iloHhnkfMh1YV6rf/vScz/23NEah7Dnz42OPDIr14WXpO+VAAAA
AAA1lZJHWvmjV/ZY+wffN/X66Y9Mc//vEcZTtY8qsOqUX5vfs7T7/35kcsso
ZZ9JHzt5ZHm7Zdxlec/4NzzYvWAbWUPP+r7kJ0H2Y6+XkrUond/fsqJ3Xj/m
TW0Z6rgmjb40r73eHc9MZHzbtaib14+bRjQO1A55ZLxjNXFkfo4stq3uq7Wf
Lz85IK99qemV60UHZ7sfbqvWNp4qeeSWlfmf5xnj838f4K1D14n9+1PHNinZ
Jnlk9oTJB166qXsuf5Aswmtbq+bsq48/KJqhOPPI3aNbHs51/vKqsX1gw8N5
UsA8sqbHGbas6LWiOUvQPNK+7z3j2ua+LjlsqXla7awcR8bNzznZfc2VuX26
1XI6bW5/Qm5757kpljvJe+R4rKxKjsvKrvzmTjuHXpqbm9fMyv58j3s/Nawf
qXo+/v7+X77byLFuotPbCyfl2nv11kFazp8bHXlk1q4LN0nfKwEAAAAAaso5
j7TqH4vljrOP+qlp6wm/crW9fi1fak76tfk+aVPyTGt/5ZpJkkemg8xjan/G
/8cJzfO+L7WQ9u/fPKZ0buBGarTs7TjXULxnev68lZJnhDku5xyzp5xYK9A8
qWHIvJXOeWNXzu8YqC3yyHjHStYglWvG3k6Lxqdq7eftN1yuJat246wPXjqn
nbbxVMkjhcz/bL3HORf0nVNa5rX50vqqku2RR2ZPmHxAatlyGcfu5z23teZt
/OK1nUUzFGceaWYxO57J7eOV6f1zfw6aR0qdnPVyru2nO48UksNYrwNPPKzc
5tefHl7jUnJf1ffZcySpA7XPs+nm3WUzc9t//sp2pdxJvDnv+tz33l+7JJc3
B8mdJMuzXp+9tMX9uDTkkarn4+Du53LbFKvXFB88/mBuu+0DLtJy/tzoyCOz
eF04JX2vBAAAAACoKbc80i2DVM0fnbbV/W2gPNJO9it9SHpcyCPLl+QuXnWE
axd3KVk/qWLJjDZ57TjXtKvue37e9yXLC3Nc724aWlDfFrTvQUn26OzDX54L
lteRR8Y/Vg/Pbldw/h6c1VZbP+15nahZ1Udb2861Gbu2rqdtPFXzyD848lZ7
fal9ntqmDU9Wao88MnvCZgRWzmjOw+rIJtzypg+fWVE0Q3HLI6We0ZpfNVe3
ZgTLI1/o3eDw/KCH/l9q84rlLLryyBfMdfX+kdunzFOq0uZ7K+/KtfnXfW/4
y21s6zO+t2q+57b22sSXp/RVzp3E3w/sy+Vb1lyobrnTzurLPfuwc1jT3H4+
21vjuo2uPFLlfLy/bknu/fZ1IYtdt851SMOePycdeWQarwu/kr5XAgAAAADU
lEse6cwh7Rmkav7o9ELt3/jKI2V7Zxuyf+lPOa4nSR6ZHvZMqe6pR+d9zzlv
pazzGGQfsn6cvR1Zk7JYH4Kusegk88IGyVF06damft7+Lzz7hMBtkUcmM1Zy
LdrbknmH/a6f6kayuSjPp1sev2/zUC3jqfo5cn7mJ4xo5Pr1u6e1UmqPPDJ7
wmYEsj5eLvtZPtc1R7LXijmzDXuG4pZHCsmUnC+/eeSL4zvlZSzO2khnzqIr
jxT2OrpSWVpO2+OMf/z1i9z7Pty4ynU7yadk3D554cnc1+z5nmRlr94+xPW8
SN2bV2ZWKnfac+3h+U+tlzN3stYt/OKNPUVrDQ88tfzw+D0y23UbXXmkyvl4
8YZOue/LfKNbOp1csM3rM0fltpH8Tef5c9KVR6bpuggi6XslAAAAAEBNOeSR
9hxy/PFHGfcdf2TgDJI8kjwyi8YObFi0hk9ql6yvy7p0YfYjmYvVlqxJaX1d
Ms4o5q1ccOuVBZmM1IPGMabvPD+kYN+quYsb8shkxsqZG4obhl0Suo/OnH/a
2Kbax6FDy9Pz9iGfBx3j6SfXt88ba82ZPPOm5nntSXaq0hZ5ZPaEzQh2jboi
L3f4eOt6Y8/Y1kZNr/rGq7cPNb7+7OPD2cY7r7m2USqPlMzjmy8/y9vPX5ZM
K5pBfVLzuPHSjV2M1/44wvjgsfuNL17flfdeqeXc2q2OZ84idXGvzxpdlL22
slT+Za6r98919OT18s19lMZW9mN/Sfb79qLJ5tygeyf1NHM1q3bUbHdqv9x7
D+58Nu+9cmzyfXnv24unGF999F7e92V9Qb+5k7kf29ym8sqrbzz0HmsdRXl9
+/XfjQ83rjSvC6l7levk0+1PH37zt/8wtvW/wHU/OvNIlfMh+8hdL3/70nhj
9jXGC33OMtc0PbBhWd4xv3h9B+3nz05XHpma64I8EgAAAMjZ92h346U5lxmb
x9bLeazz75Bx1rmUcyvkPCd9rcUp63lk3bp1zbyv3S/+y/hz3WOMXZfWM3Zc
eGpq8khrHUnySETJOS+lNZfqxzuq875+x4RmofbjzD2tOrMtK3rnfT3oGotO
kj0612+ULCSOMZ00+tKCHOuDmmGB2yOPTG6snNet2LXu6sDtSSYndcj29naH
aK8Y5xzJQeuOw+SRzj48/VAP83cRrL/7mUeWPDJ7wmYEZj5hW5Ox2Etyl2Lz
dpbMI9vkz/kqL6/6SK/XwV3PGlu6nOp+HLacpdRLck7V/Eu8eff43DZex+n0
1vwJh+cX9Xi9v2Zx/nvbHmfWgJZ6SW61d3KvkuNRLHeS3NneP2cdnJxze32s
1+uNOWOLjoPOPFLlfEg+Z89Si70+3bYhmvNnozOPTMt1EUTS90oAAABAF8mm
yB4rk2STSV9/cchyHikZn2R9807+nZlDWnTlkbIepK48MumxIo8sb69uGJD3
nH/KNU3Mr29c2iPv65IbhtmPcz3Fdfd2Mb9+z/RWReszwxrd/8K8tiWfjDoz
e2l9VUF+Vd3vglBtkkcmN1bvbRlqztNqb1Pq/oK25/xcyRjGMQ5C5koN246f
PFJ+58A5bva/L5/XQbkt8sjsCZsRWGT+SnvNmf0l69ZJbVmpDOWrTw547kPq
K62Xah4pucrfD7xr1uHJNl7t68gj3334juLH+dH+3HZvLZioPLZSi/m3/W8V
5lrffmt8ffAjM6st9t4377rB+OaLg4Xj8s03xpdvveR5XvJyJ4/+7V+9ILed
a+7U9jjjgycecu2HvGS+0z3j2nruI2geGeZ8SA2nHI/bS7JKmYs26vMnguSR
8ln02i4V14VPSd8rAQAAAB0kj0o6E0Pyyj2XzHIeadVGSv5ozyOFjjxShM0j
ZQ1L8kjEQeZStJ7zyzyP8jWph7TneJ/tGRlqH85cQ+aslK9X9z0/9zXn+pVh
7VzTryCTGdTj3EjH0jlPptj+aF+tY0ceGe9YLbztqoJz+sid7QO15czIw9Yd
e5H6w7D1wWHySFHV9eyCsbPuKVKDrdoOeWT2hM0InLZdfZ7x2oxh5tyPMmdq
sVpEBLNrZHMzS5L5PmXeUdX3be54orl2p+Ru9rlm4yZ93juxu5nlyf9v7Xpa
4mOqMnZ7xrUz3l44yczdS2WCUZy/KI8tDdeFiqTvlQAAAEAYVk1k0jkY0qVc
c8lyyCOdWWSa8kjpn/Qz6bEijyx/fTqemZcTyNe6tamf+1qPdvW17Me+HmWz
RqeYX7NnWv27naP92CaMaFSQhaya3ymScXTLra4fenHodskjkx0ryeIbXXBi
XruS4ftdj/TgrpEFtZZSnxzVWDw0q23oWsyweaTUQbvlkfJ7CH7aIY/MnqQz
BgBQkfS9EgAAAAiqVE3k8/2OMd6+/iSUod3DjzdVWiaZ5TyyqqrKzPueOe/k
gjzyhdNqackjt9X9LXkkeWQmOJ/1732if15uctfUllr2M9mxruK+zUPz/n73
tFbaj+2j7dVG/TrHFOQhMm+mzv2suKtjwT6k3tNvZuWGPDL5sXrukV4F53fS
qMa+2li7KD+bszL5qDjnSxV+16oMm0ce3F2YwQpZS9JPO+SR2ZN0xgAAKpK+
VwIAAABBeGWRklN9PLU2KoRXLllumWQ55JHO9SPF9jOP15JHSsYYNI+cfdRP
zf5JP5MeK/LI8rdpeX7Wcsu4y0JlGMVseLB7Xru333B53t+3ruwTyfE592vV
gW5bHW4eVcvj93V1rQGTr+tonzwyHWMlWZzzHMt6oarvl/pf+3vvnKIn5/fS
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
uhrbH+1rfLpzROJ9dbNr3dXG8nkdjHsO9f3W6y4z+z792qbGotuuMtYs7Gxs
XdnH+HhHdeL9BD+zAQAAAMQjq3mk5HdWRvHnP5xqnHXKjwsySamLnD17tlkX
+cN//6Fx5513Gr8+6tfBs0hb++ecc44x5pox5p9/deSvjHl3zTN+9L9/VFG1
keSR6SLXUYc2rRPPE8OQtSpLzWuc9DiTR6aLPNPs1qZ+ID3a1TeG9DrPmDSq
sTFvakvzea889311wwDjk4ie7Ybpr2Vwz+/6fPe0VsbK+R2NLSt6m8+sD+4e
mei5OLhrpPH4fV2NsQMbGqecWMs44ogjlMi2o/tfaDx2b9fIn6mrjv+CW6+M
ZP8Pz26ntP9bxgX7WXrt4IaBr6ue7RsYI6suNKaNbWosPDROqxd0Mras1Hdt
Dex+TuhrXxf53B/YNjyWz0UWP/M6+uyX3Dvi6mMS934/alb1MT+HF5/3e+X7
aK3fHWn06Xim8dCstsb+rcMS67tckzKe0pcTjv2Ncv/l/iP56ntbhmrri8r9
8J3nh5RsR3LTpO9Zdn+a10HPuSqjn9lx3z/l3wgq9xldn8Xxwxtpv4cCAAAA
SclqHmllE6O6/sb4cuMFZibpViPZqdPhushGjRsZgwcP9p0X1v/5D4xhJ/+k
oH3JI8859xzzz23btTW6dO0SKIvMam0keWR6LFq0qCzySK/ayDTXSJJHJkee
N6o+Q/PrrDOONWsDnl/eS1s9QJT9FW2a1zVraORZW1znQJ5Hzp7UwnweHrb/
0obU/USVCaiOf91Tj46kBkQ1X+jU6oxA7V949gmRXVstGp9qzJrYwtj7eP9A
fdNxfej0zMM9Yvl8ZPEzH3Wf3UjukJY+RnHvVyG/AyD71nEM1X3PN/7y3ODY
+i7Zzl1TW5r3ztB973eBlutZ5X4oGXSpdiSzjvvz4KX15XVCjUs5/swOKuj9
Uz6rKu3LOIcdg93rrlba15IZbWL7vAMAAABhZDGPtNdGShZpcauRlLrIuXfO
NX796+/qIm+66SajTp06vvLCZZccaRzocqyZS9rbl/laZd7Wf/2f/2p8/399
35g5c6ZRq1at1MzT+uqY03M29z0zEus7nWEsb3lazhODGhk10ztlUjnkkTff
OD7xTDEMWTOyWA6Z5nUkySOTE9dzc3muuXZxl8z0V4yqujDy59Gr5ncy6tc5
Rnvf5Zm2rhqQoOMvc9Pp3PcuxWeKIo15pF3X1vXMZ6R++kYemZ3PfKXnkXa6
7v1eZL5VyUV0910+czPGN4t8PtS9T/Q3mjY8WXv/JRMOU19GHlmonH9mh+Xn
/im/p6ByfclYf7YnXB37mAEXKY2/1LtG+TkHAAAAdMliHumsjbTk1UjaMkmz
LnLId3WRtU+rbUycOFE5i5S6SMkiLc72e/bqabS6spX55wsvutCorq5OdJ5W
yR4fbXOuce8lF8KnLOeRktGVQx4pZM5W57ytkkVaWWXdunUTH2/yyPSI+7m5
PDN++9ngz/vj7q88j158u7/n/CrkuVf/budE3n+Zw0/ns3Q/4z+8z/lax2zy
6EuV9532PNIi46n6DJQ8MjufefLIQmHv/cXcOSX6rOvcBscZrz01MJLr+4n7
u0Xad5kbVNaYjOp+WCl5ZCX8zNbBz/1T5l9XaVPm+w16/B/UDFP62Slz0Ubx
+QYAAACikLU80qqNlFpIexZpkYzSLZOccNOEXF3koEGDjMaXNi6ZFUo9pD2L
FHnzth7yXz/5L2PhwoXGz37+M/P9119/vVGvfr3Y52mVWsWk87ysI49MP8kl
ySNhl8Rzc/l9d6kHyUp/xa3X6ZtLW9bda9dCfy1PMS2b1Na2BpOf8ZdngDqf
q/qpSclKHmn19cNtpceJPDJeYT7z5JHuwtz73Uzy8TsKYUmut+PRflqv7Y3L
esbW/6Vz20dyP6yEPLJSfmbrpHL/lDmKVX6ud2h5euDjV/l9BVmnNeoaaAAA
AECnrOWRVpYntZBueaRrJnlI7dq1jYmTvquLPPLII4158+YZ//6jf/eVRRbL
JJs1a2b069fPbOOkk04ypk6d6plD6swiqYckj7TnkUnnhXHkkXKcSY83eWR6
JPWsSp7/vPJk6eeYaemvmHlT89Dj/e6moUaTi06Kve/yXFnHemJ+x/+RO/0/
A3cj69D52W+W8kgha0uWqpMkj4xf0M88eWRxQe/9djJ/o6zvGHff5TOo67p/
45lBsX+m/c4HSh5ZeT+zdVK5fy48dN9SaevF9VW+j13mhFXJO3X82w4AAACI
U5byyGLrRqpmkj/+8eH1JX/5y18WXafOOUerSiZp95//+Z9Fv6czi1SpiVza
5KKcP1/eEB6ynEdKzWAl5JHM1wqnJJ9Vyfx9Weqv8Lvmn5PkZEn1vVmjU8x6
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
q6wXmZUskjwyWXE8q1JZX0h+xz4t/ZUsq9Q+ZH0plbZaNqldsi0Zn4O7gs/5
5iTzx8nz7FL79VOXqjL+UpPQtOHJ2p6lLrztqqJtybh6HWNa88g9j1WVbL/J
RSdpuxbII9Xo/MzH1ecsjKuue7/kD6XaETvX9NM6Rv27naO0X1mzUbXN++5o
o9TmC3/um+j1ISoxj6ykn9lpvH/K9VSqLfldJJnr1u39Kp9Z+Tkc92cJAAAA
0CkreWTUc7UmkUdKvadKJumcq5XaSPLINOeRYXVoc7jOMgtZJHlksuJ4VlWq
bk68v1VtLsQ4+quyxt/LCs9AP905Qum58/VDL9Z+XieOLL0Ok/C7zprX+Eut
09ybi6+7Jt//5NCYqO7La77EUutDpTWPlNyiVPty/em6Dsgj1ej6zMfZ5yyM
q657f+vL68T6ubE8dm9XpfuorAmp2ua6e7sotSmZSxRrI/pRaXlkpf3MTuv9
U34mlWpv7aIuBe97d5P3nAqiT8czY/8cAQAAALqlPY+Ma+3IJPJIYV9LstgY
PNrmXPJI8siKyCOzmEWSRyYr6mdVH+9QW1soLf2VmgeV/qrURmxc1lOprS0r
e2s/rzse7ae07z/N66D1eilV27Diro5K+ym1hpc82/T6flrzSJU19dq1qKvt
OiCPLE3nZz6uPmdhXHXd+1XPj8yDqnuMpG5NpcZz7MCGym2+t6V0ZmKRmjnJ
RJO6Riotj6zEn9lpvH/uXnd1yfZ6tm9Q8D6VuZDTUHcMAAAAhJWVPFJyu6jz
SGtNxyB5ZJi8tFSNJHO1kkeWex5pn59VjmXRokWJjyl5ZDZE/axKnv2oPHNN
S3+3rdbX3zsmNCvZljzrjurcqsz/JuOp83qRHNGrrrFHu/pK+/F6rihZ44vr
vec9TWseOXdy8fpRi858kDyyNJ2f+bj6nIVx1XXvl3keS7UjJMOIYpxUarXk
vuGnzRaNT1U6Jvv9LIkcpdLyyEr8mZ3G+6eQvLFUu/Za0c/3lK7HDvrvAgAA
ACBt0p5HWlmdzG0aVx457OSfKOeRsm3YPNKqkZTslTySPLLS8sis1kSSR6ZD
1M+qSs2rKfyslxdlf6UWRmVeQNlGpb1+Xc4u2VaHlqdHdm67talfcv+yVpbO
60XqRkqd832bh5bcj9f8bw/Oams883CPSJ47Rv38XeWauGlEY23XAHmkN92f
+Tj6nIVxFbru/SrtiGLryYU1Z1ILpf3LtaTapuo8sE6SYz5yZ3utaxd6qbQ8
shJ/Zqfx/ink3xKl2r1l3GW57dcuLj0P8rPLesbyuQEAAACiRh5ZmAv6ySPr
//wHofNI+zqS5JHf2XXdMOPtBxYYn+7aZv4/eWTpPFKun6SzRb+smsgsZ5Hk
kcmK8lmVrJUnawaWan9U1YWp6O/k0ZcqPROu7neBUnttmtct2ZasGRXVuZ06
tknJ/Z/b4Dit18v6JV2NdzYN8dxG8gWvfewqMVfbgW3DjdULOnluk8Y8UuV5
qfCzFl0p5JHedH/m/fRZcoXqvueHsv3R4DVzWbn333b95SXbadrw5Miuvw0P
dle6RmTtOj/tqmRfxUiN3rSxTY03Nw6K9LNXaXlkJf7MTuP90yJzl3u1K2us
Wr8HID/zvbaVeRui/KwAAAAAcSKPLMwjhd88Mmz/rP0u73N03vG/Oub0vCxy
aZOLEs8KoyK5o3B7ST6pax+Scbq1l+U8UrI8uX6yVCNpZZFZziHJI5MX1bMq
qVXxmrfT7vH71NfHiqK/sp7XlGtKPwe0bFmhtnZUowtOLNnWAzPbRnZupY5G
5bm2zutl6Zx25nZezxGbNTrFcx9ezzj7dT7L3EbGzasfacsjZV45lXXoxIEX
hmu7Bsgj3UX1mffTZx3WLOycqnEVuu/9Nwy7pGQ7w/ucH9n1987z3r9fYZE5
pP20K/cElcy2lN4dzzQz0yiOvdLyyEr8mZ3G+6fl6Ye850EQ8jPupRLzt6ve
awAAAICsSHseaa0fGUceac8FVdaQtNaOFGH3a80V61xDshLySMkGVV669+PM
JbOcRzozSVmPMem80Yv0z/rsJD1u5JHZFsWzKnku26fjmUrPqeR5rJ+553T1
V/Ypz7Ck1sHPM2E/OZfKWlBh8oRSnri/m9Ix6bxe7p72Xe3jkhmtPbfb+0T/
QOMmzx5lmzuntNR2nuyieP7+5APdPeeftZP5+nReA+SRh8XxmffTZx3SlkdG
ce8f0qv0+o03VjeK7PqTPqocz/PLe/lue9nc0vmTKqmbk9pznXO5VloeWYk/
s9N4/7ST31/yal9+96nUMfpZEwAAAADIAvJI91xQZc5WHXO1OmszKzGPLFYT
6XyFmbe1VOYp2WTW80hhzdsqZF3GpHPHYsphzUjyyHTQ+axK5g4c2P0cX89Q
/c59ptJfefYkc+E5SR2JzOsnc3wFfebr5/f8VZ7ZyTqIUZ3bTct7KR3Th9uq
tY2/zK0o2+3fOsxzu+nXNnVt/7lHivdZxvOTnSPM7W697rJInoHqev7+8Y5q
c+5aWe/Nz/Ul68rpvAYqJY9My2feT591SEMeGfW9X2VNPfs6clFQOZ61i7oE
alt+X0FHnaRFMjVZY1fHepqVlkdW4s9skbb7p53c48J+JqzfYwIAAADKRVby
SMnr4sgjVedstddG6shKrf3K8ZJH6s8kJW8s9SqHPFJYdZI6aiWf6t/LeK7p
+Tny9/W3TAnVnth6wq9MvX76I7OfixYtSnzcyCOzSeVZlaypNHZQwwL9u51j
5i1Bn1XJc1M/z9VU+xuVnu0bKPdT1jRSafOFPwdf/62U3SXWYbTIWm+6xv/m
MU1y23rVSdWvc4zv9kfa1portW5VlHmk5HfOz8KYAReZ14c811Wdl9VJxkv3
NVApeWQaPvNJ9DnqPDIN935ZZ7NUe3MnXxHpNajymX5oVtvA7e95rMq8J+q8
NuRetnFpuOyskvLISv2ZHaWg908n1fkFin0OPt8TzfkCAAAAkpL2PFLqBePM
I+1ztnrVSOqsjSSPVM8j5eV3LUmVLLKc8kgh+Z69VjJoLmnlhm4kn3RmkxvW
rTM2Pf20sfZPfyrIId3amH3UT8uiRpI8MjlJPqsK8iw9qf5KzvT+1mHK/ZTa
FJV2t67sE9m53bmmn1If3tyo79mmfd7E1Qs6eW7rfK4rzwy98g37s/Xxwxt5
th1lHhkFqcvxcx5UkUfG95lPos9R55Fp6LfKWpSzJ7WI9BpUySMfnt0u1D4O
bBtu1nnqrJUUy+d1CNynSsojK/VndlTC3D+dwsxrHPZzCQAAAKRRVvJIXbmf
3xpJt0xSd21kpeeRqnmh/RVF1llOeWSxXNJPNilZo1ceaffarZNz4/jZ88+Y
///enl3G1gnjimaR5JHQIalnVUHrWZLor9StfbTdXx2nUHmuvOHB7pGdW6+5
T+1kblFd4y+1U9a2Mo+j13P8SaMvzWv7eY+56pz1lGMHevcjS3mkXCdh65iK
IY+M9zMfd5+zmEf6vff3aFd6vtZpY93nf9ZF5bjW3RtsvlandzcNNX+vQ+uY
3xzs520l5ZGiEn9mRyHs/dNJsuIg9cPyHql7jep8AQAAAElJex65vM/RuRwl
rjzSmUkWyyJ1ZqTkkf5eKvO2+q27LMc80iuXtGeTxfJJlSzywMNLzAxy3x+m
ml7u3Cr3//J6uVvrknkk87UiqCSeVYWZWy/u/so6h0Hn+lJ5frZqfqfIzq08
H1c5Rp3jP7r/hcrbn3XGsXnbThhR/Bn81LFN8rYdVXWhZz+ykkdGmUUK8sh4
P/Nx9zlreWSQe//wPueXbPe6IRdHdv1J9qNybLL2n879vrdlqPHHCc3NuW11
jP2SGa1996HS8shK/Jmtm477pxu5fv32ZdFtV0V2rgAAAIAkpT2PFEnkkcKt
RlL3PK0WaY88Ul8m6TeLLPc80p5LFssmrXyyQ5vWuYyyVBb5Su8O5thJHml9
zcoi5c/y+ur9/eSRiEycz6rkuepj93bNRH9lP68/PTBUX2W+siSflz04q23J
/cv8qDrH35lHblnZ23P77Y8enrPV61nwS+ur8tothzxS5qF80XFcupFHxvuZ
99Pne6a3MufoDCNM7U9W7v0qtYIDu58T2fUn14TKMTrvUbrIOf7TvA7mep1h
zoHUqn9Q42/+zErLIyvxZ3Ya759uPt05wtd6tbKtvCeq/gAAAABJylIeGeca
ks4aSckkhe55Wp15pNSDkkf6f0kbliBZZKXkkW75pGSTxfJJyQu98siPH12R
Vw9p5ZDW14RklS93vcr1/b1++iNzP0mPA3lkdsXxrEpqwCaObGx8uC38/F1x
9Pe+O9poGdt2LeoqPcOL6tx61Rta5HmvzvF35pHi3AbHFd1+yjXf1T1uW923
6DZNG55c0GaW80jJZoLUKgVBHhnvZ95Pn5fM0LvPNI6rjnv/7Tdcrv0+5sfa
RWo1azLPatTnTNYulM9r0PMh58LP/iotj6zEn9lpvH8Wc+eUlsp9CjMPBwAA
AJB2Wcgjk1hD0i2TjDIXtdomj0zuVYl5pFs+KWs5WvlkqTzyH198kZurVTJI
M3u0ZZFCXvtm3kIeiUhE+ayqQ8vTjaVz2/ta60hHf9s0r2tu50al3zKPqKx9
GLavVV3PLrmvlk1qR3ZuZRxK7V9q9HSOv1seeceEZkW3l6xStpH134ptM396
q4I2s5ZHSm2S5Aiy9lgUc9kVUyl5ZFo+8376XM55pM57/8LbrlLa5ycR1ULd
dn3pPFTEuU7dW88ONiaPvlRpvUMnPzVslZZHVuLP7DTeP4uR32vwWpPaItvo
+P03AAAAIK2ykEfaayR11yX6zSSjykTJI5N/kUcepppHfvPZQTNztGoi7Vmk
tY1klO/ePsUzj2S+VgSl+rxJni+76dq6njlX3thBDY2bxzQx5xvbte5q47M9
0TybCvucX9YhVDneuTeH/936mTc1L7kfeZ4cxVhJ5qXyrPr6of7WXQuSR5aa
73D3oevF67mzW91RknmkbFPs89CzfQNjSK/zzPXsbr3uMjMPjHIOu1IqJY9M
y2deV5/TMq5puPeXmvPZIttFMU7ymS6174vP+30i53D/1mHGmAEXKY2PZemc
dsrtV1oeWYk/s9N4//Ry04jGJfsi28TRFwAAACApWckjT/jFv5m5xZknx18j
ac8Lo27fedzkkfG9yCP955EfLn8olz9aeaST5JEvtbvcM4+Umsykj5k8Mpuy
8NxcZ39lzTWV36+X54L7Noebf+/55b2UnuNJzZzucXp2WU+lfa+4q6PW8XfL
I4VX3YfX/IPd2tR3bS/JPDLK5++6kUfG+5nX1ecsjGtcpO5K5V4muYnufUt9
p0pGFOUcniqee6SXcq2kNUe2iqTvh3HnkZX4MzuN908vf1CYv1m2ibofAAAA
QJKykkf+6j/+n0RrJOPKO7NYH7nrumGB3xt0rccoXuSRhXmkVxYp9na6whw7
a55WJ3l9+dJuzzbKMY9cs3xO4vf2SpGVZ9I6+7vg1iuVnvtJ3U+Yvn66c4TS
fqr7nq99nMYOVKt9euf5IVrHv1ge+cDMtkr9UX32Sh6phjzyO3F95nX2OQvj
GheVeSzr1zlG+37/NK+D0nXzyJ3tEx+jtYvV1rns0/FM5TaTvh/GnUdW4s/s
NN4/vZBHAgAAANnIIyWjs6/fmMQ6kuSRxbNI6yV1jkK+ViqjlO+npS7SepFH
HibXYu0ffL9kHin23zPHzCMt8jV5Sc3k1x8eMPa0vMTz/bIfyT+TPmbyyGzK
0jNpXf2VehtZt1Dl+ZrMPximv7LWU6l9SF2BzrXP5PhU6hmCPL8PmkdKjYXK
eKuOC3mkGvLIw5+JuD7zuvqchXGNi9f6snablvfSut8e7eor7ffNjYMSHyPR
u+OZJfsq9zjV9pK+H8adR4pK+5mdxvunF/JIAAAAIBt5ZIPf/TCXQ1q5nazp
mHSGqJN1bMMbHpGpPNIrUyyWT6apJtL+WnnvorxMSTKmpHOuLOSRMqfrjHZX
GqtWrTLHUTJJ49tvjbum3Gz8+Mc/Ntvxmve1HPLIJ598Mu/a2br+lsTv7ZUi
S8+kdfZ39YJOSs/WZJ20MP2dfq3ac/Q/TmiubYxkHSeVfUqmp3v8i+WRwmte
Vr/9I49UQx55WFyfeZ19zsK4xuHph3oonbugn3s3Nav6KO3zrDOOTXx8LLMm
tijZX8nSVNtL+n6YRB5ZaT+z03j/9EIeCQAAAKQ/j7TXRso8rZJDluO8rdZx
SfaalTwySK6YtppI+2vdunXkkbY8stR8rdbaj3Y/+MEPjFq1ahV83co33bJJ
8kiEkaVn0rr7q1IHIdYu6hK4v68/PVBpH/KM+N1N4ddeem/LUOV1xOR5u+7x
98ojn7i/m1K/LBuX9SzaFnmkGvLIfHF85nX3OQvjGrXP94xSrs96/L6uWvbZ
+vI6SvubO/mKwPuQvkrtuK5xuu+ONiX7e8qJtZTbS/p+mEQeWWk/s9N4//RC
HgkAAACkP4+010Y6awnLad5WyVat3CYLeaR9ntZyee3fvz8vU1qxYkXiOVdS
ZD1HK0OU/FCyR4szZ5RthWSK1rqT8v/WmpCLFi3Kfd2ZT1p/lm2SPuYwnHP9
kkfGJ0vPpHX3d8uK3krP1qT+ReYrC9rnfp3PUtqPbCfP3cOMz6Ae5yrtq2WT
2pGMv1ce+dmekeazcJX+lZqXjjxSDXlkvrg+81m4r2ahj3b3TG+lfO72bx0W
al+Lb79KaV+SI31QE2xf1j4kZ31pfZWWMRo/vFHJPjdteLJye0nfD5PII0Ul
/cxO4/3TC3kkAAAAkP480q0W0p7dSSZZLnWSbnO2pjWPTHOdY9CXM4+s9BpJ
K5N0Y2WQftu0sklx7LHHBm4nTZy1kSLp+3olydozad397dflbKXna3dOaRm4
z88u66m0DzFp9KWB93PLuMuU97Piro6RjL9XHikmjmys1L+pY5t4tkMeqYY8
slAcn/ks3Fez0Ec7qSNUrSOTOq5PA67v56eOW8ZQxz7kuGQ+zDDjI+sZqtSQ
9ul4pnKbSd8Pk8ojK+lndhrvn17IIwEAAIB055H2uVq96gnLZe5W+1y0ViaZ
xjwyres/6ng552yt5BpJKz8Ukhlaf066T2kj1wi1kcnJ2jNp3f2VZ5kqz9bk
efG+zcHnZmty0UnKzx1vHtPEOLhbvbZA6g79PNeU2kM/7fsZ/1J55K51Vyv1
ce/j/T3bIY9UQx5ZKI7PfBbuq1noo9NNI9R+n0F0vqqe7/MnmaBq5qlyn3Kz
c02/ovvo2rqesfvQPTLI2Kiuzyt1maptJn0/TCqPFJXyMzuN908v5JEAAABA
uvNIt7lanZmkVVMoJM9LOlPUmUlKHpvGPLIcayOtFzWS8MOtNpI8Ml5ZeyYd
RX9vGHaJ0vO1sYOC1cIIWfdJ9dmjaNboFKXn0i+urzLncfPT9pMPdI9s/Evl
kaLUc16V+QTJI9WQR7qL+jOfhftqFvroJDWSdU89WvleJ/NDr11cei07WcNP
7l1+7qOlarjd/OW5wUr9H3no/iZzY6q0KesdVvc9X7nfftY8TPp+mGQeWSk/
s9N4//RCHgkAAABkI48slTOWWyZpP56lXU5MXR5ZjmtH2l/OGkmRdO6F9JGc
miwyeVl7Jh1Ff+V3+FVrYoLWrojbri/9HM1JnltKPcum5b2MN54ZZLy5cZD5
ZzlGmZPQb3vXDbk40vFXySPnTW3p2cb86a1KtkEeqYY80l3Un3mVPksuL3Mf
6iK1g35qqLJ277c883AP3/c9qS+bMb6Z8fRDPcz86p3nhxjbVvc1Px9VXdXm
n3SeO7/r4324rdpXzZ3V70mjGpv93Lqyj/H2s4PN/HHjsp7G0jntfOWQQtY7
9NPnpO+HSeaRohJ+Zqfx/umFPBIAAADIRh6pMherPcMrh1zSOp5j/+PHqcsj
k5qzVfYpJA91y0gtYes33WokK33eVuRzyyJZNzIZWXsmHVV/Z01sofRsrUPL
0wP3XbICqf3z+zxSF1lb7OMd1ZGOv0oe+c6mIZ5tqNTvkEeqIY8sLsrPvEqf
oyBZVdLjGocbqxsldh8Vex6r8t3nKdc0SbTPfq8PkfT9MOk8shJ+Zgf9nMfx
byY35JEAAABAuvNIv2tDOudvlT9neV3JNOeRcWWSVgYZpIYzTP927NhBJglX
xbJIaiOTkbVn0lH195OdI5TnAVy7qPT8f8XIs1M/8w3qcsKxvzHXbox6/FXy
SNGtTX3X9/doV1/p/eSRasgji4vyM08eGS05d+1a1E1kjJfNbR+oz1Inl2S2
9ccJzX33Oen7YdJ5pCj3n9lBP+dx/ZvJiTwSAAAASG8eKWsnWrmi3xzPvgZj
lnNJ6XOa88goM0mpcQySQ7oJWi/pNm+rkDUDk87EkAy39SLJIpOVtWfSUfZX
5r9TebZ21hnH+p6rz04yA2kjruea8sxw7+P9Yxl/1TxS5k2UuQadZC5GlfeT
R6ohj/QW1WeePDJ6kof0bN8g1vFds7Bz6D4P7+NvjlUd5H4ZpL9J3w/TkEeK
cv6ZHeZzHte/mezIIwEAAIDyzCOdc55mOZu8sd1xqc4jhe6XrhzSWS8Z5OWV
SZJLVg6piZT6WLLI9MnaM+ko+/v5nlHK63vdOaVlqOOQ9csuPu/3kT/XlPne
ZA2ruMZfNY8MizxSDXmkt6g+8+SR8ZD5NOX6jXpcZa28DQ9219bvu6e1iu2a
kPH5bE+wLCjp+2Fa8khRrj+zw3zO4/w3k4U8EgAAAEh/Hin5YdgaQ7dcMivZ
5NuLL0h9Hhk064sri7T3M0itpNvcrW7ZpJDcSqckcjfU5M5nsQySLDI9svZM
Our+yjNn1efT+zaXXufQy4EXhke6DtrYgQ2N/VuHxTr+5JHpQh5ZWhSfefLI
+Egmsui2q8z5LaMYU5kXNsh6kaXIfSTqLFXGJUwfk74fpimPFOX4Mzvs5zzO
fzMJ8kgAAAAgvXnk8IZHaMkjVbJJnfuoxDxS6Ji3Ncos0i6KTDIqcdZgFpuL
FGSRaZa1Z9Jx9Ldr63pqzw4HNdRyTC+urzLzM13PNFs2qW1sf7RvIuNPHpku
5JFqdH/mySPjJznOuMEXaxtLmTNTPj9R93v3uquN3h3P1Hod9DnUno75PpO+
H6Ytj7SU08/sNN4/vZBHAgAAAJWVR3plk2mtk8xKHhk2k4wri7TqJIO+4s4l
48ojySLVrVk+J/H7Ng5TeVa1dnGXxPsZZ393rbta6dma/L6/zBeo69ieXdbT
uGHYJeZzcL/PM085sZaZ0T1+X9dEx3/6tU1juQ5K5ZFDegXL2FSef7+3JXyN
R1xU8sgJIxol3s8w11waP/Plkkem6d6vau8T/c08QnUeSef5lSzvwVltjY93
VMfe77mTrzDaNK8b6NxLfajkPS9rzOeSvh+q7F9HzV1Q5fAzO433Ty9LZrQu
uR/ZJqlrAgAAAIhDpeaRWZGlPDJozif1ilnKTiWTjCuXjCOPJItUyyDFm5tv
TPyeDWTBttV9jVkTWxjXD73YqOp6tnHlZaeZ60qddcax5p/7dTnbrAX644Tm
xpYVvc05C5PuMwCkieSzC2+7ypg4srFZByxzr0rGVb/OMUazRqcYPds3MGu6
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
/NvQOnf8t9N3Sv23AJAmL67vn7teF9x6pbZ2ddwb/DybCXoPdvPHCc3Nfj8w
s23i5wdA+sWRRz7f75hMZZEia3lkFLlgUq+4ayOL5ZEiSBZJHolKc/sNl+f+
3Tzy6gsS7w8Kye9ly/kZ2OPcxPvi5pUnB+SuobuntSr4/pQxTXLf/3Bb+n9X
dMuK3nnPCeX4ku5T1OR3ea3jnTz6UrNW45E7Oxib/kTNBlDOpH7d+ux3bHXG
oc99e/Pzf9e0luYzsaT7F5V7Z7TOO+6k+5MUmYtS6vPsP/Pkd1OeWdoj8b6V
mzR/1g4c+reZ1bdbxqk/55H82nqf1AUFeZ9QmQ/1hT/3zXvP/i3RzheydE77
3Ofh7ecG533P+v2tob3PS/y6SotS/y0ApIncr6zr9emH9P2803Fv8PNsJug9
2M0zD/cw2xkz4KLEzw+A9Is6j3RbMzLtWaTIWh5ZTq805JFB6yLJI1FpXrb9
t6OQ3CvpPqWNzLUi/20hkqjt27d5aO78yH+fJD0ebmQ+WauPUl/h/H7P9g3M
7/XrfHbifVU5n/J81joemVPNT61AFkmdkHW8Ui+UdH8qTdL3GFQ26/fhxXOP
9Eq8PzrIccjnSTKfYjnHatuzSJmXOuk+J8GeH8h42es6ZOyo+9IrzZ81e9bn
p17YnutLG0HeJ1563Ht+QKn7kef79us1yvGQ/hR7xi/zSVjfmzmRZwSWUv8t
AKTJzJsO34/lM62jTR33Br/PZoLeg93Y/3swC78/DCBZUeaRblmk7C/pY1aR
pTwyrrla43ylLY/0k0WSR6KS2GuimHfInfzOpDU2Mp9Z3PuXZ1bW/nWub6GT
rBdj9fH1pwfmfU/Wu7S+N/3apon3VfV8vvxEf/N3TtM4P65uq+Yffi6/dnGX
xPtTaZK+x6CySe5k/e5F0jVaulg/k7ye48nvmcizO/kdgHI5bj8k35EaCOt3
hay18bau7JO7H8nv5iTdz3KS5s/asrntc+dd/u2j+j77egIHfDy/tr9PJb9a
v6Rr3vayzlmU42F9Nm4Y9v+zd99/llR1/sf/nf3x+4NrWrOArisrSFLSgpLD
EGdgYBWERZJIVESyqJhAhBGJomRJAwzDIKDQk5iBGSZ0rxvZ+s67hs/tzz19
TuXbdbv7VY/H8wHT91bdiqeqzuecz/nHGZ/5e/a9LfsjzSdF7wLAuLF87V3m
R+iibKhbN9O0DE6x/p20jwRQZlTxyLkci5S5FI+cT7labZrtPpJF8chfX3lp
/eURj8QC4NtCK69O120E5wtrP6nn8z7G0fvF1fsPjs3KB47vfX/EKJdMah/5
3KfKTdb3uvZ9PMfRledO5wVS/Ljv9VloOCfRl9VPnDy49q//zt69r09XFF/T
Nl1wxj/1vi7j6pWHpvt/+bzcvs+kzo++13O+GPdrTe3FbP0sNl2Fj7HW+T2b
z/z0qq8kv6tx0SzPhrnl8u7Gewv559a/PDIzrvaTK78y+Fxj0PV97MZF0bsA
ME62u7FOY20OmmpbNjSpm2laBqdobBj6OAOoYhTxSC0jjEXKW/f1P856VXMl
Hjkf+0ZqGqd4ZKPlEY/EPKf3RGsXqOdOX//04n3HtVq2nvFX/X5Rbjb7Wqpf
0XN3H52tfvKU5HeUF3H5746pFXPR8732y9kV22Kr3uSl+4/L6/q2VRgPp2z9
NJafHZsq4+vEKOer+jzov1W+r34jWv8VO86Fsnwtk+6d7qyTZu6jX1974ODz
sraWOi91Lup72hejOO/qHs8ybz+3JN+3Ov+a1r/oPNE2K97c9Bi3WadFX99Z
d6/6vra/rX2vMbJ0HHQt1J331T+ckL+PF12j2i5dJ1XP55iJJ07O6xxT9a5a
dx2TJtex2DVXpV636jmpY6kxrOzYtj1WVamPVJNrUttedR+Etrx4el6OSthH
WZ/p/NK9Sv9fZ7ldnTsa861u2x3tB+3HOufTqI/5o64t/4Oz2Dda17f2ocr7
Ovmw391xvLUPi/re+Hxjas/Tyfr2UM7rN3eWQSeM5FnqAZdb0f/d2kB1Paam
HXPFd2L7UH9TeVu3rKnzvJJS9vzY5tnE1L3WVO7p95Q3tMnxr3o/NRbDr3Pc
1z89fa1delb1/Bd+Pnv+0Djjqe/7cRxtvkdui9dLtbk/mNOP2xlXu+jMeHsG
xS+q5pTRuaPjoHO0aZ/YKsdS31HZ0rRPc5t3Fyl7F4itr67ZiZZtHpreS3QO
an82PUfaavI80NX6d1GepZZbVoa/s/y0/HjpPK1zPbS5B8euQeXAqdIWQupc
G3XKhth61q2bqVIG132OtG2484aDOzs3AMxPo4hHxmKRc2HMSG+uxCPnY99I
m8YhHqm/E48EZnp0x3u8z5G04dnpMQr/8IuvN1qmcimpPj3MMXL5t740431J
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
kPn9WvV+WsSeA2J9hVJ8m4xYv/cq81m5a8fFlxOKsdn3dBx8+x/fR63J/SHF
4rJFx9Ufh/BYqcywz2J56nee39P3nbBcrHosv1Xh/qT2nvYd35aqzbtLStG7
gJbvY4WpMsRftyuCsqjNvcSXq1q3VAzG4jqxPNqWMzwWKwyPW1F8q8nzQNv1
H0V55svR8LlYfLsRvcfG7oO+X59/z297D657Dfp7bdtro6hsKNK0bsaXpWEs
uc1zpF2vYTsGAAi1jUfq+2EsUvrerrbmWjyyKJZYJ6bXJn4Y63vZdrmzHY/s
bHnEIzEP+efW2PuWvYen3rdCyvNR9swf48dwiz2v+/eyWN2Cz+mXykHl30tT
45iIvXfE3sH8O2Ds/de3/wz7TXnWZlj9DpquX2xcrpDvWxGOVZfi68hiYyWa
R937oe/LoDbO9vfYmCo+d5rv/1llLBaxtqZ++5ued2XHM9znaqvt/+7rU8I+
OZ71zQjr9e5y50sqZuNzCCruWrZNbddp8wvF+XRTlEvJ5gv7KXg+R5SvF1Y7
BPt7qh7Tt3HWdqZyUyqXqH1PfT39Zz5nWdj+WvwYOP769Hw76jBON1T/VTCW
n30nrDepck76PH86fmH9eldSsTVP8QpbFx+/KxsPWHxdsu//6K+Lolxhvs+I
6puKxk7s4twp2ybfV8fXMSpO4POqper/fH+psE5rto65z9MWy6/nr99Yf1nx
43iFsaey608svhT2+fJ9J2LrlqK8hjZfKr6mvvP2nbCvWp/lvD+nRM8YbfMw
x6TGnIv1IZ50sYQwdhtTZfuLxhuVVOyu7fOKlD0/tnk2aXqt+XtMbCxT4/tz
+5hOlftpEf8cEMtxm+LbmMRyyFaZz+re7Zrw/bCtj47GntO/fXkU9sGvc39I
8e8eig+kvpe6V77mnoti/TRj118Yb6xyLP29NIxdeb5Njn92afPuklL0LuDz
UBaNqedzdYRtNNvcS3wujzDOaXzO4HAdfazxW4kxRVPxrS6eB9qs/6jKs7Ln
I58vVXlpY99JtYVscw9ucg36/NRtr40qz9GhNnUzw2XwcJvLNs+Rdnzr5pwF
sPC0iUemYpFv3RfPlz+XzMV4ZBiTbBLLU+7WplOVZdftfzmb8UghHgmk+ToP
jSmo51jP5/Ypqls39i6gd78wd0wRe85NtcP0fQfDZ30fc4vlURHfVrrofcTX
WSsXT/i5xi2yz2PP8b4NpuoE1AY1JqyvabJ+RXVvxrcpTeXBDVmb2Fj9jufb
Wfu2m77dbyyuav0vwvdNP58+S+07e4/3dWRNz7uy4yk+J9o1bqwOn4OuLG5n
6xy2ZfV5P1V3EJvX57sq254u1smPHxbm0y3ij19qLB3ReRurh/F5hB67PV5X
4d+zi96JJwrKBJ/DLTavr99O9aGzHGKxfiNlY+uJv47D8fWqnJPi25GL+lLW
yalXZui8L6gvVF15uL/8vDpvU9eyz1eWui5ieZeNj93a8Ui1R2h77vj7TGrM
Hp+L2vcd9H16rikYi9nvy0cj18Coj7lYP7VYfj3Rbw6eCRJ9+ItiS2XXn+JB
tnzVN9vffd1qKk9sio+PpvrOp+5b41DO/+b6g4aOu/Zrqg66CR8bsOvD/j9W
F+rL6tg4XaGy7fd1r2F5aHzszsfd2j6vVHl+bPNs0vRas1habJxlT9dCrKys
cj8t4vsy1emX6/us1el/4+ezMs3OQ2sH9vSyowflvOWRt/Iotg/r3B9SfPuU
WJ8vKbpX+nwgRe0M/XNROE5rlWPpc0Km1tOfV2Eu+KbvLkWK3gV8n7Gie5i9
L8TuF03vJYoH2t+L2lMUPTP4mF6qr2gq/tb2eaDt+o+iPKvyfFQ0lqb4NhA+
7t72HtzkGvT51NtcG1Wfo4v2Vd26GV+W6pk0XHaT50g/hm6dsYQBLExt4pFP
Hfd382rMSG+uxiMt7tdm/iaT4oxVl1+lr+RsxSFHhXgk5hvf9rKK2Nh7nn/3
K8p9GfK5Nq9P1AcVxQj82JOpcSP9b6TqnETP2fa9WL2F79sXG0fGj3VShb0r
NFm/on5DxtdRxMbCjPF5fIq+l6oHtDHhwr+L7+sRvlfedOk+tfad9cVqet5V
OZ7ix7jx7/S+TkExpNRvFL1LWxw1NU6gzx2aaoPtdbFOvu67qF4r5Pv3FPVd
svfo8PzyY/GE438Z5Ve174TjeHqpehhft5iKafjzOhzPSHy7eOWc8p/5ceqK
6k1UT2vfC3NeVjknbT38Prd9WlTfUkfqvA/d6sqYP/9h5zHx5VQVYR9R376g
bD1XPnD8jByTulbCfdf23KkyxrGv9/J9B3Uvsb8XxQZ82RnrCz3qY+77AqXq
OS3ensrhPhRbCsZGrXL9+TJMucXs777/TyrnakqVnAKp8mtcynnFJPzYp6Ky
qu2Yof7ZQ/vJrg3lLbW/+/NLZZzV+VbNmVu2/f6aS41Ll4rdtX1eqfL82PTZ
pOm15s8HxdKLlpOKL1W5nxbxOcnr1D/7uu7YmL9l8/k2Pv7a0z6xbfVjMtu5
GBsbQKreH1J836rUfvT3u/BeeVXFtjXWNid2z6tyLH07kVSOGP/sEp5XTd9d
ihS9C5TdR8THQMKcpm3uJT6WmMrPLD9z47eGzwxV7ump+Fvb54G26z+K8qzK
81FqLE3j20L6mF7be3DdazBcvzbXRlHZkNK2bmaoDI6Uc02eI/37QOy9CAC8
MB6psSCbjhk5X2KRMpfjkW01ya1aNwZa1FdyrsciiUdiPrrkG9N5BfW+rnaS
IZ9Tpmz8GT++T5X3F1OlPqgoRuDHnnw9EXOrUt8lvm5d73zh51avEY4RL378
Kb0LqW6+jOVPbbJ+2t9l+9a/l1QZa1KKxkvxfI5d337fx5vCutLhvnfD75U2
HobOuyr7zt6zmp53ZcfT/HRon0+/0/v+FkXjOq5w+Sz9eIV+nMBUnaPPd1Vl
vJ626yQ+P1ad/Ga+f0+qjlzHzOpgNQ6L/6xsLB7xfUGK+mv7HG6+/06Vse+K
xqndeb5N5+AK87f5mElR31J/ToXlapVz0tP2+bx0khq3so6fVixrfN4wqwf1
Y9Qopl12Lfu6On9d6B5VZV31u36sHSu/fF/ptueOv89Y3DWksXpiv+H7dhXV
5aRi9bN1zH09WJizVNRvxz5XjuzYMoruZVWuP80zKMOWTV8bPj5SpS7c+P4J
qb53/jwOy69xKufVZ8O3V5AqeROL+Dpz35/Nl9X6r9ZR+8X6NelvVfKHV9n+
ovFGxY9DF+brb/u8UuX5semzSdNrzffRvuXy9PmgZzrbL4rL+s+q3E+LWD5A
qdMH245H1ftXOJ/vi+XjC5bz14+lqXGFp/dTOu9klftDyrOuzErF+fyyw7hV
US4Ffxxt/libuirHsspzgx8b2Y8B1+bdpUjqXeBdd1yLcgn7dlvLgvtFm3tJ
LKdDTNG4f1VixKn4W9vngbbrP4ryrOz5qGgsTePHCvXjn7a9B9e9BvXe3NW1
UVQ2pLStm6laBtd5jrQ8z3XLdQALU5N45HyPRQrxyOpTnb6RZb81H2KRxCMx
36jNsD1/FvW78vXrZW37fD1kURvGkMaBKasPKooR+HqmVP2Cf88piqsWvX/6
vk+xd2j/vqX2p3WORxfrF2PvGnXqpGz5Yf2W58ez8XEl3+Y/1l7db2fY9876
P4RjNJZpet6VHU/j8/D4fe7HJNP1lJrft1v3Y3H5cfe0rNi8Pq+Sxr8q26a2
6ySp8VuK+P4cRfmjfHtt/b/93b/zF419ZPUokvqO6gz9u7qPC5WNfVc2Tq34
Oq6w34jvg5fqWxrW8/u6nqrnZGz/+22rc+zqnveeb1/gj/vP3XGuO2aXvy6K
xnSNUb8264slPm9w23OnbIxjSeWWq1Ju+5hLlb7QozjmqTH6jK8DVo7P2DJ8
bCnM5Vll7En1qbTvqA+M/d23Saparye+XX8qp4Avv8L71jiW86qT9X0lfW65
uuwZIdZPyffj0fml2Jj9u2oO0CrbXzTeqPh4bfhs1eZ5Rao8PzZ9NilSdK0N
jSH8wwOSy/Djmvl+UlXvp0XsOaCoDj/k+0bXuX/5+cI2ZWHfRn/P9c9+RTni
TdH9IcWuzaJnaOVJSJXv9vfUWBSS6sdX51imzm/PP7v4cfDavLukFL0L+Lho
UfuLVL4BaXMv8WV60ftW0bh/2s9F10dR/K3t80Db9R9FeVb2fFTUjs8M5QZx
favb3oPrXoM/d+8mba+NorIhpm3djC9L1T6u7PeqPkdaOXxDy/ZPABaGuvHI
WCxSy+h7O7q2kOORUmdqG0NUX8n5EockHon5yI89UPR873MVlfU9U84Q+25R
ztGQr4uK1QdpHey9LMzrJ2VjT4rPQflIor5P/SGLluXH00mNnWI5iIpiMl2s
X1lfAKN8aoP3u4r5qYrGa4kdM99e1bf5j7VXL+p7Zzl1tI11YhhNz7sqx1NS
7/RV6pB9302dU76N+G/dmF2pNr9697PvaHyWsm1qu05+/JaycVpSxyD1zq76
IDt/tU/9MX7dlTNF9VOp+iXPj78Y9i3x7Y5jfeT8OLXKlVW2DmEcwF9vmxO5
6nwexLBvatVzssp1WTTmWBV23qfqrLR8fx/xsScfx6iT8ze8Lsr65Meoffqg
3svVK7U9d8rKXp+L+sogt5zvp54aP9Dvsyp9oUdxzH0et1jO5btc/CM2Npz2
gR8TNOxPVHb9ic0f5p9Ujkabt05fUB8bj/W9E19+hfetcSznw2Ph+5LUVdR+
SNQP1n7H1OmTWWX7i8YbDY+B+gb5z9o8r/jtL3p+bPpsUqToWvN9eq+9KP6u
qX6nVkZrvdRX0D6rej9N8f3Xqo6FKT4+WOf+5ecLr21/7MLnat++qWjsUC91
f0ixNnRF/YKK4lZ2fqXOT5UVfnw634+vzrG0ddC1FMtPoe32bW0Ut/CfN313
SSl6F/CxqdRYg+G9JLxftLmX3OvGdYy1UdF7qC+TY+P+lbVb8/fz8N257fNA
2/UfRXlW9nzkx9JM5X9O9fFtew+uew36WH3ba6OobIhpWzczXAYfWHk9i54j
/digdXJTAFi46sQjY7FI6XsbRmGhxyPr9JFsO17lfEQ8EvOFH88gHP8s5PMh
heN3hHy+Ez2Dx94R9e4VthH07SrD3DV6tvb9AMK2ecqTY58pf05q3R5zOWH1
3hF+rjb8/ndidUCKE9rnqb4hflvCviGD/RTJ+VS2fmr/69cv9n4c43MuxuqH
9B4W5uLy/aJieRp9f9Yw/5pv8x9re17U98630Uy9R+ncCetamp53VY6nrxcM
97lvT+vz+xjVMdp77M59OVwX7ut5U3USPodglePddp2G8+lWr0/09QV67w77
uKgcUf8b+06Yx/FBV/fyaEG/G9//MLZ+vmxTHVR4Lti2p+olisapNakxZsT3
5YjFTO52dfNal7AsKDsntR9Vxvjxszxrd+/r33QstC2Ky1TtR+XP+zwvYxAj
0bXk8/mF7bB9n6hUfbau41h7cX9dKD9obF7V1anextfBG9/3QmPudXHu+PtM
qv5U9TT2nTB/3PVurJ7YeeVjbWGd22wdc0mN0Wd8GR1ewypbrHyXWGyp7Prz
YwFfdObwvcX3B0idU7G8kpZnTFJjYPvyK7xv9VXO2xhPeh6IXSc+14C/PnUe
qv6/ah9SO2Z5X+1IGwrVV4fjVpaNJV5n+4fGG03k0/V1628Esbs2zytVnx+b
Pps0vdb0b/9ME94nVDb5Z80wL0TV+2mKbxdza40c+L5vdKy9QpX5wms4lS9f
rO9RuA+b3B9SLJ6eGudQ5WvqGVH8c0+Y31jnjM8jnt/zgrYyVY+lz5setml8
/I4jhq7h2DiuTd9dUoreBXzebz0zhfEPHTcfi4zdL7q6l+h3/POq2pH5Pm0S
yw3kr8/w+vVtYGLPgm2eB7pY/67LsyrPR6mxNI1vzxX2rW57Dy67Bv2zrITl
RtNro6xsCHVRN+PLUh87bPIcaSw3hcqQKn08AaBqPHLNuf8vGot8677yXDFz
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
+fPcH0vFc3y/lTAWVuX6832BUmN8at5YXa7KHLWrCY+PzoPYvvNlnF33ReVP
H+W8Ygza37G4lPofh7+re6f/Tup8DikOeMbxu8z4Dbsu7PzSvvztTQcP1qdo
fKuq2+/HlI715/S5I1JjEzd9Xqnz/Gj7t8mzSdNrTccv7L8jKkdSOeal7v00
pD6XsW2MsRiyH3OyjG/v4+er0//Gn+uxfdj0/hDy/epj54jugf7ZOtbPVv2r
wudvlWHqB6b1sP0du0bqHEuVF3q/UHmsc0RxKeV71bOvf3+I5WbYeX03e3eJ
KXsX0Hb7vKFGzxpqd+LHMg/vF13dS/ScpvdM7X9dZ2qvZMuzZ57UuH+6Nn1f
WzumOoaT7+fatntjbP42zwNdrL9dQ12UZ2XlqG9/EbbjM749bixveH5ONXyv
aXsNNr02qpQNpou6GV+W6t01/H7d50jdN+1eH/YxBoAiZfHI2JiRCyEWKWE8
Ujk4+45zzSblbFU+1hC5WolHAl1TLhXlK9G7r55zy97/VXelcUb0HhvGHbuk
vDpqL6t8lE3GQtC7rd6XVd+h+rhUXZeWrf6cqm/Ue1/Vdzutn5bddP1StCy9
5yiO8uL7uRfL5lGdgN4BdQzDnIxFx12/oW2eWTd8Rt7eXPl9whxEw9/bWQ/0
1Pv7WfHYqudE3fOu6vEsot/QOmo5Om51xtkZldlaJ58T2L/LK9ak45yqC2rL
8hnrXNN/R1lmVOFj15Pvn/d6/9d5pdhMnfWrck5q2aqD0T7WNZUaa1Esh1Ns
7J2YWHxG9W/KY/pmhRx3M7Znx7rpHFRuRbWfr5JHsirdN3Sti+q9qpSZfZ07
Oi9ef78MVvyuznhzoz7mdehc0Lmpc7RKzs6uab+pflv3cd1nUuMyeroXaL/p
PGmy7+13+yjndb6qHNA+Vz+Rojij1Zmm+ngX7tMndm6brC64d+r6fTbSj7hv
TZ5XmpwDTZ9NmtKzo85z7XPF/Pvez3NJk/uD5/t2pe59uj+rz57Oh1QfIpWT
KrO1HlXbCXTJx3ti42qG29zk3SVU9C5gdA/Tea39Ny79r3x/utR4iKJyUMdU
8fAquX9DbZ8H2q6/9FGetdHmHmzXoJ5jm16Dda+NKmXDbKv6HGn9XvU+UKW+
AABMUTwyFovUeJN9r/Ns0Zh/CzkeiebCWLbGI+37fAYAoE9+LBy9c/e9Pn2x
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
OzWPaN/l59KZnxzk0G27rRM/3j+fR/+1v1n8/J2aeZgBAMDCtf3hE7I1h388
m9jn77O1x306m3x2ce/rBAAAAABNLb/skBmxxzt23414JDBCipVY3Ec5OX3u
Uv1bf195weei84V92MJx815zMR3FCP1nykPp58/zjQbj5/l4lWJc/jMfg4vl
NlVcdXrZuw9/tmw61rj2toOj+8X3SwtjfF2u+2tX7zEj1qV9qxyi9m8f11Mc
LVxXn1vX510NtyPf3l8Px1aVj7TsOPr4mY+taZstT26e9zSSm1Z9Sy0u1+X5
489PxU/rnvc+5636qc4Y63LHdeBzACvua58pN62PJyu2Gy7/1e/vEd3nZbFw
7cPwfGmzrVpv+z07PtqX+fW+4xxtNPYoAABYULbce0y2+qCP5LFIs3bRZ/L+
kn2vGwAAAAA0FYtJEo8ERuevN+6bjPms+Lddp+OUwXzqi2jzqb9VLK6h2Jh9
Z8M9wzGbN26e7kP4RiIfrPKPxuJgRbFGo/yUFjNS7Ml/5nOSWl7MkMUMtYww
Xthm3de5/oqx/KohxaYsXvzC2Z+ZEfc0Nhahti22HaK+jDOO44PTuUNXnv+5
6HFUPNq+4/eF8vhOH9/4GKE+duuX3fb88fHMVB7ZFJ+LWPsttU99LNePgen7
TobxXaM+ufadv16/z/Tff3/s9N93XHtV1rfNtorFhNXH0tobWK7g8HwBAADw
3r3tsGziqx8aikWa9afuWpojHwAAAADG2QPH70U8EpgFPu9obBxFG98vlqdT
+TzLYlE+J6b6hfnPXr5oeszFVD2G9QlT/7yhv7u+h74f4Yz5re9e0DfvpfOm
c59GY1GrpseXzGM4wedt1t33NYz1J5y5nw8s3c9i/f3CsS7Lxsm0HKF5PPru
mX0Q/f7Wf+ssWzbed9T0vnrxtM7On3dcPDMVE05RDlSbVzHH1PfecPFWbUd4
zeT9C1+JxzK3LZ/us7pqx3Vkf1ceVt8vVMc3tYwutjX/zeXT/Tmt/+zb908f
F+XHrbtMAAAw/2268cBsYt+ZccihmOTSz2dTK8m3AAAAAGDuKopJ9r1uwHzh
82G+dvWe2YbfHTHEj1kXxt1eueyLg88Ue4kt32JksXim8k7mMZ3I+Iqi/nKD
PmEXfX7wd99X7BUX54kZ/EbQv3MQRzvr09H5FCe03wjje23W3ceoXrn0i5WO
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
U9/3v7mobjxS72TWrjGVTwzzl49Ha7rrrrt6XyfMLuKRadbujnhkfZQtsOcR
5V60+srvf//7lea15xI7j4hHLgyUG3Nb27jCeeedNzj2iiH1vT1mocQjrTya
b/FIUX91my6++OLe138+sb5CxCMBdK3upHhWl7labfI5W/UbXU+XXHLJIM6m
3BBtJuV4Vd4m5XT1OWD175/85Cf556lJsUe9v33jG9+YMWal+mX6sSjCSXkY
9BvKNatJfTjPPPPMoWVs3759aB7Fdn0s1ixdujTfBnsftMnHIx999NE8Zqq8
D+H6an4bE4OJiYmpydT3/W8uqhuPlDfeeCOfR+1iq3xfedTa1hMcffTR+Zhr
umelvqP8ZvpOm3FhNK/Wt6u2sFrOWWedld/n2iznlFNOye/pTdfrpJNO6mS7
YhP1fwvLXIlHdnXticqdorLHqH+GplHGI1UWqJ6sq+VZudm0jKZsQVfseeTd
d98d5BXSe27ZfHqf1aRxwX73u9/l/183HtnlvV/5InW/1nOL/7va4Goa13ik
rmW9n7ddzje/+c287C36jt77uyjHKDfmtrZxBdUpaVJ8o+9t8YrikSpjVNYo
h2zb37F3o5NPPrn0u7q+y67LuqxPwSjikXomaftO5zV5drW++r/97W8rz1Ol
/LPzQPeJrravr3NB6193WdanmXgkgK7VnXRvsLihz//edtKybLl2/+ly0n3X
x9KU+6HJtHbt2uxb3/rWjPheGFfUu5mfdP9Xntii+Yz6TMYmtSnT5/p91SuH
8yk26ad77rmn9Lc0z7Zt2wbz+Hik+qzG4qaexh9nYmJiajL1ff+bi5rEIx9/
/PF8nqmpqeR3VFem+5bPZa62NbrXFNXr651GffNtfEq9s1v9m036ffu+3qnU
5sj6UtiktjGqx6xS36Xf1PjPfrwQrbfa4yxfvjw77rjjSpexfv36ofrPG2+8
cUaOAdWX6J5/6qmnli5v0aJFeVsnLcPvQ1sv3VvLlqH3Uq2Tz1mv+XXcnnrq
qUrbFVI9X2yi/m/haBuPtGu8SnuGE088Mf+uxl9Pfafra89oLEjfT8vKSf2W
2t/Z9/SMrm1ROWV1V/qe1sHTM7Bfvso4/V2xlLJ1UTmt7bTl2zbpXUDxl6r7
/Jlnnsn/rXqw+++/f0YbQq33c889VxqToWzBKNjzyNatW/P+KHaex8aD8yzO
p/6HOq81VYlHdnHvN6o7V5xR8/p7ttrhav3UjuDFF1/M/5aKR9p1qmca/3fV
M7/55pt5GWPXnP7ry5ebb7558H3FaPS3ZcuWVd4HvizQ+utdXmPTFM2rMkn0
/6pXVgzZb7vKJ//966+/fsb+0f/reP/6179udM5QbsxtXfaPbBvf/vnPf55f
N4899ljpd1VW6bupa9nikZZzWuWDcsromcKf/yp7dP2V5Y+15wU9b+jf6jce
1g2qTNA9PmwHofo737dBvz85OVk65kaqHLnlllvy5z89l9m2aDt8eaR107Fp
cgxUpoRjbWn52rY27UWaPLtavDUsk6Vu+Se6p+jeEpaDdh4ollm2Tn2eCxZ3
1nrqWdHX+dq9U38Pf1d0/us5XNeATSr7/Xmj/RmbN0Q8EkBK3WmuxiMV4wv7
Mqqc9XUFZZPuB74/ouKCegZSTE45YHWfsc+uu+66oXl1j/O//4Mf/CC/x+ge
oDY8vq+lja0QThaPtDiixVZVz6nneNUn26T18r+n9xd9R/c6/Z7FGb/3ve8N
/YaPR/p9pee4Bx98MK/T8Z9dffXVNY4CExMT0/TU9/1vLmoSj7ScA3rvCD9T
u0wfP9T7ierjfJ2++jBobOfYsu0dXu9WS5YsmREL0KQ4gb77r//6r/my/Od6
rwrryB944IHktmhZYd1YWEevf5fFDOw39f+6D4fL87+h9UzVm+hdW88S4ZjU
2s7w+eLJJ59Mro/qC8Jt0HEI10PPSHXPGer/Fra28UiLM1Qpc/RcaNdR6jtd
XXtGbRzC3CKaL2zzoGd1tRtIPWOHU9hn0spJPbun1kVxGNV3+knbG66L6gVV
XqaWY+Wq6nu0fb4+SMsK87Co/E0ti7IFo2LPI/ZsYXFC5Qoqms+uB9WpWq6l
snhkV/d+ufDCC6Pz+uXrurXxyMpiGGHZqP4nZZMvR/QMoamsjFbdf3jdhtey
8mGk4rLaJiubfZmi5xX93fdtDctm/U64z3TcVQ9R97yh3Ji7uhw/0mJDTVW9
bkTxc02pe6VdyzrHVUfnn9+1vuE9V9deUVljzwtalvUBTy1LbYI0j/pf+jGr
9Bv+nUmTyoC6+8P+XjaFbbCKqD1FWB7EymQ96zTtT9jk2VVtrDTFyuw65Z/o
+JbdJ/T/t99+e+E69XkuqBzXO3W4zuEzqeKMYfu/sG1xalI7xNkoNwDMT3Wn
uZqvVZPaisTylqo9ocrhskn3G5vvyiuvnHEP0b8vuOCCwXfCcTB/85vf5HHK
2PiLutf69VJ7lHDy8UhRHVFs3Em1ffHxTbXDCe+nmk/bbe9aNoXxSG2Pb0uj
SXlc/XfC+yMTExNTlanv+99c1CQeafcc3Vf831VnZfcxvZ/ccccdQ21Z1cbG
3u30eaz+3N7h9T27j6o+zPpUqv7f2k5aHyitu97L/HJ0f9N7qyb1M4xth3/m
0L1LdZm2vmrLrHczH9vUfTq1T+x79k6quocwf5Ha7tikdrRFx8PWSfvQ50/T
PvPvdN/+9rdnLEPvgLY+2kc+j462T30UrJ5X+debnDfU/y1c4xqPbHvtieq5
/LP4Cy+8kLd7sM8Vy7Q8kv76Ud8Gfe/VV18dlFn6txfm0KoSj/TXusZ2t/bw
orJAbQVt0v5M1eNYuarna9s+lQ2+Tbzqq/y4CYo7hsuhbMEo2f3Pci9YLoai
OIPaNmnSe6n+/fDDD+f/LopHdnnv13ludbP6r85Txfztc/UlVv9pP9WNR4qV
I/b8pXdnX774fMtV4iq+zbGelXw7DWsXZdOKFSuiy7B9ZLFGtQfTeDb6TG0p
LBeff65RX1E9x9kyVOZqXbTvVHb7fVcH5cbc1EVcQW34bdI5XyVfZcwo4pF+
0nV20003DeJpVtb48sM/b3j2LGDjKOnaU79F6zuuZap/nS1HsS+rb9N//b1e
7ScsPqrngVSfw9T+0Pet3LH6QMXFwmeeqv3Lte62D/SMot/V/rPPtZ8sF76m
ojamRZo8u9p6xfJjVy3/RDntbNJ8Ou5WZmt/6nNfh6p9kFqnPs8FPykfgV9W
+Eyq7fHL0PbauWGT3tXD82a2yg0A81PdSTE2ixuqHU1Xk5Zlyw3jeF1Ouv+m
co8qVqj3odikelbfXzCM0dmk53b7nq9PqTL5fK7qxxhOPh6pOGoYS7TJx131
vTp9QH08UuNUxubVe5ePd4Y5B5iYmJiqTH3f/+aiuvFItUexKWz7qhw0tqzU
WBKq87Z3KL3LhJ+H7/Cp2IHqrGwqyjNz/vnnR/+ue5lvU516b9Z2WP16+G7l
+bpL1Tmk4gL2Tq3fTr33Kf9CUZ41xWP13qtJfbTCz/Weq0nv9an10Htrk1xK
HvV/C9O4xiO7uPZs2/SdovGQFHezftqexSqrjB9ZFo/0/RAfeeSRwnWxskzv
DLHvhOWq5cOOsXhHLNcYZQtGKYxHKkZm16OPYXlW72rndFk8sut7vz3PqDxT
2Zb63q233jooq5rEI02V8SPL4ioqV20fqMxLLcfKIH031q/cl73aD6l+S9bO
IVammC7GxaXcmHu6iCvofu7HTdJ5qbYMVfpZeaOKR+r6KbpeVW7YtZS6h/u2
SSqPUteKlUc2KUd07HnH57n1+efr7g9rY9p2/Ei1G9U7ZKqcF+tfYm1P6qr7
7Ko2HzbF2s9WLf/8ftK6p96PdS+yOutUmdv3uaCpLP+F+tvYlMptYBPjRwLo
Wt1JZbnaNlrsMNbXr+6kZdjytOwwB3nXk37vRz/6UTIuqXhe2OdPbQ3tc5X9
qUnz2ffUpqrqpHvQDTfcMJjXt4O0yccjlTs1Nfk+mvaeV3Xy8ciHHnoo+T2f
m1btypmYmJjqTn3f/+aiOvFItaO0e5m+r9iifaYy3Kay3GrWn0FT+C7i3+GL
xqdUf0hNRXGKItZfQdtRlvtH221Tqk7BnjO03KKxriy+oqlqO9AYy9Gj9qzh
Z5b7vqjuryvU/y08VqejunrVsRfRc2g4/6jikW2vPfVjsqkoF3KRruKRKlut
/V6VHHTqL2CTntnDz325et999xUuy2KONu6VR9mCUQrjkWJ5EGJtdHSdWFzN
6njL4pFd3vuVv8AmrXvZ9qkNlqa+45Fqx2T7uWw8Nmsvrbrs8DMre3UMisYF
t2NYZVy+tig35pau4gqx3OY6LxUL93kFiowiHql1iOUxCVnsS9+P9RG2617x
p6L+n/78V7+9ot+0HDTqX9p0f3QVj6zi7LPPHmxbUXmTUiceqe2xKXUvqVr+
3X333YNlFbVZEd3TLPdpaj37PBd0vKv0Ybd8Jbp/xD63iXgkgK41mRQL6zJn
q8/V+v/bu5tWW646j+Nvq19Av4Km6UH3oJueOYjgREI0AR1oMpDYaHSSoIZo
jAOJE2k0iuBzECTEpAcirRMJgYwC4iSk+3fgf1i37qqnvWvv2nXv5wtfcnN2
ndoPZ9datdZvPUzlbFuTDDBzGDP2cphJZq5iu9Z22hH1WPZczH3ImO16qmNk
jai01fI87VzDsu6bWto8sreea8hrbs/z/vvvr/pMluaRWUugjks/DgCsZe/6
74i2eWTa82X66dKGz+OpW9p566kXsmdae57qh08bZMnz1ho/wzX92n7zXpZR
1ryJUOvjLDXjb4upPr3W6sNMBtN7vNqlY+NeW6utmbr/1L9brXfTy2mydnpI
djw11ngr9f89Xq7dk304R/lSeeS5116VYTlm6TpjY+c4N49sxyku6cvMnOnK
L9P/Onx8Sc5RVp+fsoXXtpdH5v4j9Pr9Kztv+zyn8sit6/5aVyhzs5ac6xby
yKyZVyxZUznzwEPv3m5uvmdZc1gzf/0a3yPlxnHcOlfIfUDy9uEe7Lluhu2W
oZfII5euPZO10IvevotL1nePbV/h1PisWPOWh/scrvk8rplHxrrPmVoXZ8y6
d02fZ9veTSaW+9TM+8h7bvekSrk/Ns92aflX9cTSeZltftnL6271u9D6yiuv
3D937/Oben9LlEeSHPMU2jVb45///OeTzhPyu+25LrlW6xi590gmOswF23n/
7dzFpbbzT0LutdLu+tznPjf7u6fmkckf2/OsnWu6NI/MfUUdV/vvAMAa9q7/
jmi7r88S0hbprYFaaxtkDNCS5629HYdrHrb7nM2do9qMOXZq7Zih2QsqpA6d
a6OVqaPqd3qPr8lEzm2/Zzxsu27uMDvJmKgi/bTJFy79PRrr/9v7+83trT6d
9AtlT8M5h3MR98wjp669KsOm1jKdc6s8MvMzw5p5iLVvT69/dE3faMbnF8O+
ImULL2kvj0yGWNlC9mltj689Udo5v1N55NZ1f72u9GMvOdct5JH1fpbcY8WM
9wq9NRKr7M3c8qlzVKYZ0sY/tQ96jcqNY3ipXCHra+ZeZdhvlTW4xsYb7ZlH
xpqj1luffWkGlXWPi7kyrtawHxsncEt5ZP5m+Uxr/+usPbf2HGvG0qVsz/7h
yYnHzre0/Kt6InNGlrzOzFmv3+mNnbvV78LwPRS9McOFPJLk1p5KO0fyW9/6
1v087zXkd/K7e8yN7JG2evpHevMbs15dm/PluDlrfbqQdkT2Y2zP8ZnPfObu
/ij1Z/ow2r0tT80j055rn2Mt8kgA12Lv+u+Itnlk+ptaMy409Wr2M8xeLFNr
HtW8o7QRs17gnDVWKG2g9jxr2vCpU9sx0FkTLG3iuXZXjT2d2hNqaNrCRa8P
fk0mUmuX9fafG5r3kvFLyUjyt+iNCeqNPa15TEVyodwzXOp71Ov7W5LJ8Hje
6v6R5157Ne4+c65O/Wy2yiNrTlZvj90xazx673Nd2zda5Wr6s4aPKVt4KXt5
ZExZE5I11s9S79X3tF0/biqP3LLuT3lT9PYW63kLeWTWcarPYMm9WvrQx8rg
NWVv5t0U1de/5PdOVblxDC+dK2Stl/QHVhslpG3TW+dy7zyyyrneGgdLM6hY
zLWFap33sXVt9swjs25anj/9k3Vv1tKbQzpnuz/4sL2b95HPOGV0Ppcla5Iu
Kf+eeeaZ+9ecuelLX2t9rr1y/la/C0PrmuvdUxfySJJbeyq5L86+6W0muWae
ZI5ts8j039X8+D3JfguVs2W+ZJH1Z+rnP/7xj1eft80a4+9+97uH+im3yCPb
/Stj9eUsRR4J4FrsXf8d0TX7R47Z9tetZdgvt7YNn3GpNUeiSF2YPZozl6f3
O++8887dcclE17zPaltlLcXhY1vnkWnDpr9uuPd0XkPGG9XaOmFsLaGXXnrp
ofug9MNk/Ya5fbPWODYPYW5tLB7TRzGPbMuw3Buf+tlslUdWX1TaB0ufu11D
ZdjvtWUeGZUtvIRjeWTmH4Y2R6xcLddRe+xUHrll3V/5/5o9rG8hj6zP4BSG
51pT9sbMYx3e06RMPmcMSE/lxnG8Vq6Qef/tdz9rCA+P2TuPrNc3LNPiJTKo
6n+8lTwy2VT6CnMv0ZIyNnNH23V4z8kjT713Hbqk/Kt6Yul89LL6Zd99993D
fBfGvhu5Lxx7XfJIklt7DmkfZN5gu95qyrBaQ6lHHmv3i2xNRrc3qTN6651m
X+H6WTvvcSltlvj73/++e8wWeWRo14Nd+5nKIwFci73rvyO6RR7Z7nuSeT1Z
D2mpGYfUnuuUNnx87rnn7jK6dr5k/p325/DYGqef51/zHLVO0Ouvv/7QY1vm
kZl/1L6P7E2ddmfGNLXHFWN5ZJm+3L/+9a8PXCv5fFM/n/v9sU/T4+ejmEe2
638Mr7M1bpVH1lrUKQuWPvfUe9g6jyyVLdzSsTwya79VjlXjBapvYLhu31Qe
uWXdn3+vuabiLeSR9RnkPa25V+uVaWvzyJixHxmTnTWkWvI33yIvVG4cy2vn
ChmrWAy/t3vnkXVt9p7/VjOorfLI9AO2c1hTPr355psPjQ+rNW2Pkkd+//vf
vztmzbiVWHvu9nLzW/0uDK372F5dVcgjSW7tuSSTbOdJlql3kjtmzbKYf+dn
w+MyL/IamWTGu6TdNDcHM3Vp5WxZ96QY7su4Zi5o6rT2d4djDYt2DuY5eWS7
tmzGXw/3CJ9CHgngWuxd/x3RLfLIWPVCyvJzznNqHllmDHTqvnZ9n+H40uqv
TH/YmnMXzz///EOPbZVHZp2HIjnk1L4kxVweWaZ+zT1JW4ef04eg3+/x9FHM
I2NdF2v2oh26VR5Z++v2xlOMmdc99lldKo9s/07KFp7rWB4Za+5QsrwaA5Xv
2yc+8YkHjpvKI7es+9s9nJee5xbyyPoM1uxNO+YpeWTrF77whft+95DznTM/
XblxPK+dK6SNUPXUsI7aO4/MuUJvD+tbzaC2yCOfeuqp+7IkfZrpdxw79mh5
ZMZYFBlXs/Tc9T5/8YtfHOa7MLSus8y7GXtd8kiSW7sFyfja/SSXmt/J7yaD
vGQm2c47zJ6N2VurR+qLrBdXxyaba0m/Y5vzjc0Dzf1J3aMUGftcv1v1Ukuy
vzazPCePzGPtuV599dXuHlbJiKudU8gjAVyLveu/I7pVHpnsLGQNtXPOc24e
WaaPsvZgC+n3qsdq7bc16+dk36iitx7hVplItUFT52cewdR5iqV5ZJn7h1oP
ae0aQqV+v8fXc/t06hrPNTN37DXzyOpXW9LHM+ZWeWTWag5r1pVMPhF6Wc6l
88hS2cJznMojaxxDxhpV32nmEw2Pm8ojt6z7n3zyyfufj60NP/QW8shvfOMb
q8qCKc/NI8vsUVllTuZbn3IO5cYx3SNXqLp+mPvVddMrO4ZeIo+scZS99QVu
NYPaIo+se8p8VukPnTr2aHlk8u9ianzp0JorOlxD6Ja/C63JmIveXq2FPJLk
1m5J2uHJGIdruLbmsRyTY1sumUmm/G/zufj000/fzc1M5vbTn/707t/t48kt
h3MpU4e3uWL+nawza85lbZSs6fryyy/fPfblL3/5gd/NPs/1e6kH85wZY5hx
NG22t0UeGXKf0Z4va+OlbsprzXOnndjLR+WRAK7F3vXfEd0qj6wx7r19T9a4
VR4ZMxa12vdvvPHG/c/Td1h85StfWXSuX/7yl3fH53y9x7fIRNJeXDNHq1ib
R8bsT1msnY+g3+/x9tw+nfb6mzv2mnlk3k8Y649Z4lZ5ZNZpDXlvS/tr8rrD
X/7yl4ceu1YeGZUtPNWpPDJW1l3X/Fe/+tWHjpnKI7eu++s6yZoMS851C3lk
m6N+6UtfOuvvtVUeGWs/0FPGMSg3juseuUKVI7lO2p9Xvbtk/vTWeWTKoyJ9
bMPHbzWD2iKPrDkX6audO/ZoeWSs9b5//etfLzpv+kSLz372s4f5LrTmvYax
cYeFPJLk1l6ClGXJG7NWS+qSmH/nZ715esUlM8n0vab+GeZ+PdP+Sb7YI2M7
k2UuOU+t31S/N3f8iy++uFkemTXA8xnOPWcy1fTDFPJIANdi7/rviG6VR37n
O9+5/zt8/etfP/k8W+aRsfY2S07Q/rz6I9K2nTvHpz71qft+x9RPvWO2yETy
u0VvDmZr5n8Wp+SRsdZ6742/HbNde6hFv9/j4xZ9OsXc9VL7o18jj6y+yLA0
qxiacYQhezDMHTvVp5Q+qCpzlvTRtfvQ9+ZWXDOPjMoWnuJcHpkxt0X6eHvH
TOWRccu6v/ZAzDmXvL/aH27PPDLW+OixLGWpW+aR6ZMoMqdo6e8pN47tOblC
MpZcU2uysMzVKjIvt31saXso3892LZPeMWvr3FojLWVJb13PW82gqgxcOiaj
Z80FHO4FPPV8R8ojM3cjpC7pzRUcWvepY/XKrX4XyieeeOL+sxkbm1dkHuUp
n708kuSYt8YlM8m0hZLzZe7jWD6XfoG//e1vk+dJ1vftb3/7gbmSrVlbpbcm
a+rVdj3YMtle8sU871Qe2c5pbLPOKbI/zNj7zfqzH3744QPH/+AHP7h/vG1H
DpFHAjiXveu/I7pVHhlrfk76uk7tx17ahk9ekDEuU/txpP2V+jUM15Ft+++n
+q1y/pr7mbbk2Pvaan5kkTURxn7/i1/84gPrLQzzyOQqczlAxkEV+ffSv087
3mjJ58dHzy36dKr/aSpr+/nPf37/HbtGHhlrrH/+O9VvlHIh/WHDveuyXkhY
Mr9irk8p99v13nO/PnaelElVHuT99Y7ZKo9UtvCSzuWR7fzGsb1V5/LILev+
rNFUzPXHV7kZ9s4j27lYuaZP/XstLXt/+9vfPrBmfs8aDzK2BsWYyo1je06u
UHVkyNzjYX3cs9opvb1n2zGBY2uUJIts++Tm8sg8T+YHTL2mdj+nsWNvNYOq
MZ9r9roeWhlj5qKPHZP7sXbuxJHyyLz2OjbzU6bare24uNSHt/ZdSJt6bt3Z
KpPz3c9ez71jasza2HucUx5Jcsxb5NL7SYa0e9599927e+7M3cw4p2rPr+H9
99+/Gw+evWOSEU7N/wzJRFO35Z4sY8Sqj+fSJHfMvV8+y7l5qgBwDfau/47o
lnlk2ihFzpdxJr3jXnnllbv+89dff/2hx5b0x2XuYLVl0m/57LPPPnRM2l6p
k0Pq4l57sd1fMvOaho+nDdnu6zzV/7dVJlK5QvbjHO4fmTZsMtjhvUWbR7Zr
u+f99fpQ87Nq/6dtueZvPES/3+PnFn06tT9ivsvDNRezflPNI6r1lq+VR7br
ZOW5Ux4Nj0k5V9fPMFeo8jRkX4Wp1zLXp5R+z/b9v/baaw8dk9dXx4ReWVjH
rSnne3mksoWXdi6PjOmvzViF3jp2cS6PjFvW/VWmhLyu4eNZH7U9V6/cKK+V
R8bKWsNYlvPpT3/6bm5P/h69PvQlZW+9lvCrX/2qe56Msapz/fGPf1z1nVFu
HNtzcoXUN+14+nxPx9ZnybVVWWR49dVXu8fVuPrciw/3hc33PPfmdY2GuTyy
SJmT62l4XK0HHfJext7rreaR7d6Pp45DrXWsc9+R/XqHj2cPrGH/5pHyyJj9
uIrUB8NxpCkX67547jXu+V0osvfqcB572qypd4vhesitdZ+Y9zKVz44pjyQ5
5q1yjUwSALAfe9d/R3TLPDJmbG/bbkybPtlC2i5pj9daaaHX7lnSH5e2y89+
9rMHcrmMzcnY2YzNSQ5Z8yLDj370o+550h6sPePqOTPWN2OK0sfYnj/9aFPv
e6tMJO3uIplrXkvWmv3ggw/uX0/+m/dUn3Pbrs36csM1BvI3+NOf/vTxb37z
m7u+vnb80Nr9o7I2Wo191e/3eLpFn076+drrK/1wKR9i/Tzf26wbkv+/Vh4Z
M1ehfW1VhuXaaecl53mzTvXw96vsyTnS55/sIdfvcH3IJX1KWcOwfc6cO2MQ
cw3WXM56LVPzFrfII5UtvLRL8sg5l+SRW9b96T9vr9GcK/ciuU7b+50cU2Ok
biGP/OQnP3l37Ra538g9We2JMxxXPVzbMi4pe1OG1f5wVS6mLzqfRe4L279D
7uPW7iem3Di2W+QKw/W3cv3kniLf75QD7fUZ0k4YO1dyyiLf71zLuS9pc89c
2xlvFJbMj6x79fw75UvuJ3Letq2U8mdq74VbzSMzLqT93JMtps2Sz3ysnBua
+8EqS+q+KdlcPpMaexpy7pqPebQ8MrbZc95n7gvzWeVv277PvL7cb93id6Gt
E/L+c13k3m9YX2R+ztTztev2JePP3zv3l/kOZb29ufcljyQ55i0jkwSAR5e9
678jWvOBtsojY+YWpD01tkZAnuuNN97ojsdf02+eeQfZp21sfn7mDY2NgW7N
PM22LdiSNvXzzz8/e47qV1jSLq1+jbFMJPM/xl5P1iOoeSHV19nrw8hrTj/J
2N8gfSJTa0CSY1afyrl9OulHTv9zj/T/Vb90rq1c42Pn2fLaK7POaPqKeuSa
Sn/k2FyAzFHsva/8XrsvbPXDz/UppZx8++23R6/l9E0lt506x5b7RypbeCnr
fuScPDI5XZjKI8st6v6Y67rmdPeu+2RvmUuSdePDpfPIlClhSRmde6R2jvWQ
9P+PzbteU/ZmnMcwF2pJdtSbP8ZH261yhRdeeGF276FkJr01D4YOxyS113LG
3uSYWpc812PvHHUt5zUl+0+W1jtn7m2yzvvca1p6vxDreebmnVUGlWu89/jS
ciRrN/Te29j68T0z3mGsfEhelb9vjqu9GE/JI7e6dy3XlH9l6rh2nEpLzpec
7ha/C202nTVC2rnGLbn3XboGa+23PiTjVOZ+Vx5Jcsxbp80k5ZEA8Oiwd/3H
B814zGQOP/zhD+/aTZn7lz2CL/FcTz311F2bODlnsob0BcyNBx2a/oX0Q2Ss
9Te/+c3J8amX9oknnvj4pZdeupsHGb/3ve+d3FeXfZuSceY82at6TduZvKTJ
2jKPLnuvpT8k19/YOox7mAwhe62lDEuWkJxtydpSySfSf5ZyL9dd9oEfrm11
is8999zda0n/Zda53eKc56hs4aPgVnV/yrOsa5y1+VKeffe73931PmKNuTfL
HOu87uS0p9xDLTFlVrKHfEbJVLOmhhzy8XXrXCHXW9oauaf4yU9+cldv5/u2
dt5tjs9es/mOVv229hxDcz0lj0odnrm8c/vwHcmMXUrZmc8rju3XMWf+Vvmb
5W+Xcijzq/d+b5cw43YzDzB1TrLVtGH3fk1T9ubK5nrI3zzvIe3vU8rx3DPm
75x72txLfv7zn1/0e/JIkmMegeSQskgAeLTYu/4jSZIkSU4rVyBv3yVr915T
5QbJMQEA2IO96z+SJEmS5LRyBfL2lUeSPIoAAOzB3vUfSZIkSXJauQJ5+8oj
SR5FAAD2YO/6jyRJkiQ5rVyBvH3lkSSPIgAAe7B3/UeSJEmSnFauQN6+8kiS
R/Gjjz7auUcaAPC4kbpn7/qPJEmSJDmtXIG8feWRJI/ie++9t3OvNADgcSN1
z971H0mSJElyWrkCefu+9tprH//973//+K233tr9tUTlBskxa/wEAADXInXP
3vUfSZIkSXJauQLJtSo3SI757LPP7t0tDQB4zEjds3f9R5IkSZKcVq5Acq3K
DZJTmiMJALgW5kaSJEmS5DGUK5Bcq3KD5Jx/+MMf9u6iBgA84qSu2bu+I0mS
JEkuU65Acq3KDZJLNE8SAHApzIskSZIkyWMpVyC5VuUGyaVmT6/0Gb/33nsf
f/TRR3t3XwMADkrqkNQlqVPsF0mSJEmSx1OuQHKtyg2SJEmSJEmSJLlUuQLJ
tSo3SJIkSZIkSZLkUv/nX/7hgVzhv/7jn3d/TSRv15QRbZmRMmTv10SSJEmS
JEmSJG/X//7Xf3xorhNJLjVlyN7lGEmSJEmSJEmSvF2f+c9/+/h/byDTIHk8
U3akDNm7HCNJkiRJkiRJkrft1/79n2SSJFeZMuOF/y879i6/SJIkSZIkSZLk
Mcwcp6y7ONxPkiRbU0akrDAvkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiTJywgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAADgdvk/ES6H1g==
    "], {{0, 462.}, {1828., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVVwdYVEe7nlO2wrLAAgJSlt4EkbqAlGVpC0hZmmBjG8tSlnWXRcVeQhSM
XSxgQ6MiBo1GQGJFjBoJit1YghpUIjGowa78swU05r/3PneeZ+a8551v3u+b
78ycc8ZOUMLLQwEASjJsePxpbIWCPyPNEN5kyJRSiUws4spKxRKxgiVAIHmC
DhtAP8GXy4tQaFUsK1XwYiOZ47NzmKRHAAEYoAAGoPOFSjk7JSVRbT10/Wd5
eQ2oBcFlT7XWv/v/12IkEiuFACApEAtESmExxD8AgNcK5YpSAIhq3mFaqVyN
YQUmChggxIvVWKLFtWos0OL9Gpt0HgfidgDI+ny+QgKAwUXIM8uEEqhh0A+x
t0wklcH5MyEOKy4uEUGcC7ErtJFDrNZnCT7TkfxDUzCsyedLhrF2LppCjpIq
5UX8Gf/PdPzfpbhINeTDGVb9fEUcTz1nmLcbhSUJaqwPcZ9MkJQMsTHEr6Ui
jT3EKDVfFZehtUethEoOzBkwg9hbxI9KgNgK4hhZUVKijhfkSWO4EMMVgk6X
lnLTITaHeLFYGZ2ms9mqKOHpfKFNeQoOW8ef5Ss0ftW+7qoKM9g6/ef5Yq5O
HzMoz0/PgpgKsWOZNDMJYgOIvZSFaQk6m7Hl+ZykIRuFiqeO3xFinlgWG6nV
x8ryFDE8nX1lsXJovtjWfCk3SYcPlOanx2nzg7UL+Zr44Vywi2IZO2NIR6wc
nzg0F5E4Klo7d+yxWJaRptN5LS+N5GnH4lR5UYrOHrcXF8WqeXuI/ZRlabqx
eGYpXJBafTxPXpqSro0TLy/gx6do48FXgETAAVGACVSwCkAJKADSzr7mPnin
7YkBfKAAEiAGnjpmaESWpkcG2zRQDv6ESAyUw+MiNb1iUAb5D8OstvUEeZre
Ms2IQvAQ4mKQAIrgvUozSjbsLRP8Dhnpv7zzYRXCeItgVff/d36I/cSwIZOo
Y1RDHpn0IUtiNDGKGEeMIbrhlngYHoInwjYCVh+chQcNzeOTPeEhoYtwn3CV
0E24OUW6QPFFlONAN9SP0eVC8HkucGeo6Y9H4qFQHSrjZrgl8MT9oB82Hg49
+0OWo4tbnRXmF9r/mMFnT0NnR/GmoJQRlAiK65cjDdwN/IdV1Ln+PD/aWAXD
+eYM93zpn/NZ9kXwmvClJbYYO4idwU5i57AjWDNgYsexFqwDO6rGw6vrd83q
GvLG08RTCHWk//I39GTVmVR6N3j3er/X9pWKp6vf0YBTIp+hkEryS5ls+EUQ
M7kyodcopo+3jy8A6u+L9vX1IlXz3UDMOj5xC38DIPT44ODgj5+4+OMAfB8I
t//hT5wrC3469AA4e1ioUpRpOVzdEOBbgg53mgWwAQ7AFc7HBwSAEBABokE8
SAbpIBtMhtHnw3WuANPALDAfVIAqsAKsBRvBFrAd7AbfgQOgGRwBJ8FP4Dy4
CK6CW3D19IAnoB+8BO8QBCEhNISBWCC2iBPigfggLCQMiUYSER6SjeQiEkSG
qJBZyEKkClmFbES2IfXI98hh5CRyDulCbiL3kF7kOfIWxVB91AS1Rp3R0SgL
ZaMJaDo6CZWgU9FydBG6DF2P1qF70Sb0JHoevYp2o0/QAQxgepgZZod5YiyM
gyVjOVgepsDmYJVYNVaHNWKt8DlfxrqxPuwNTsQZOBP3hCs4Ds/AhfhUfA6+
FN+I78ab8Hb8Mn4P78c/EmgEK4IHIZjAJYwnSAjTCBWEasJOwiHCabiXeggv
iUSiGdGFGAj3YjaxgDiTuJS4ibiPeILYRXxAHCCRSBYkD1IoKZnEJ5WSKkgb
SHtJx0mXSD2k12Q9si3ZhxxDziHLyAvI1eQ95GPkS+RH5HcUQ4oTJZiSTBFR
ZlCWU3ZQWikXKD2Ud1Qjqgs1lJpOLaDOp66nNlJPU29TX+jp6dnrBeml6kn1
5umt19uvd1bvnt4bfWN9d32O/kR9lf4y/V36J/Rv6r+g0WjOtAhaDq2UtoxW
TztFu0t7bcAw8DLgGogM5hrUGDQZXDJ4SqfQnehs+mR6Ob2afpB+gd5nSDF0
NuQY8g3nGNYYHja8bjhgxDAaY5RsVGy01GiP0Tmjx8YkY2fjaGOR8SLj7can
jB8wMIYDg8MQMhYydjBOM3pMiCYuJlyTApMqk+9MOk36TY1N/UwzTaeb1pge
Ne02w8yczbhmRWbLzQ6YXTN7O8J6BHuEeMSSEY0jLo14ZT7SPMJcbF5pvs/8
qvlbC6ZFtEWhxUqLZos7lrilu2Wq5TTLzZanLftGmowMGSkcWTnywMhfrVAr
dyue1Uyr7VYdVgPWNtax1nLrDdanrPtszGwibAps1tgcs+m1ZdiG2Upt19ge
t/2DacpkM4uY65ntzH47K7s4O5XdNrtOu3f2LvYZ9gvs99nfcaA6sBzyHNY4
tDn0O9o6jnOc5djg+KsTxYnllO+0zumM0ytnF+cs56+dm50fu5i7cF3KXRpc
brvSXMNdp7rWuV5xI7qx3ArdNrlddEfd/d3z3WvcL3igHgEeUo9NHl2jCKOC
RslG1Y267qnvyfYs82zwvOdl5pXotcCr2evpaMfROaNXjj4z+qO3v3eR9w7v
W2OMx8SPWTCmdcxzH3cfoU+NzxVfmm+M71zfFt9nfh5+Yr/Nfjf8Gf7j/L/2
b/P/EBAYoAhoDOgNdAzMDawNvM4yYaWwlrLOBhGCIoPmBh0JehMcEFwafCD4
rxDPkMKQPSGPx7qMFY/dMfZBqH0oP3RbaHcYMyw3bGtYd7hdOD+8Lvx+hEOE
KGJnxCO2G7uAvZf9NNI7UhF5KPIVJ5gzm3MiCouKjaqM6ow2js6I3hh9N8Y+
RhLTENMf6x87M/ZEHCEuIW5l3HWuNVfIref2xwfGz45vT9BPSEvYmHA/0T1R
kdg6Dh0XP271uNtJTkmypOZkkMxNXp18J8UlZWrKj6nE1JTUmtSHvDG8Wbwz
aYy0KWl70l6mR6YvT7+V4ZqhymjLpGdOzKzPfJUVlbUqq3v86PGzx5/PtsyW
ZrfkkHIyc3bmDEyInrB2Qs9E/4kVE69Ncpk0fdK5yZaTiyYfnUKfwp9yMJeQ
m5W7J/c9P5lfxx8QcAW1gn4hR7hO+EQUIVoj6hWHileJH+WF5q3KeywJlayW
9OaH51fn90k50o3SZwVxBVsKXhUmF+4qHCzKKtpXTC7OLT4sM5YVytpLbEqm
l3TJPeQV8u6pwVPXTu1XJCh2KhHlJGVLqQn8ke9Quaq+Ut0rCyurKXs9LXPa
welG02XTO2a4z1gy41F5TPm3M/GZwplts+xmzZ91bzZ79rY5yBzBnLa5DnMX
ze2ZFztv93zq/ML5vyzwXrBqwd8Lsxa2LrJeNG/Rg69iv2qoMKhQVFz/OuTr
LYvxxdLFnUt8l2xY8rFSVPlzlXdVddX7pcKlP38z5pv13wwuy1vWuTxg+eYV
xBWyFddWhq/cvcpoVfmqB6vHrW5aw1xTuebvtVPWnqv2q96yjrpOta57feL6
lg2OG1ZseL8xf+PVmsiafbVWtUtqX20Sbbq0OWJz4xbrLVVb3m6Vbr2xLXZb
U51zXfV24vay7Q93ZO448y3r2/qdljurdn7YJdvVvZu3u70+sL5+j9We5Q1o
g6qhd+/EvRe/i/qupdGzcds+s31V+8F+1f4/vs/9/tqBhANtB1kHG39w+qH2
EONQZRPSNKOpvzm/ubslu6XrcPzhttaQ1kM/ev2464jdkZqjpkeXH6MeW3Rs
8Hj58YET8hN9JyUnH7RNabt1avypK+2p7Z2nE06f/Snmp1Nn2GeOnw09e+Rc
8LnDP7N+bj4fcL6pw7/j0C/+vxzqDOhsuhB4oeVi0MXWrrFdxy6FXzp5Oery
T1e4V85fTbradS3j2o3rE6933xDdeHyz6OazX8t+fXdr3m3C7co7hneq71rd
rfvN7bd93QHdR+9F3eu4n3b/1gPhgye/K39/37PoIe1h9SPbR/WPfR4f6Y3p
vfjHhD96nsifvOur+NPoz9qnrk9/+Cvir47+8f09zxTPBp8vfWHxYtfffn+3
DaQM3H1Z/PLdq8rXFq93v2G9OfM26+2jd9Pek96v/+D2ofVjwsfbg8WDg3K+
gq/5FcBgRfPyAHi+CwBaNgAMeD6jTtCe/zQF0Z5ZNQj8T1h7RtSUAAAa4f97
ah/8u7kOwP4d8PgF9ekTAUihAZAeBFBf3+E6dFbTnCvVhQjPAVu5HwTFAvBf
ivbM+VncX16BWtUPfHn9D+c4iVo=
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{845.59765625, Automatic},
  ImageSizeRaw->{1828., 462.},
  PlotRange->{{0, 1828.}, {0, 462.}}]], "Input",ExpressionUUID->"ccd1099e-\
b1e4-42f8-938d-46abef43f8df"],

Cell[TextData[{
 "Alternatively, open a new definition notebook directly with ",
 ButtonBox["CreateNotebook",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/CreateNotebook.html"], 
    None},
  ButtonNote->"http://reference.wolfram.com/language/ref/CreateNotebook.html"],
 ":"
}], "Text",ExpressionUUID->"c3d4c755-7c5d-476a-bda1-d4b7f093d99a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateNotebook", "[", "\"\<PromptResource\>\"", "]"}], 
  ";"}]], "Input",ExpressionUUID->"d5dd52e1-3859-45cb-af37-46c11713b16f"],

Cell["", "EndOfSlide",ExpressionUUID->"25fef284-3d2f-491d-91e8-a627ea65f0ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"cad70cea-6a7c-47d6-a5bc-975f51ab8620"],

Cell[CellGroupData[{

Cell["Chat Objects", "Section",
 CellTags->
  "ChatObjects",ExpressionUUID->"92d06fd9-8822-4d54-b743-b9a2aed971f7"],

Cell[CellGroupData[{

Cell["Programmatic Chats", "Subsection",ExpressionUUID->"32331a10-96db-4aa0-9f1c-d36a697f0274"],

Cell[TextData[{
 "Apart from using chatbooks (next section), programmatic chats are probably \
the closest you can get to using a tool like ",
 ButtonBox["ChatGPT",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://chat.openai.com/auth/login"], None},
  ButtonNote->"https://chat.openai.com/auth/login"],
 "."
}], "Text",ExpressionUUID->"695ca9ba-2b77-4e0f-885d-7db1a6e8b518"],

Cell[TextData[{
 "Set up an initial prompt with ",
 ButtonBox["ChatObject",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/ChatObject.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/ChatObject.html"],
 ":"
}], "Text",ExpressionUUID->"d1517a67-c785-4545-9a63-2616362873e9"],

Cell[BoxData[
 RowBox[{"chat", " ", "=", " ", 
  RowBox[{
  "ChatObject", "[", 
   "\"\<Respond like a scientist. Keep your answers brief.\>\"", 
   "]"}]}]], "Input",ExpressionUUID->"033446ff-5ec5-44d3-a5f8-dc76fd72c8a5"],

Cell["Continue the conversation with ChatEvaluate:", "Text",ExpressionUUID->"de7f3514-314f-4132-bfbc-f45222c1226b"],

Cell[BoxData[
 RowBox[{"chat", " ", "=", " ", 
  RowBox[{"ChatEvaluate", "[", 
   RowBox[{
   "chat", ",", " ", "\"\<What is the oldest planet in the Solar System?\>\"",
     ",", " ", 
    RowBox[{"LLMEvaluator", "->", 
     RowBox[{"<|", 
      RowBox[{"\"\<Temperature\>\"", "->", "0"}], "|>"}]}]}], 
   "]"}]}]], "Input",ExpressionUUID->"91178611-1c4b-4548-9f56-f081fd15d1cf"],

Cell[BoxData[
 RowBox[{"chat", " ", "=", " ", 
  RowBox[{"ChatEvaluate", "[", 
   RowBox[{
   "chat", ",", " ", "\"\<What evidence is there of that?\>\"", ",", " ", 
    RowBox[{"LLMEvaluator", "->", 
     RowBox[{"<|", 
      RowBox[{"\"\<Temperature\>\"", "->", "0"}], "|>"}]}]}], 
   "]"}]}]], "Input",ExpressionUUID->"d041c7bd-b363-4914-989f-4b5977d958f7"],

Cell[BoxData[
 RowBox[{"chat", " ", "=", " ", 
  RowBox[{"ChatEvaluate", "[", 
   RowBox[{
   "chat", ",", " ", 
    "\"\<How do you know what elements are present in its atmosphere?\>\"", 
    ",", " ", 
    RowBox[{"LLMEvaluator", "->", 
     RowBox[{"<|", 
      RowBox[{"\"\<Temperature\>\"", "->", "0"}], "|>"}]}]}], 
   "]"}]}]], "Input",ExpressionUUID->"564c75cb-b05a-4279-a4db-0281aa573fad"],

Cell["Extract properties from a chat:", "Text",ExpressionUUID->"640e4054-1421-4841-bb23-148e65a663e9"],

Cell[BoxData[
 RowBox[{"chat", "[", "\"\<Properties\>\"", "]"}]], "Input",ExpressionUUID->"7dc35792-5227-4d4f-a726-a2869d691598"],

Cell[BoxData[
 RowBox[{"chat", "[", "\"\<Messages\>\"", "]"}]], "Input",ExpressionUUID->"750a065f-09fd-4f6b-8285-d94701857c78"],

Cell[BoxData[
 RowBox[{"chat", "[", "\"\<Usage\>\"", "]"}]], "Input",ExpressionUUID->"2b11f8ee-cc67-44f1-a295-e3f01993d5a7"],

Cell[BoxData[
 RowBox[{"chat", "[", "\"\<ChatID\>\"", "]"}]], "Input",ExpressionUUID->"aef98459-746d-4ba3-8b67-18020f270e2e"],

Cell[CellGroupData[{

Cell["Building from other chats", "Subsubsection",ExpressionUUID->"35871187-9fb9-4fcc-951c-df9a621ef1c5"],

Cell["\<\
Create a new chat object with the messages from another chat:\
\>", "Text",ExpressionUUID->"b424ec42-6811-4e5a-8bee-56708d765f19"],

Cell[BoxData[
 RowBox[{"ChatObject", "[", 
  RowBox[{"chat", "[", "\"\<Messages\>\"", "]"}], "]"}]], "Input",ExpressionUU\
ID->"005abcc8-1c2a-40af-9eff-4454bf1a2388"],

Cell["Mimic LLMSynthesize with ChatEvaluate and ChatObject:", "Text",ExpressionUUID->"49f2cf6b-bb39-40f0-883a-882a8c792598"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"chat", " ", "=", " ", 
    RowBox[{"ChatEvaluate", "[", 
     RowBox[{
      RowBox[{"ChatObject", "[", "\"\<Continue this sentence:\>\"", "]"}], 
      ",", " ", "\"\<The women stepped out of the\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"chat", "[", "\"\<Messages\>\"", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", "\"\<Content\>\""}], "]"}], "]"}]}], "Input",\
ExpressionUUID->"0958856e-8942-45fb-a9d2-410f2f258cda"],

Cell["", "EndOfSlide",ExpressionUUID->"bd68d815-d0ce-4ab6-8d36-5c4d5db1f8f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b2a072c5-ce5d-49cb-813d-586beb282f16"],

Cell[CellGroupData[{

Cell["Chatbooks", "Section",
 CellTags->"Chatbooks",ExpressionUUID->"5dc27fe4-a6c8-40b5-916b-37d63c81ae97"],

Cell["\<\
Chatbooks combine notebooks with LLMs. In a chatbook, you can:\
\>", "Text",ExpressionUUID->"4d03b8e9-f6e7-4889-a26f-575d9d3ceb9e"],

Cell["Modify the cells in a chat to \[OpenCurlyDoubleQuote]change history\
\[CloseCurlyDoubleQuote]", "Item",ExpressionUUID->"e9ef5677-7750-43b7-90b0-\
ed2ae79517a9"],

Cell["Choose from a list of AI personas (or import new ones)", "Item",ExpressionUUID->"f543c014-fae5-4a09-ac47-3015cb3bf45a"],

Cell["Adjust the settings of the LLM (temperature, model)", "Item",ExpressionUUID->"01c2f56b-4a5c-4ced-a754-12ccefda19ab"],

Cell["Send non-chat cell data (typically output cells) to the LLM", "Item",ExpressionUUID->"700ee815-7b5d-43f9-8db2-4df5c026ae76"],

Cell[CellGroupData[{

Cell["Getting Started", "Subsection",ExpressionUUID->"9e9bbf3c-ea58-4a24-8191-7fbe5209f880"],

Cell["\<\
Create a new chatbook with File \[FilledRightTriangle] New \
\[FilledRightTriangle] Chat-Enabled Notebook, or use CreateNotebook:\
\>", "Text",ExpressionUUID->"15bff773-0973-4881-80a6-7e245e6c415e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateNotebook", "[", "\"\<ChatEnabled\>\"", "]"}], ";"}]], "Input",\
ExpressionUUID->"9f6c8428-28c0-4b28-a17c-9b1416f09621"],

Cell["\<\
For a more immersive chat-only experience (no other cell types at all), you \
can choose a chat-driven notebook instead:\
\>", "Text",ExpressionUUID->"9b9049a3-c543-4f75-a563-9649c27f6763"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateNotebook", "[", "\"\<ChatDriven\>\"", "]"}], ";"}]], "Input",\
ExpressionUUID->"844ae9bf-4d33-485b-aaab-166351692aa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cell Types", "Subsection",ExpressionUUID->"64240400-3510-47f2-9121-23e09e591f97"],

Cell["\<\
There are four chat-related cell types: ChatInput, ChatDelimiter, SideChat \
and ChatSystemInput.\
\>", "Text",ExpressionUUID->"1d5dc2af-ffb0-431d-be7b-02928620349a"],

Cell[CellGroupData[{

Cell["ChatInput", "Subsubsubsection",ExpressionUUID->"2c031b4f-3818-4d2e-a225-97de3ff0da3d"],

Cell[TextData[{
 "This is the default cell type in a chatbook. It is used to give \
instructions to the LLM, taking into account the content of cells above it. \
To create a new ChatInput cell, type a single apostrophe (",
 Cell[BoxData[
 "'"], "Input",ExpressionUUID->"49a17ad7-2019-43e6-be7f-91cc43369f61"],
 ")."
}], "Text",ExpressionUUID->"13a0b900-4d2d-493b-a06f-1677b2085a6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ChatDelimiter", "Subsubsubsection",ExpressionUUID->"b0c50464-a949-41bc-8495-daf7e364b858"],

Cell[TextData[{
 "If you want to include/exclude a cell from being used in a chat, you can \
right-click the cell bracket and select ",
 StyleBox["Include/Exclude from AI Chat",
  FontSlant->"Italic"],
 ". If you want to exclude ",
 StyleBox["all",
  FontSlant->"Italic"],
 " cells above a certain point (to start a new conversation, for example), \
insert a ChatDelimiter with a tilde (",
 Cell[BoxData[
 "~"], "Input",ExpressionUUID->"16bf34d1-68b0-4b77-8559-056ba135d037"],
 ")."
}], "Text",ExpressionUUID->"9d70055d-5b27-4c21-9247-514c186f986b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SideChat", "Subsubsubsection",ExpressionUUID->"f7a7e1e9-796c-4c39-b4b5-791fad1e8a24"],

Cell[TextData[{
 "SideChat cells are used to give instructions to the LLM, but starting from \
a blank slate\[LongDash]no other cell content taken into account. (The \
behaviour of a side chat is effectively equivalent to having a ChatInput cell \
with a ChatDelimiter cell directly above it.) To create a new SideChat cell, \
type two apostrophes (",
 Cell[BoxData["''"], "Input",ExpressionUUID->
  "89b7328f-420c-407a-88e6-d04340757f26"],
 ")."
}], "Text",ExpressionUUID->"b774f166-1e80-45dc-a026-583a5da0c366"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ChatSystemInput", "Subsubsubsection",ExpressionUUID->"5b1f597c-b6de-44b3-86f9-a10cd09366b0"],

Cell[TextData[{
 "System prompts are used to set up the context and behaviour of an LLM \
assistant before you begin a conversation. To create a new ChatSystemInput \
cell, type three apostrophes (",
 Cell[BoxData["'''"], "Input",ExpressionUUID->
  "1e5734af-1064-4ffa-a26c-25a6b389c0ec"],
 "). Typing a fourth apostrophe will cycle back to a ChatInput cell."
}], "Text",ExpressionUUID->"864f73a8-edbc-4df0-ae8b-1e62d160a0fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using Prompts in Chats", "Subsection",ExpressionUUID->"066989c4-6555-4530-9ab5-6dbf602ae430"],

Cell["\<\
There are a few special hotkeys for accessing the Prompt Repository in chat \
notebooks:\
\>", "Text",ExpressionUUID->"d2fed8b1-e02c-4c55-8002-f0a156fd62e9"],

Cell["@ for a Persona", "Item",ExpressionUUID->"8c434929-4af4-4ac5-b02f-499a6c559bd1"],

Cell["# for a Modifier", "Item",ExpressionUUID->"c39dde1c-31aa-4338-897f-2067f4cfdd95"],

Cell["! for a Function", "Item",ExpressionUUID->"aecff30e-fe91-498a-bc47-90bbb6b22e79"],

Cell["", "EndOfSlide",ExpressionUUID->"732f6ff0-e029-4345-bbfc-d4b0962a0dba"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"099d7181-6e31-46ae-b55a-d0aa06ba19db"],

Cell[CellGroupData[{

Cell["Fun Examples", "Subsection",ExpressionUUID->"d57a3109-3852-4855-87d8-16ce1881c6c6"],

Cell[CellGroupData[{

Cell["Modifying existing code", "Subsubsection",
 WholeCellGroupOpener->
  True,ExpressionUUID->"7379b20a-edd7-4df4-a569-6710b466dc09"],

Cell[CellGroupData[{

Cell["", "ChatDelimiter",ExpressionUUID->"fdc42e25-25b0-48bd-9ae3-650ea27d3d81"],

Cell["\<\
The following code isn't working properly:

x = \"1\"; Which[x > 0, a, x < 0, b, _, c]

It should return 'a' if x > 0, 'b' if x < 0, 'c' if x == 0 and 'd' if x is \
anything else (e.g. not a number). Can you help?\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules-><|
  "ChatNotebookSettings" -> <|
    "TemperatureSetting" -> 0., "Temperature" -> 
     0.|>|>,ExpressionUUID->"00bd6257-4dfe-4be1-9421-8f9292b98ab1"],

Cell["\<\
I see. Can you set x to 1 (a number, not a string) so that the ToExpression \
bits can be removed?\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules-><|
  "ChatNotebookSettings" -> <|
    "TemperatureSetting" -> 0., "Temperature" -> 
     0.|>|>,ExpressionUUID->"f41a86d2-feac-4192-8628-24dfc225a7dc"],

Cell["\<\
Wonderful! However, if x is _not_ a number, this code will not evaluate, \
because the comparisons will not always return True or False. Can you use \
TrueQ to fix it?\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules-><|
  "ChatNotebookSettings" -> <|
    "TemperatureSetting" -> 0., "Temperature" -> 
     0.|>|>,ExpressionUUID->"f0672709-c5cb-46c1-baeb-a26bb13ad7a0"],

Cell["\<\
Excellent! Can you convert the Which code to a function so that I can test it \
on various inputs?\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules-><|
  "ChatNotebookSettings" -> <|
    "TemperatureSetting" -> 0., "Temperature" -> 
     0.|>|>,ExpressionUUID->"7603520b-08ce-4619-be5a-b6f72b082362"],

Cell["\<\
One more thing: can you comment the code so that I remember how to do it \
correctly next time?\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules-><|
  "ChatNotebookSettings" -> <|
    "TemperatureSetting" -> 0., "Temperature" -> 
     0.|>|>,ExpressionUUID->"9fed226e-924f-451a-9a2f-57b0b2ad5561"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Writing new code", "Subsubsection",
 WholeCellGroupOpener->
  True,ExpressionUUID->"1d6b63a4-c38d-4854-824d-85fb500cfba0"],

Cell[CellGroupData[{

Cell["", "ChatDelimiter",ExpressionUUID->"884c2fa8-4b84-4564-ba1e-0892214afc2e"],

Cell["\<\
Create an interactive plot of a sine wave with a parameter to adjust the \
frequency. Keep the code short and sweet.\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules-><|
  "ChatNotebookSettings" -> <|
    "TemperatureSetting" -> 0., "Temperature" -> 
     0.|>|>,ExpressionUUID->"7b89169c-ec5c-4625-a501-8f3149d94305"],

Cell["\<\
Superimpose another sine wave and show the sum of the two (i.e. three waves \
altogether).\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules-><|
  "ChatNotebookSettings" -> <|
    "TemperatureSetting" -> 0., "Temperature" -> 
     0.|>|>,ExpressionUUID->"ca93519b-f660-495f-898e-f426bf245160"],

Cell["\<\
Nice! Please fix the vertical plot range to {-2, 2} and jazz it up with a \
different colour scheme.\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules-><|
  "ChatNotebookSettings" -> <|
    "TemperatureSetting" -> 0., "Temperature" -> 
     0.|>|>,ExpressionUUID->"412f59e4-cffb-421c-a26a-721925d93c3f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Using personas, modifiers and functions", "Subsubsection",
 WholeCellGroupOpener->
  True,ExpressionUUID->"e759a0df-6888-48f2-8cfb-b9b9b9fc6aab"],

Cell[CellGroupData[{

Cell["", "ChatDelimiter",ExpressionUUID->"331086f6-02c5-4287-a697-b2d80653e941"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "input" -> "MadHatter", "state" -> "Chosen", "uuid" -> 
     "43884831-61ff-45a6-b841-6047d68cde16"|>,
    "ChatbookPersona"], TextForm]], "InlinePersonaReference",
  Deployed->True,
  TaggingRules-><|"PersonaName" -> "MadHatter"|>,
  Background->None,ExpressionUUID->"0bee3e1d-1a15-45ae-85b7-70a57cd8d9d5"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "input" -> "PoemStyled", "params" -> {}, "state" -> "Chosen", "uuid" -> 
     "866709b4-526f-4f1c-aa1d-cb29de8d3c52"|>,
    "ChatbookModifier"], TextForm]], "InlineModifierReference",
  Deployed->True,
  TaggingRules-><|
   "PromptModifierName" -> "PoemStyled", "PromptArguments" -> {}|>,
  Background->None,ExpressionUUID->"732faa38-9ce3-43b2-8afc-c94ceb556619"],
 " Why is the sky blue?"
}], "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules->{
  "WolframUNotebook" -> True, "SlideshowSettings" -> {"Toolbar" -> True}, 
   "ChatNotebookSettings" -> {
    "Assistance" -> False, "LLMEvaluator" -> "MadHatter", 
     "TemperatureSetting" -> 0., "Temperature" -> 0.}, "TryRealOnly" -> 
   False},ExpressionUUID->"e721c83c-a042-46c9-8c22-7582c2243635"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TemplateBox[<|
   "input" -> "ShorterRephrase", "params" -> {"^"}, "state" -> "Chosen", 
    "uuid" -> "cb809ad2-4340-45ca-b47c-8fac5ec2f385"|>,
   "ChatbookFunction"], TextForm]], "InlineFunctionReference",
 Deployed->True,
 TaggingRules-><|
  "PromptFunctionName" -> "ShorterRephrase", "PromptArguments" -> {"^"}|>,
 Background->
  None,ExpressionUUID->"5ba82b0c-4b54-4852-bda0-042770cc5cce"]], "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules->{
  "WolframUNotebook" -> True, "SlideshowSettings" -> {"Toolbar" -> True}, 
   "ChatNotebookSettings" -> {
    "Assistance" -> False, "TemperatureSetting" -> 0., "Temperature" -> 0.}, 
   "TryRealOnly" -> 
   False},ExpressionUUID->"a63bedd3-35c8-47f3-b0fc-47e276ed966f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "input" -> "Translate", "params" -> {"Spanish", ">"}, "state" -> "Chosen",
      "uuid" -> "60a5046f-1716-441c-90ff-c14b319c3880"|>,
    "ChatbookFunction"], TextForm]], "InlineFunctionReference",
  Deployed->True,
  TaggingRules-><|
   "PromptFunctionName" -> "Translate", "PromptArguments" -> {"Spanish", ">"}|>,
  Background->None,ExpressionUUID->"3a71b7a9-02b5-4f97-8033-8be012468a21"],
 " What's up, dude?"
}], "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules->{
  "WolframUNotebook" -> True, "SlideshowSettings" -> {"Toolbar" -> True}, 
   "ChatNotebookSettings" -> {
    "Assistance" -> False, "TemperatureSetting" -> 0., "Temperature" -> 0.}, 
   "TryRealOnly" -> 
   False},ExpressionUUID->"f3cd850f-8271-4d23-b7f7-86dd12526680"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Subsubsection",
 FontSize->1,ExpressionUUID->"1e917770-2974-4748-b25d-17377b4e0334"],

Cell["", "EndOfSlide",ExpressionUUID->"1b760c7d-17e4-4176-8ae4-7783ad057238"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"238d4d1b-7561-4b4c-a003-4bd844b03af0"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellTags->"Summary",ExpressionUUID->"f3ad6de8-4a0a-4013-a08f-f93a82931ad4"],

Cell["This notebook has covered the following:", "Text",ExpressionUUID->"c3dbf1b2-88d2-4b41-97b2-4fa3ac4c44b7"],

Cell[TextData[StyleBox[ButtonBox["Using LLMs programmatically",
 BaseStyle->"Hyperlink",
 ButtonData->"UsingLLMsProgrammatically"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"e1b01193-691f-4180-a224-\
36f9092ebb43"],

Cell[TextData[StyleBox[ButtonBox["The Wolfram Prompt Repository",
 BaseStyle->"Hyperlink",
 ButtonData->"TheWolframPromptRepository"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"fda55784-3a9b-4669-b9af-\
8dc49e4cd8fb"],

Cell[TextData[StyleBox[ButtonBox["Chat objects",
 BaseStyle->"Hyperlink",
 ButtonData->"ChatObjects"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"a23acd30-d23f-40a3-b819-\
e1a26811acdd"],

Cell[TextData[StyleBox[ButtonBox["Chatbooks",
 BaseStyle->"Hyperlink",
 ButtonData->"Chatbooks"],
 FontColor->GrayLevel[0]]], "Item",ExpressionUUID->"ab2695d2-98a8-40e2-841d-\
cbc0c3944a13"],

Cell["", "EndOfSlide",ExpressionUUID->"c07c5d7c-f6aa-42a3-83fc-f379c7cb0efa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e71ce211-5740-471c-8a79-7d0052e9b757"],

Cell[CellGroupData[{

Cell["Resources", "Section",
 CellTags->"Resources",ExpressionUUID->"e9cc8953-b544-46db-a6b6-6d3171d6d5b8"],

Cell[CellGroupData[{

Cell["Access to Wolfram tech", "Subsubsection",ExpressionUUID->"90453c2b-55b8-4195-9acd-393e1137609a"],

Cell[TextData[{
 "Find out if you have access to Mathematica through your organisation: ",
 ButtonBox["https://www.wolfram.com/siteinfo",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/siteinfo/"], None},
  ButtonNote->"https://www.wolfram.com/siteinfo/"]
}], "Item",ExpressionUUID->"0e04ae52-b81a-4aea-a349-6c4fbf953d56"],

Cell[TextData[{
 "Download a trial version of Mathematica: ",
 ButtonBox["https://www.wolfram.com/mathematica/trial",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/mathematica/trial/"], None},
  ButtonNote->"https://www.wolfram.com/mathematica/trial/"]
}], "Item",ExpressionUUID->"8bd6c2eb-ee2c-48e3-92c6-82af6d2d4d40"],

Cell[TextData[{
 "Browse: ",
 ButtonBox["Wolfram Tools for AIs",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/resources/tools-for-AIs/"], None},
  ButtonNote->"https://www.wolfram.com/resources/tools-for-AIs/"]
}], "Item",ExpressionUUID->"565e54bc-b0b9-4068-b1ed-72160c23c070"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LLM functionality", "Subsubsection",ExpressionUUID->"8b0dae50-ab61-452b-a404-1ee50c0d70c5"],

Cell[TextData[{
 "Language model and other API-based machine learning functions for Wolfram \
Language: ",
 ButtonBox["https://resources.wolframcloud.com/PacletRepository/resources/\
Wolfram/LLMFunctions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/resources/\
Wolfram/LLMFunctions/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PacletRepository/resources/Wolfram/\
LLMFunctions/"]
}], "Item",ExpressionUUID->"607b34f0-f1e8-4176-b79e-2819ddf25014"],

Cell[TextData[{
 "Wolfram Notebooks with support for features powered by generative AI: ",
 ButtonBox["https://resources.wolframcloud.com/PacletRepository/resources/\
Wolfram/Chatbook",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/resources/\
Wolfram/Chatbook/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PacletRepository/resources/Wolfram/\
Chatbook/"]
}], "Item",ExpressionUUID->"3a2d6991-e729-4b89-af1b-74babad2a160"],

Cell[TextData[{
 "Wolfram Prompt Repository: ",
 ButtonBox["https://resources.wolframcloud.com/PromptRepository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PromptRepository"], None},
  ButtonNote->"https://resources.wolframcloud.com/PromptRepository"]
}], "Item",ExpressionUUID->"52960952-ce22-4794-9ce5-9410517b1a22"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Background reading", "Subsubsection",ExpressionUUID->"b6b83679-3450-425d-ac95-d39552a39205"],

Cell[CellGroupData[{

Cell["Blog posts by Stephen Wolfram:", "Item",ExpressionUUID->"4884acdc-b5df-4682-94aa-2b312f30e7e7"],

Cell[TextData[{
 "LLM functions: ",
 ButtonBox["The New World of LLM Functions: Integrating LLM Technology into \
the Wolfram Language",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://writings.stephenwolfram.com/2023/05/the-new-world-of-llm-\
functions-integrating-llm-technology-into-the-wolfram-language/"], None},
  ButtonNote->
   "https://writings.stephenwolfram.com/2023/05/the-new-world-of-llm-\
functions-integrating-llm-technology-into-the-wolfram-language/"],
 " "
}], "Subitem",ExpressionUUID->"87a92ae4-7341-441f-be84-29ef8a2f05d5"],

Cell[TextData[{
 "Wolfram Chat Notebooks: ",
 ButtonBox["Introducing Chat Notebooks: Integrating LLMs into the Notebook \
Paradigm",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://writings.stephenwolfram.com/2023/06/introducing-chat-\
notebooks-integrating-llms-into-the-notebook-paradigm/"], None},
  ButtonNote->
   "https://writings.stephenwolfram.com/2023/06/introducing-chat-notebooks-\
integrating-llms-into-the-notebook-paradigm/"]
}], "Subitem",ExpressionUUID->"4644cdda-2d6b-4e50-bf22-18046afcc5bd"],

Cell[TextData[{
 "The Wolfram Prompt Repository: ",
 ButtonBox["Prompts for Work & Play: Launching the Wolfram Prompt Repository",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://writings.stephenwolfram.com/2023/06/prompts-for-work-play-\
launching-the-wolfram-prompt-repository/"], None},
  ButtonNote->
   "https://writings.stephenwolfram.com/2023/06/prompts-for-work-play-\
launching-the-wolfram-prompt-repository/"]
}], "Subitem",ExpressionUUID->"0a99ea5c-a6e4-4e9e-9c21-8e9195d8eb03"],

Cell[TextData[{
 "How ChatGPT works: ",
 ButtonBox["What Is ChatGPT Doing\[Ellipsis] and Why Does It Work?",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://writings.stephenwolfram.com/2023/02/what-is-chatgpt-doing-\
and-why-does-it-work/"], None},
  ButtonNote->
   "https://writings.stephenwolfram.com/2023/02/what-is-chatgpt-doing-and-why-\
does-it-work/"],
 " (also available as a ",
 ButtonBox["book",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.amazon.com/What-ChatGPT-Doing-Does-Work/dp/1579550819"], 
    None},
  ButtonNote->
   "https://www.amazon.com/What-ChatGPT-Doing-Does-Work/dp/1579550819"],
 ")"
}], "Subitem",ExpressionUUID->"983d1ec1-d844-48b8-920a-8de729923ad0"],

Cell[TextData[{
 "Combining the powers of Wolfram|Alpha and ChatGPT: ",
 ButtonBox["Wolfram|Alpha as the Way to Bring Computational Knowledge \
Superpowers to ChatGPT",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://writings.stephenwolfram.com/2023/01/wolframalpha-as-the-way-\
to-bring-computational-knowledge-superpowers-to-chatgpt/"], None},
  ButtonNote->
   "https://writings.stephenwolfram.com/2023/01/wolframalpha-as-the-way-to-\
bring-computational-knowledge-superpowers-to-chatgpt/"]
}], "Subitem",ExpressionUUID->"3ab07e1a-64a2-4eab-b5a2-00a79ed96295"]
}, Open  ]],

Cell[TextData[{
 "Learn about neural networks, LLMs and the details of how ChatGPT works: ",
 ButtonBox["YouTube playlist",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.youtube.com/playlist?list=PLxn-kpJHbPx2upO5Rm_4qe7_\
h9IjaQ1Tz"], None},
  ButtonNote->
   "https://www.youtube.com/playlist?list=PLxn-kpJHbPx2upO5Rm_4qe7_h9IjaQ1Tz"]\

}], "Item",ExpressionUUID->"aee79c0b-4c88-47b1-af49-8a8de04b999e"],

Cell[CellGroupData[{

Cell["\<\
Fun community posts about Wolfram Language in action using LLMs:\
\>", "Item",ExpressionUUID->"1ed9ecfb-f09e-46ee-a259-ea7c8b285730"],

Cell[TextData[ButtonBox["Shakespearean GPT from Scratch: Create a Generative \
Pre-trained Transformer",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://community.wolfram.com/groups/-/m/t/2847286"], None},
 ButtonNote->"https://community.wolfram.com/groups/-/m/t/2847286"]], "Subitem",\
ExpressionUUID->"ec4f23a1-e528-4085-a810-7260cf46bf25"],

Cell[TextData[ButtonBox["Cooking Recipes with GPT-3, DALL-E and the Wolfram \
Language",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://community.wolfram.com/groups/-/m/t/2848741"], None},
 ButtonNote->"https://community.wolfram.com/groups/-/m/t/2848741"]], "Subitem",\
ExpressionUUID->"24961bb1-1071-433c-a22e-6b25a4d34b5e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Net Framework", "Subsubsection",ExpressionUUID->"011ad601-2a77-4052-97fb-390611751d50"],

Cell[TextData[{
 "Quick into to neural nets: ",
 ButtonBox["blog",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://wolframalpha.tumblr.com/post/175151716067/an-intro-to-neural-\
nets"], None},
  ButtonNote->
   "https://wolframalpha.tumblr.com/post/175151716067/an-intro-to-neural-\
nets"],
 " or ",
 ButtonBox["video",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/broadcast/video.php?c=362&v=2315"], None},
  ButtonNote->"https://www.wolfram.com/broadcast/video.php?c=362&v=2315"]
}], "Item",ExpressionUUID->"02b8bf53-0d1f-4a2b-92c2-5ffcc503f860"],

Cell[TextData[{
 "Tutorial collection: ",
 ButtonBox["Neural Networks in the Wolfram Language",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/tutorial/\
NeuralNetworksOverview.html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/tutorial/NeuralNetworksOverview.\
html"]
}], "Item",ExpressionUUID->"dfe74c28-88e2-475f-8e93-038d8be4e6b3"],

Cell[TextData[{
 "Documentation guide page: ",
 ButtonBox["Neural Networks functions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/guide/NeuralNetworks.html"], 
    None},
  ButtonNote->
   "https://reference.wolfram.com/language/guide/NeuralNetworks.html"]
}], "Item",ExpressionUUID->"f80d752f-1a86-41c4-ac6e-2611fd3a4a60"],

Cell[TextData[{
 "Wolfram U video lessons: ",
 ButtonBox["Machine Learning",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/wolfram-u/courses/machine-learning/"], None},
  
  ButtonNote->"https://www.wolfram.com/wolfram-u/courses/machine-learning/"]
}], "Item",ExpressionUUID->"f6bee4ef-7ff8-469b-9fc0-e8a79b3b1126"],

Cell[TextData[{
 "Wolfram blog post: ",
 ButtonBox["Neural Networks: An Introduction",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://blog.wolfram.com/2019/05/02/neural-networks-an-introduction/\
"], None},
  ButtonNote->
   "https://blog.wolfram.com/2019/05/02/neural-networks-an-introduction/"]
}], "Item",ExpressionUUID->"8f9f009b-af5a-48ad-86df-b8a58132fc9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Net Repository", "Subsubsection",ExpressionUUID->"eff86fa6-89aa-4992-9d22-3ce877e15ce2"],

Cell[TextData[{
 "Website: ",
 ButtonBox["Wolfram Neural Net Repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/NeuralNetRepository/"], None},
  ButtonNote->"https://resources.wolframcloud.com/NeuralNetRepository/"]
}], "Item",ExpressionUUID->"cdde4346-49c3-4201-99ac-2dca8cd3a5cb"],

Cell[TextData[{
 "Wolfram blog post: ",
 ButtonBox["Launching the Wolfram Neural Net Repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://blog.wolfram.com/2018/06/14/launching-the-wolfram-neural-net-\
repository/"], None},
  ButtonNote->
   "https://blog.wolfram.com/2018/06/14/launching-the-wolfram-neural-net-\
repository/"]
}], "Item",ExpressionUUID->"df0124f6-7849-4b35-91e8-1d4c4f492d0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Previous webinars", "Subsubsection",ExpressionUUID->"58217755-691f-4315-9632-622de039d2b0"],

Cell[TextData[ButtonBox["Learning about LLMs Webinar Series",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.wolfram.com/wolfram-u/courses/language-integrations/\
learning-about-llm-webinar-series/"], None},
 ButtonNote->
  "https://www.wolfram.com/wolfram-u/courses/language-integrations/learning-\
about-llm-webinar-series/"]], "Item",ExpressionUUID->"5254f1ee-e2a2-4ed5-94fe-\
35037972329d"],

Cell[TextData[ButtonBox["Machine Learning Webinar Series",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.wolfram.com/wolfram-u/courses/machine-learning/machine-\
learning-webinar-series/"], None},
 ButtonNote->
  "https://www.wolfram.com/wolfram-u/courses/machine-learning/machine-\
learning-webinar-series/"]], "Item",ExpressionUUID->"ccf605cb-2ef2-4874-aa8c-\
84138eb6d23a"],

Cell["", "EndOfSlide",ExpressionUUID->"667a47e4-7120-418c-bc6d-d33d72fe60b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Saveable->True,
WindowSize->{1385, 847},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
WindowTitle->"The Wolfram Prompt Repository and More",
TaggingRules->{
 "WolframUNotebook" -> True, "SlideshowSettings" -> {"Toolbar" -> True}, 
  "ChatNotebookSettings" -> {"Assistance" -> False}, "TryRealOnly" -> False},
CellEpilog:>SelectionMove[
  EvaluationCell[], Next, Cell, 0],
TrackCellChangeTimes->False,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Chatbook.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["AuthorNote", StyleDefinitions -> StyleData["Text"]], 
       CellDingbat -> 
       StyleBox[
        "Author note:", "Text", Italic, FontColor -> RGBColor[0.8, 0, 0], 
         Alignment -> Baseline], MenuCommandKey :> 
       MenuKey["a", Modifiers -> {"Command", "Shift"}], FontSlant -> Italic, 
       FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData[All, "Working"], MenuCommandKey :> 
       MenuKey["-", Modifiers -> {"Shift"}]], 
      Cell[
       StyleData[All, "SlideShow"], MenuCommandKey :> 
       MenuKey["=", Modifiers -> {"Shift"}]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo", StyleDefinitions -> StyleData["Title"]], 
          CellMargins -> {{120, 0}, {0, 130}}, CellGroupingRules -> 
          "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> True,
           CellAutoOverwrite -> True, ShowCellLabel -> False, 
          CellFrameMargins -> {{0, 0}, {0, 0}}, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
          GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], Thickness -> 
          Medium, Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData[
          "WolframULogo", "SlideShow", StyleDefinitions -> 
           StyleData["WolframULogo"]], 
          CellFrameLabels -> {{None, None}, {None, None}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{120, 0}, {0, 40}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 81, FontWeight -> 
             "Regular", FontSlant -> "Plain", FontTracking -> -0.75, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 81, FontWeight -> "Regular", 
             FontSlant -> "Plain", FontTracking -> -0.75, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{120, 0}, {0, 12}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 40, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 12}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TitleGraphic"], CellMargins -> {{120, 0}, {0, 25}}, 
             CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> 
             False, GeneratedCell -> True, CellAutoOverwrite -> True, 
             ShowCellLabel -> False, DefaultFormatType -> 
             DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
             FormatType -> StandardForm, ShowStringCharacters -> False, 
             FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
             GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], 
             Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
             StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
             FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
             1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData["TitleGraphic", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 25}}, CellGroupingRules -> 
             "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> 
             True, CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
             "NaturalLanguage", FormatType -> StandardForm, 
             ShowStringCharacters -> False, FrontFaceColor -> GrayLevel[0], 
             FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
             Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> 
             False, StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 
             10, FontWeight -> "Plain", FontColor -> GrayLevel[0], 
             FontOpacity -> 1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Working", StyleDefinitions -> 
              StyleData["TitelGraphic", "SlideShow"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, 
             ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 70, FontWeight -> 
             "Regular", FontSlant -> "Plain", FontTracking -> -0.5, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], CellFrame -> {{0, 0}, {0, 0}},
              ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}},
              LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", 
             FontSize -> 70, FontWeight -> "Regular", FontSlant -> "Plain", 
             FontTracking -> -0.5, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 30, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             30, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 30}}, MenuCommandKey :> 
             MenuKey["6", Modifiers -> {"Shift"}], FontFamily -> 
             "Source Sans Pro", FontSize -> 25, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[0.9, 0.2, 0.2]], 
            Cell[
             StyleData["Subsubsubsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 30}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 25, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[0.9, 0.2, 0.2]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsubsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 10}}, 
             CellFrameMargins -> {{Inherited, Inherited}, {3, 3}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 20, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[0.8, 0.3, 0.3]], 
            Cell[
             StyleData["Subsubsubsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 30}}, 
             CellFrameMargins -> {{Inherited, Inherited}, {3, 3}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 20, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[0.8, 0.3, 0.3]]}, Open]]}, Closed]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       StyleData["EndOfSlide"], CellFrame -> {{False, False}, {False, True}}, 
       ShowCellBracket -> False, CellMargins -> {{120, 0}, {100, 15}}, 
       CellFrameColor -> GrayLevel[0.85]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 22, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeText"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["CodeText", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 15}}, LineSpacing -> {1, 3}, 
          TabSpacings -> {2.5}, FontFamily -> "Source Sans Pro", FontSize -> 
          22, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Working", StyleDefinitions -> 
           StyleData["CodeText", "SlideShow"]]], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "CodeText", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.8]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]], 
          CellMargins -> {{140, 0}, {0, 15}}, MenuCommandKey :> 
          MenuKey["8", Modifiers -> {"Shift"}]], 
         Cell[
          StyleData["Item", "SlideShow"], CellMargins -> {{140, 0}, {0, 15}}, 
          CellFrameLabelMargins -> 10, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{140, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], 
            None], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{140, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{140, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
          CellMargins -> {{160, 0}, {0, 15}}], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, CellFrameLabelMargins -> 10, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{160, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            
            CurrentValue[{
             StyleHints, "ColorSet", 
              "Text1"}]], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{160, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Closed]], 
      Cell[
       StyleData["Subsubitem"], CellMargins -> {{180, 0}, {0, 15}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{145, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 
          15, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{145, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{180, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{180, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          CellChangeTimes -> {{3.772393378081081*^9, 3.772393382879437*^9}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{180, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       StyleData["Graphics"], CellMargins -> {{120, Inherited}, {15, 15}}, 
       CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
       GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
       False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
       FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
       AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
       LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
       ShowStringCharacters -> False, NumberMarks -> False, CounterIncrements -> 
       "Graphics", ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
       Arrowheads -> 0.04, Dashing -> None, CapForm -> "Square", 
       JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
       1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
       Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
       EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
       FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
       Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
       FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
       1, $CellContext`BackFaceColor -> 
       GrayLevel[0], $CellContext`StripStyleOnPaste -> 
       False, $CellContext`BackFaceOpacity -> 1], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["WolframAlphaShort"], CellMargins -> {{120, 0}, {0, 15}}, 
       MenuSortingValue -> 10000], 
      Cell[
       StyleData["WolframAlphaLong"], CellMargins -> {{117, 0}, {0, 15}}, 
       MenuSortingValue -> 10000], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {
           "~" -> "ChatDelimiter", "'" -> "ChatInput", "=" -> 
            "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguageDefault"}, FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Closed]], 
      Cell[
       StyleData["ChatInput"], CellMargins -> {{120, 10}, {5, 20}}, 
       StyleKeyMapping -> {
        "~" -> "ChatDelimiter", "'" -> "SideChat", "Backspace" -> "Input"}], 
      Cell[
       StyleData["SideChat"], CellMargins -> {{120, 10}, {5, 20}}], 
      Cell[
       StyleData["ChatQuery"], CellMargins -> {{120, 10}, {5, 20}}], 
      Cell[
       StyleData["ChatSystemInput"], CellMargins -> {{120, 10}, {5, 20}}], 
      Cell[
       StyleData["ChatOutput"], CellMargins -> {{120, 10}, {5, 20}}], 
      Cell[
       StyleData["AssistantOutput"], CellMargins -> {{120, 10}, {5, 20}}], 
      Cell[
       StyleData["AssistantOutputWarning"], 
       CellMargins -> {{120, 10}, {5, 20}}], 
      Cell[
       StyleData["AssistantOutputError"], 
       CellMargins -> {{120, 10}, {5, 20}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Program"], CellMargins -> {{120, 10}, {5, 20}}, 
          MenuSortingValue -> 10000, FontSize -> 16], 
         Cell[
          StyleData["Program", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, FontSize -> 20], 
         Cell[
          StyleData[
          "Program", "Slideshow Working", StyleDefinitions -> 
           StyleData["Program", "SlideShow"]]], 
         Cell[
          StyleData[
          "Program", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Program", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Program", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Program", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[
                  1., 0.592156862745098, 
                   0.10196078431372549`], $CellContext`BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]]]]], 
             None}, {None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{120, 10}, {5, 10}}, 
          FontSize -> 13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{120, 10}, {5, 10}}], 
         Cell[
          StyleData["Code", "SlideShow"], CellMargins -> {{120, 10}, {5, 10}},
           LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{120, 10}, {5, 10}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Closed]], 
      Cell[
       StyleData["Separator"], CellFrame -> {{False, False}, {1.5, False}}, 
       CellMargins -> {{120, 0}, {0, 0}}, CellFrameColor -> GrayLevel[0.8], 
       MenuSortingValue -> 10000]}, Closed]]}, Visible -> False, 
  FrontEndVersion -> "13.3 for Mac OS X ARM (64-bit) (June 3, 2023)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"9864af43-7d1e-48d4-9d49-a4392aec3d2d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[632, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2612715e-e229-478b-8d0a-dd7c08fc9409",
   CellTags->"SlideShowHeader"],
  Cell[54439, 924, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0222c63a-bab8-4fc8-8c18-a65fcef254c1",
   CellTags->"SlideShowHeader"],
  Cell[56046, 974, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"49a3161e-d421-4558-94e4-f3bb30de0011",
   CellTags->"SlideShowHeader"],
  Cell[57818, 1028, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8e25dada-feff-4eca-b86d-17633821c50c",
   CellTags->"SlideShowHeader"],
  Cell[62379, 1146, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b8c73f10-c16b-4e8f-aa5c-329d2b66780c",
   CellTags->"SlideShowHeader"],
  Cell[127790, 2295, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"087fca65-a9ea-441e-8554-19c9a7cfdc56",
   CellTags->"SlideShowHeader"],
  Cell[136309, 2518, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ee440faa-4ab9-4874-b8b5-9bae7ea35638",
   CellTags->"SlideShowHeader"],
  Cell[149488, 2872, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6084a335-2601-4ca4-9b2c-8d7107a71608",
   CellTags->"SlideShowHeader"],
  Cell[151620, 2930, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"adb5fa33-497b-4948-81bc-3a14732ac830",
   CellTags->"SlideShowHeader"],
  Cell[164522, 3238, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"70e63c9e-efdb-439d-a217-f57937298787",
   CellTags->"SlideShowHeader"],
  Cell[167767, 3325, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c4b51ccf-e13f-4d09-8842-5ec7a2ad0a76",
   CellTags->"SlideShowHeader"],
  Cell[170826, 3419, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"77f7c721-c1ee-4004-a0fc-e52bf3ac132a",
   CellTags->"SlideShowHeader"],
  Cell[178007, 3624, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"06ea562f-b061-4033-a372-f6c6a228a0cd",
   CellTags->"SlideShowHeader"],
  Cell[263731, 5057, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"cad70cea-6a7c-47d6-a5bc-975f51ab8620",
   CellTags->"SlideShowHeader"],
  Cell[268232, 5187, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b2a072c5-ce5d-49cb-813d-586beb282f16",
   CellTags->"SlideShowHeader"],
  Cell[273480, 5331, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"099d7181-6e31-46ae-b55a-d0aa06ba19db",
   CellTags->"SlideShowHeader"],
  Cell[281198, 5564, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"238d4d1b-7561-4b4c-a003-4bd844b03af0",
   CellTags->"SlideShowHeader"],
  Cell[282553, 5605, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e71ce211-5740-471c-8a79-7d0052e9b757",
   CellTags->"SlideShowHeader"]},
 "Introduction"->{
  Cell[56207, 980, 116, 2, 139, "Section",ExpressionUUID->"cb208bda-92af-4f93-ac45-b3a8c0de83da",
   CellTags->"Introduction"]},
 "UsingLLMsProgrammatically"->{
  Cell[57979, 1034, 146, 3, 139, "Section",ExpressionUUID->"cb3364a3-6bfa-45f3-bfa8-ab96109a70ad",
   CellTags->"UsingLLMsProgrammatically"]},
 "TheWolframPromptRepository"->{
  Cell[149649, 2878, 149, 3, 139, "Section",ExpressionUUID->"3533e356-681a-4346-beb6-ace970c69e68",
   CellTags->"TheWolframPromptRepository"]},
 "ChatObjects"->{
  Cell[263892, 5063, 115, 2, 139, "Section",ExpressionUUID->"92d06fd9-8822-4d54-b743-b9a2aed971f7",
   CellTags->"ChatObjects"]},
 "Chatbooks"->{
  Cell[268393, 5193, 107, 1, 139, "Section",ExpressionUUID->"5dc27fe4-a6c8-40b5-916b-37d63c81ae97",
   CellTags->"Chatbooks"]},
 "Summary"->{
  Cell[281359, 5570, 103, 1, 139, "Section",ExpressionUUID->"f3ad6de8-4a0a-4013-a08f-f93a82931ad4",
   CellTags->"Summary"]},
 "Resources"->{
  Cell[282714, 5611, 107, 1, 139, "Section",ExpressionUUID->"e9cc8953-b544-46db-a6b6-6d3171d6d5b8",
   CellTags->"Resources"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 332506, 6757},
 {"Introduction", 335161, 6794},
 {"UsingLLMsProgrammatically", 335322, 6797},
 {"TheWolframPromptRepository", 335498, 6800},
 {"ChatObjects", 335661, 6803},
 {"Chatbooks", 335807, 6806},
 {"Summary", 335949, 6809},
 {"Resources", 336091, 6812}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[632, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2612715e-e229-478b-8d0a-dd7c08fc9409",
 CellTags->"SlideShowHeader"],
Cell[771, 27, 14994, 251, 142, "Title",ExpressionUUID->"0ed5406f-6a2e-4a48-850a-2f221da9dc50"],
Cell[15768, 280, 102, 0, 143, "Title",ExpressionUUID->"3bb26825-896b-4ae5-97d3-9a6680f118fc"],
Cell[15873, 282, 105, 0, 63, "Subtitle",ExpressionUUID->"cb1bc8d0-2388-4c4f-9650-dc355ccb6ae6"],
Cell[15981, 284, 38341, 633, 370, "Input",ExpressionUUID->"5d64779a-69eb-4472-9bd4-acc393c42d0e"],
Cell[54325, 919, 77, 0, 136, "EndOfSlide",ExpressionUUID->"9608776b-afd6-4805-bbfe-1eb0c141b664"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54439, 924, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0222c63a-bab8-4fc8-8c18-a65fcef254c1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[54600, 930, 81, 0, 139, "Section",ExpressionUUID->"c4a6cb86-9caa-4303-99de-6879e949761f"],
Cell[54684, 932, 196, 4, 35, "Item",ExpressionUUID->"b030dd82-11f7-4846-8f88-dbe620cf6063"],
Cell[54883, 938, 224, 4, 35, "Item",ExpressionUUID->"730842dc-5c22-415d-95f9-d9c8919e4395"],
Cell[55110, 944, 227, 4, 35, "Item",ExpressionUUID->"7011e9f1-3577-42b4-8631-0987527a548b"],
Cell[55340, 950, 195, 4, 35, "Item",ExpressionUUID->"7250d4df-0a43-46b5-ba1c-006c041bc804"],
Cell[55538, 956, 190, 4, 35, "Item",ExpressionUUID->"cec0fd06-bb89-4052-963a-68646d1166aa"],
Cell[55731, 962, 186, 4, 35, "Item",ExpressionUUID->"b8533899-d4c3-47d0-a995-216b09b2e679"],
Cell[55920, 968, 77, 0, 136, "EndOfSlide",ExpressionUUID->"8797ae39-1a61-4b94-8269-29a81db781f7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56046, 974, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"49a3161e-d421-4558-94e4-f3bb30de0011",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[56207, 980, 116, 2, 139, "Section",ExpressionUUID->"cb208bda-92af-4f93-ac45-b3a8c0de83da",
 CellTags->"Introduction"],
Cell[56326, 984, 999, 25, 35, "Text",ExpressionUUID->"ba569715-6f88-4825-a03b-cdda4fb93edb"],
Cell[57328, 1011, 361, 9, 35, "Text",ExpressionUUID->"ba4ddd34-1794-4256-8c4d-facaa2dff7f7"],
Cell[57692, 1022, 77, 0, 136, "EndOfSlide",ExpressionUUID->"04e10ec7-b2c6-45df-818c-f0a3de2f5726"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57818, 1028, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8e25dada-feff-4eca-b86d-17633821c50c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[57979, 1034, 146, 3, 139, "Section",ExpressionUUID->"cb3364a3-6bfa-45f3-bfa8-ab96109a70ad",
 CellTags->"UsingLLMsProgrammatically"],
Cell[CellGroupData[{
Cell[58150, 1041, 90, 0, 91, "Subsection",ExpressionUUID->"983f94be-97a6-4567-9563-e110e183386a"],
Cell[58243, 1043, 449, 9, 35, "Text",ExpressionUUID->"a47f09f6-8113-4841-bd4a-5bca95b8a330"],
Cell[58695, 1054, 96, 0, 35, "Text",ExpressionUUID->"39d83161-dd61-4aa6-9b06-ff71735e55cf"],
Cell[58794, 1056, 179, 3, 42, "Input",ExpressionUUID->"05a7f3d3-f166-43eb-aa06-90f969baaa2e"],
Cell[58976, 1061, 96, 0, 35, "Text",ExpressionUUID->"1950f32b-02dc-4c68-96bf-6e260e200952"],
Cell[59075, 1063, 149, 2, 42, "Input",ExpressionUUID->"7590e6c6-f932-4eac-8492-8619ab3c5d3b"],
Cell[59227, 1067, 446, 10, 35, "Text",ExpressionUUID->"fbe577cd-395c-4e68-b6de-f1ecc82917f5"],
Cell[59676, 1079, 660, 13, 190, "Input",ExpressionUUID->"88fa168d-5110-4b61-bd62-25f5415bc599"],
Cell[60339, 1094, 176, 3, 35, "Text",ExpressionUUID->"121d0ae1-a930-49a8-8d95-8d68630964a9"],
Cell[60518, 1099, 110, 0, 35, "Text",ExpressionUUID->"5de9e84d-5411-477c-95dc-55759ac466c0"],
Cell[60631, 1101, 1607, 36, 421, "Input",ExpressionUUID->"c298beb2-8580-44ed-a8b6-d8f3fb6eb105"],
Cell[62241, 1139, 77, 0, 136, "EndOfSlide",ExpressionUUID->"658a1b9a-e99e-492c-be4d-fbd76529ab48"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62379, 1146, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b8c73f10-c16b-4e8f-aa5c-329d2b66780c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[62540, 1152, 88, 0, 91, "Subsection",ExpressionUUID->"4f7710bb-0ec9-49fa-a5d8-e5d9f2e3bfe5"],
Cell[62631, 1154, 352, 9, 35, "Text",ExpressionUUID->"879798ce-fa8e-4acb-af95-265bfd0f91df"],
Cell[62986, 1165, 202, 4, 42, "Input",ExpressionUUID->"9a8bbd0c-e259-45af-80b6-f0ad263c40b0"],
Cell[63191, 1171, 130, 1, 42, "Input",ExpressionUUID->"3d96002c-9af7-42b9-8058-d7144f6d96d1"],
Cell[63324, 1174, 138, 2, 42, "Input",ExpressionUUID->"c5fa0121-e4f0-4548-b801-379a481ee87b"],
Cell[63465, 1178, 367, 8, 35, "Text",ExpressionUUID->"3f67c030-c495-49fa-8e5d-35ac0b870dd1"],
Cell[63835, 1188, 220, 5, 42, "Input",ExpressionUUID->"4f3ec99b-76db-4c08-97a9-73da199e90d5"],
Cell[64058, 1195, 227, 4, 42, "Input",ExpressionUUID->"072d22aa-3aba-4a17-998f-0930ee6823b0"],
Cell[64288, 1201, 350, 9, 35, "Text",ExpressionUUID->"f8ae5445-116a-4019-bc96-683964f8eaac"],
Cell[64641, 1212, 375, 10, 42, "Input",ExpressionUUID->"a5886458-237d-4ab4-b3ca-204c3a2e35ca"],
Cell[65019, 1224, 360, 9, 42, "Input",ExpressionUUID->"efbe4d21-82f4-42eb-be5c-c7b72b15ae62"],
Cell[65382, 1235, 123, 0, 35, "Text",ExpressionUUID->"7615a283-b573-4bcd-931c-774189325a66"],
Cell[65508, 1237, 946, 21, 190, "Input",ExpressionUUID->"b72da70b-0267-4d78-81c8-633e874b4d20"],
Cell[66457, 1260, 141, 2, 35, "Text",ExpressionUUID->"5d24c18f-ce32-4609-a038-4a1ccad12dba"],
Cell[66601, 1264, 324, 7, 42, "Input",ExpressionUUID->"87df3c3d-12c3-4dd3-a222-9f4819add67d"],
Cell[66928, 1273, 394, 8, 35, "Text",ExpressionUUID->"682a2ed0-8943-4022-8019-adcf2f15a641"],
Cell[67325, 1283, 257, 6, 42, "Input",ExpressionUUID->"e21f8e6a-6d99-4b08-a14c-1aa2293ea6fa"],
Cell[67585, 1291, 103, 0, 35, "Text",ExpressionUUID->"aca5fb4e-75ce-46ee-987b-77ce1f90841d"],
Cell[67691, 1293, 59970, 994, 71, "Input",ExpressionUUID->"49fe8280-8695-4a82-aa1a-c38d416bac77"],
Cell[127664, 2289, 77, 0, 136, "EndOfSlide",ExpressionUUID->"d73d0618-564e-4362-bb1e-5d75b5571c6d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127790, 2295, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"087fca65-a9ea-441e-8554-19c9a7cfdc56",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[127951, 2301, 95, 0, 91, "Subsection",ExpressionUUID->"f283fb09-df63-4c72-9e54-d09c6eddbcac"],
Cell[128049, 2303, 386, 9, 35, "Text",ExpressionUUID->"ef588e1a-95f9-4473-aa2e-85245cd07669"],
Cell[128438, 2314, 108, 0, 35, "Text",ExpressionUUID->"c7105c6a-bc09-4485-b2ce-f670a61acaf7"],
Cell[128549, 2316, 350, 8, 42, "Input",ExpressionUUID->"6acc44f2-e8b0-48d0-ade3-f91ac6078291"],
Cell[128902, 2326, 180, 3, 35, "Text",ExpressionUUID->"b5217377-b48e-4ce4-92d3-4706e594c29f"],
Cell[129085, 2331, 352, 8, 42, "Input",ExpressionUUID->"1bd8093c-9acc-4913-80c0-0dc363bea818"],
Cell[129440, 2341, 117, 0, 35, "Text",ExpressionUUID->"5b828ea9-686d-4dc2-83ad-0aa2e9357585"],
Cell[129560, 2343, 613, 14, 148, "Input",ExpressionUUID->"384562f4-45eb-4e41-996f-954916c1f7b7"],
Cell[130176, 2359, 118, 0, 35, "Text",ExpressionUUID->"751518f0-cec4-4c58-a9de-939860ba222c"],
Cell[CellGroupData[{
Cell[130319, 2363, 280, 8, 68, "Subsubsubsection",ExpressionUUID->"368e25e4-ae58-4895-9e0c-3ebc8914f150"],
Cell[CellGroupData[{
Cell[130624, 2375, 104, 0, 36, "Subsubsubsubsection",ExpressionUUID->"4e3a3e13-bcc7-4da7-a3f6-e44fca3ed8e9"],
Cell[130731, 2377, 108, 0, 35, "Text",ExpressionUUID->"95f30449-1487-4bf7-b836-b3e0dcf55479"],
Cell[130842, 2379, 876, 18, 190, "Input",ExpressionUUID->"426a6955-2586-4c63-95be-ba50bbf1ee83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131755, 2402, 107, 0, 36, "Subsubsubsubsection",ExpressionUUID->"30b14ff7-bbe1-4f91-bfd6-3719bee4f820"],
Cell[131865, 2404, 343, 5, 58, "Text",ExpressionUUID->"099b77b7-9fe2-4531-84de-596093f25e27"],
Cell[132211, 2411, 976, 22, 253, "Input",ExpressionUUID->"5d320aae-a04b-42a5-b41f-4b87ebc9a0c4"],
Cell[133190, 2435, 449, 9, 42, "Input",ExpressionUUID->"b7ffadbd-d223-4a34-9029-9e7eb24c0dab"],
Cell[133642, 2446, 197, 4, 42, "Input",ExpressionUUID->"75934dba-c3ed-4951-886d-26633459771b"],
Cell[133842, 2452, 192, 4, 42, "Input",ExpressionUUID->"01930e0e-d2a8-4581-868c-70bd0902d10a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134071, 2461, 101, 0, 36, "Subsubsubsubsection",ExpressionUUID->"d93ff712-720b-4004-89b8-7b8ef894c009"],
Cell[134175, 2463, 101, 0, 35, "Text",ExpressionUUID->"4969e8b6-d800-4977-a432-d965c685fdee"],
Cell[134279, 2465, 1250, 24, 274, "Input",ExpressionUUID->"e54b1f62-c33a-4f5e-a289-b5c7b4dbcea5"],
Cell[135532, 2491, 341, 7, 85, "Input",ExpressionUUID->"9a9c4faa-9345-47d1-b3c1-ae0b83dfad47"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[135922, 2504, 246, 5, 14, "Subsubsubsection",ExpressionUUID->"c1776b43-5eb0-47c2-8523-aa2ee0de6bf0"],
Cell[136171, 2511, 77, 0, 136, "EndOfSlide",ExpressionUUID->"de56da44-464f-4bd5-aa6f-555492d1c6f5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136309, 2518, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ee440faa-4ab9-4874-b8b5-9bae7ea35638",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[136470, 2524, 84, 0, 91, "Subsection",ExpressionUUID->"87be5aa1-161d-4435-b395-f3c2d187cc91"],
Cell[136557, 2526, 804, 20, 35, "Text",ExpressionUUID->"10614a42-4560-482e-973f-96d9e9da75b3"],
Cell[137364, 2548, 110, 0, 35, "Text",ExpressionUUID->"ebb5804b-bd36-4dff-bb4b-8352a0e50dbc"],
Cell[137477, 2550, 591, 15, 127, "Input",ExpressionUUID->"65506b8c-8b76-4b4d-ae64-d750f9772c8b",
 CellID->1028315427],
Cell[138071, 2567, 101, 0, 35, "Text",ExpressionUUID->"70cd6ce5-55ed-41b6-821b-57382d621a43"],
Cell[138175, 2569, 530, 11, 106, "Input",ExpressionUUID->"a7f30f7a-37e7-4b36-afb7-6dcdcb21b301",
 CellID->982157977],
Cell[138708, 2582, 105, 0, 35, "Text",ExpressionUUID->"983e1ec7-648d-4e6c-be4d-a31ea5616235"],
Cell[138816, 2584, 362, 9, 64, "Input",ExpressionUUID->"0bb29d3f-b0a9-400c-8288-16b762b9dfcc"],
Cell[139181, 2595, 241, 5, 35, "Text",ExpressionUUID->"9544ccc8-a22c-484d-9d56-0a07f3fc560f"],
Cell[139425, 2602, 644, 13, 127, "Input",ExpressionUUID->"76b3278f-b632-44b7-a86c-9b8ff8dac220",
 CellID->187410015],
Cell[140072, 2617, 119, 1, 42, "Input",ExpressionUUID->"86f2f018-325a-4711-95ca-a143f44e8f05"],
Cell[140194, 2620, 122, 1, 42, "Input",ExpressionUUID->"e3221987-5112-4028-860c-bf3fd7559699"],
Cell[CellGroupData[{
Cell[140341, 2625, 280, 8, 68, "Subsubsubsection",ExpressionUUID->"cc69fc15-17b0-45d4-96fd-39d94daf0a02"],
Cell[CellGroupData[{
Cell[140646, 2637, 102, 0, 36, "Subsubsubsubsection",ExpressionUUID->"ff203b0a-52d4-4624-ba82-6a983890630e"],
Cell[140751, 2639, 105, 0, 35, "Text",ExpressionUUID->"a27956af-859d-42f9-902e-495e34efb418"],
Cell[140859, 2641, 580, 15, 127, "Input",ExpressionUUID->"f166fcf2-8d22-45ed-8166-0fcb6043e7fb"],
Cell[141442, 2658, 609, 12, 169, "Input",ExpressionUUID->"0e240e6f-c295-46ce-ab3b-7c9d1abcff53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142088, 2675, 106, 0, 36, "Subsubsubsubsection",ExpressionUUID->"b9350203-ce55-4726-aed4-2f1da9168462"],
Cell[142197, 2677, 124, 0, 35, "Text",ExpressionUUID->"8cf85a67-2ac7-4e54-ab1f-cbbefd76035f"],
Cell[142324, 2679, 890, 20, 211, "Input",ExpressionUUID->"a11d985f-5df2-4298-bd0d-43e1dcaaf423"],
Cell[143217, 2701, 560, 12, 106, "Input",ExpressionUUID->"6cb03985-a545-4c16-913d-d12e7da326e5"],
Cell[143780, 2715, 187, 3, 35, "Text",ExpressionUUID->"145800f3-8ea0-4946-848c-14731e1274c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144004, 2723, 106, 0, 36, "Subsubsubsubsection",ExpressionUUID->"b83dd5d2-497e-4cbf-9c50-36db8ca8e8c3"],
Cell[144113, 2725, 115, 0, 35, "Text",ExpressionUUID->"498aa549-31e7-4010-bef7-eccea2381766"],
Cell[144231, 2727, 1083, 26, 211, "Input",ExpressionUUID->"071d87d4-2c50-4326-abff-3b2a0945280a"],
Cell[145317, 2755, 797, 16, 148, "Input",ExpressionUUID->"a7ff2cbe-5dc7-400f-86b6-47c7c2d4bc0a"],
Cell[146117, 2773, 138, 2, 42, "Input",ExpressionUUID->"12710db8-0592-4c21-8b32-eb2368daaba6"],
Cell[146258, 2777, 117, 1, 42, "Input",ExpressionUUID->"48a067be-643e-4888-a155-5e7597911d88"],
Cell[146378, 2780, 101, 0, 35, "Text",ExpressionUUID->"21264f11-478e-48cb-9fa9-5937e515693c"],
Cell[146482, 2782, 737, 18, 190, "Input",ExpressionUUID->"c6a058e3-2d69-479c-914f-db32f1de4073"]
}, Open  ]]
}, Closed]],
Cell[147246, 2804, 246, 5, 14, "Subsubsubsection",ExpressionUUID->"6eba87a4-a5a1-486b-bfc6-ebc0714e6c40"],
Cell[CellGroupData[{
Cell[147517, 2813, 284, 8, 42, "Subsubsubsection",ExpressionUUID->"6e65126b-d3ce-4427-a01b-4d0aea4e8cb9"],
Cell[147804, 2823, 128, 0, 35, "Text",ExpressionUUID->"0da009bd-bd5e-4c71-a3f2-9b12d6864c61"],
Cell[CellGroupData[{
Cell[147957, 2827, 182, 3, 35, "ItemNumbered",ExpressionUUID->"232dcc66-9fa7-4a0b-a484-7a83314c7090"],
Cell[148142, 2832, 157, 2, 35, "ItemNumbered",ExpressionUUID->"4e62ed4c-7d99-43e2-b0db-34de1ab6c5a2"],
Cell[148302, 2836, 165, 2, 35, "ItemNumbered",ExpressionUUID->"b27b35b0-9a6b-47fb-9bf8-278caee850f6"],
Cell[148470, 2840, 211, 3, 35, "ItemNumbered",ExpressionUUID->"c677075b-31a7-4cd7-b07d-6194e2f37aa7"],
Cell[148684, 2845, 208, 3, 35, "ItemNumbered",ExpressionUUID->"789eea0b-ec1a-452e-972a-8f6361c9b7fd"],
Cell[148895, 2850, 157, 2, 35, "ItemNumbered",ExpressionUUID->"b765e8b2-50fc-4be8-81fd-065f5fbea386"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[149101, 2858, 246, 5, 14, "Subsubsubsection",ExpressionUUID->"e67e7d13-510d-49b1-b24e-48b1e04c4188"],
Cell[149350, 2865, 77, 0, 136, "EndOfSlide",ExpressionUUID->"1d106a56-893c-4125-b8ed-004924375595"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149488, 2872, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6084a335-2601-4ca4-9b2c-8d7107a71608",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[149649, 2878, 149, 3, 139, "Section",ExpressionUUID->"3533e356-681a-4346-beb6-ace970c69e68",
 CellTags->"TheWolframPromptRepository"],
Cell[149801, 2883, 369, 8, 35, "Text",ExpressionUUID->"05bd00db-bc5e-4f5b-8247-fbc2860510e0"],
Cell[150173, 2893, 110, 0, 35, "Text",ExpressionUUID->"43b44496-a4a9-441f-bdea-281280c53aa4"],
Cell[150286, 2895, 126, 0, 35, "Item",ExpressionUUID->"b7db7ce1-9da0-4a1d-9769-131ac39d1eaa"],
Cell[150415, 2897, 108, 0, 35, "Item",ExpressionUUID->"8c6f2feb-742f-4684-bcb5-fdcab428314e"],
Cell[150526, 2899, 80, 0, 35, "Item",ExpressionUUID->"4a2e23e0-073c-40ad-b13b-d80b6c281b7e"],
Cell[150609, 2901, 592, 15, 35, "Item",ExpressionUUID->"293fb158-345a-4745-84e2-b4f60b7e5762"],
Cell[151204, 2918, 82, 0, 35, "Item",ExpressionUUID->"20879e53-41c0-4129-9070-a06e47265359"],
Cell[151289, 2920, 85, 0, 35, "Item",ExpressionUUID->"734ad4d5-5db7-423d-aa55-347d24a04690"],
Cell[151377, 2922, 114, 0, 35, "Item",ExpressionUUID->"bbf98490-0489-4a83-8b3b-3756e1061544"],
Cell[151494, 2924, 77, 0, 136, "EndOfSlide",ExpressionUUID->"e525b222-9691-4591-b6f9-3497abc3f8e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151620, 2930, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"adb5fa33-497b-4948-81bc-3a14732ac830",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[151781, 2936, 96, 0, 91, "Subsection",ExpressionUUID->"f3a37ba5-f908-45ed-94e9-76782981c561"],
Cell[151880, 2938, 215, 3, 35, "Text",ExpressionUUID->"56cac5ba-edab-4874-8f51-10882568d120"],
Cell[152098, 2943, 367, 10, 35, "Text",ExpressionUUID->"4c82c481-3515-4acc-b80c-babadf834dda"],
Cell[152468, 2955, 145, 2, 42, "Input",ExpressionUUID->"3c89ccf9-ce86-4674-bf08-a0bc76dce54e"],
Cell[152616, 2959, 105, 0, 35, "Text",ExpressionUUID->"30807609-7acb-4d6a-8d7f-837e9c46152e"],
Cell[152724, 2961, 268, 6, 42, "Input",ExpressionUUID->"8e1e65b5-ceff-42c0-8709-19b515675cfd"],
Cell[152995, 2969, 237, 4, 35, "Text",ExpressionUUID->"e15e1659-dbce-4139-bba2-aafbdbd12a44"],
Cell[153235, 2975, 395, 11, 35, "Text",ExpressionUUID->"29c1ce3b-6a18-4667-af75-2085d7b481fd"],
Cell[153633, 2988, 232, 5, 42, "Input",ExpressionUUID->"dc04c221-a025-41b7-9fac-7689878bb989"],
Cell[153868, 2995, 141, 2, 35, "Text",ExpressionUUID->"0bb162df-3981-4056-9826-f01f23b8f008"],
Cell[154012, 2999, 96, 0, 35, "Text",ExpressionUUID->"2bcee273-be59-46f1-bb51-61b7acc9decc"],
Cell[154111, 3001, 128, 1, 42, "Input",ExpressionUUID->"7028886e-e9a2-4dd4-a8c5-5ba610f7eda7"],
Cell[CellGroupData[{
Cell[154264, 3006, 107, 0, 79, "Subsubsection",ExpressionUUID->"746af438-bf03-434e-b62e-5e51398ac895"],
Cell[154374, 3008, 667, 18, 35, "Text",ExpressionUUID->"2f8fb456-1006-4e02-9d35-a915e2a84807"],
Cell[155044, 3028, 345, 8, 42, "Input",ExpressionUUID->"29c2a271-acbe-43c8-917d-5ac0204b4620"],
Cell[155392, 3038, 130, 1, 42, "Input",ExpressionUUID->"865b15ce-82cd-49db-9fd2-22a6872a566e"],
Cell[155525, 3041, 140, 2, 42, "Input",ExpressionUUID->"ef60281e-0ac8-4319-9cbe-5bc13a68dc58"],
Cell[155668, 3045, 308, 7, 42, "Input",ExpressionUUID->"7c3da6af-2799-4d58-949e-ed7f8e7f50f9"],
Cell[155979, 3054, 138, 2, 42, "Input",ExpressionUUID->"cb7508e2-aeeb-4d9b-9d8e-b5529089cc51"],
Cell[156120, 3058, 189, 3, 35, "Text",ExpressionUUID->"abd6b28f-fbf6-4860-b136-485c9ff57e57"],
Cell[156312, 3063, 587, 14, 35, "Text",ExpressionUUID->"e7193a1b-cecb-40e5-bdb7-acdcc2bdfed1"],
Cell[156902, 3079, 1081, 25, 232, "Input",ExpressionUUID->"13930bd2-f5f6-49a2-835e-4bc664e11f63"],
Cell[157986, 3106, 6395, 123, 68, "Input",ExpressionUUID->"b13ee74f-4606-4d79-b6bc-fdfb9fe42e8f"],
Cell[164384, 3231, 77, 0, 136, "EndOfSlide",ExpressionUUID->"e95a46d2-6ccd-4a5e-9150-8549d995dbd3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[164522, 3238, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"70e63c9e-efdb-439d-a217-f57937298787",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[164683, 3244, 86, 0, 91, "Subsection",ExpressionUUID->"77c01ad2-772a-47e8-9392-06f7f2c002a0"],
Cell[164772, 3246, 528, 11, 58, "Text",ExpressionUUID->"0a752269-748a-42f0-9d92-46e1486a839b"],
Cell[165303, 3259, 405, 10, 35, "Text",ExpressionUUID->"cf90222b-28b1-46bb-b016-1c446886e7f7"],
Cell[165711, 3271, 163, 3, 42, "Input",ExpressionUUID->"ed573479-6cd8-419c-b096-0d3fb61a5b4f"],
Cell[165877, 3276, 121, 0, 35, "Text",ExpressionUUID->"e590cce0-9af9-4e7e-be5a-ad757cd3be68"],
Cell[166001, 3278, 109, 1, 42, "Input",ExpressionUUID->"748aaf1c-a46b-47d6-a6d7-5227a8762eca"],
Cell[166113, 3281, 113, 0, 35, "Text",ExpressionUUID->"63d69550-425d-4d12-be6a-dc62f578bf11"],
Cell[166229, 3283, 186, 3, 42, "Input",ExpressionUUID->"f96c01b3-9227-43bd-b707-74617591ddfc"],
Cell[166418, 3288, 173, 3, 35, "Text",ExpressionUUID->"2627ec1d-c1ba-40ad-a116-cf833b339be4"],
Cell[166594, 3293, 202, 4, 42, "Input",ExpressionUUID->"6d535109-984e-4f97-8bcc-b0bb12ba8fd4"],
Cell[166799, 3299, 146, 2, 42, "Input",ExpressionUUID->"f48f01f7-5627-449a-b1c7-c8a718b0c851"],
Cell[166948, 3303, 117, 0, 35, "Text",ExpressionUUID->"cbd3a562-576f-4867-9031-7f2b27f85f0e"],
Cell[167068, 3305, 187, 3, 42, "Input",ExpressionUUID->"f5e0a70d-3c7b-4892-a970-ba2b8360f9da"],
Cell[167258, 3310, 110, 0, 35, "Text",ExpressionUUID->"9e57c31c-d7e2-4f46-bcd3-c2b6f32dbb3e"],
Cell[167371, 3312, 267, 5, 42, "Input",ExpressionUUID->"53a824e5-c5d7-4e88-b9b2-8c09d1b72e47"],
Cell[167641, 3319, 77, 0, 136, "EndOfSlide",ExpressionUUID->"514f01c2-9054-494b-beea-b9fdaf1c11de"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167767, 3325, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c4b51ccf-e13f-4d09-8842-5ec7a2ad0a76",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[167914, 3331, 94, 0, 91, "Subsection",ExpressionUUID->"2ffc8be4-010b-4763-bb37-becb5b20cd2a"],
Cell[168011, 3333, 202, 3, 35, "Text",ExpressionUUID->"4b417d21-6954-4ef1-af26-741d6650da40"],
Cell[168216, 3338, 648, 20, 35, "Text",ExpressionUUID->"de755511-cca8-4f87-a1d6-07cbdd6d1723"],
Cell[168867, 3360, 374, 8, 42, "Input",ExpressionUUID->"8e7de8d4-2e33-4082-8c3d-a1976c548b50"],
Cell[169244, 3370, 666, 19, 35, "Text",ExpressionUUID->"e4a77753-2351-47ce-a72a-4b047f0622c7"],
Cell[169913, 3391, 358, 8, 42, "Input",ExpressionUUID->"2c76bc76-a9d0-4d06-814a-aa68d8d156df"],
Cell[170274, 3401, 289, 7, 42, "Input",ExpressionUUID->"281b5df2-89bb-4797-ba49-87fe999ff286"],
Cell[170566, 3410, 131, 1, 42, "Input",ExpressionUUID->"48cbd78e-73df-4401-b4a7-e35f95e6a503"],
Cell[170700, 3413, 77, 0, 136, "EndOfSlide",ExpressionUUID->"dc20e1e2-2593-470e-94ec-32964751d06b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170826, 3419, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"77f7c721-c1ee-4004-a0fc-e52bf3ac132a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[170987, 3425, 98, 0, 91, "Subsection",ExpressionUUID->"db66f31a-6957-4228-b56a-b17ab128503b"],
Cell[171088, 3427, 881, 21, 58, "Text",ExpressionUUID->"52e39a16-6aad-45b0-81d2-96804d7787e4"],
Cell[171972, 3450, 321, 7, 35, "Item",ExpressionUUID->"c89b46de-4704-41e6-b557-201113702fd8"],
Cell[172296, 3459, 338, 7, 35, "Item",ExpressionUUID->"88906b47-3052-455e-9e17-1fb4ed97f693"],
Cell[172637, 3468, 338, 7, 35, "Item",ExpressionUUID->"ff898ace-15b9-4a52-8b68-6deb8e84f781"],
Cell[172978, 3477, 113, 0, 35, "Text",ExpressionUUID->"5c9e39d3-3482-4714-99c5-ecf69535a7a4"],
Cell[CellGroupData[{
Cell[173116, 3481, 88, 0, 79, "Subsubsection",ExpressionUUID->"54a3208c-5a94-4aa8-8a69-0700411c3f61"],
Cell[173207, 3483, 180, 2, 35, "Text",ExpressionUUID->"b0265fc6-7b45-47a5-8176-adb868190115"],
Cell[173390, 3487, 364, 10, 35, "Text",ExpressionUUID->"3e89b800-bab4-4b65-82a3-b4d582b56ca2"],
Cell[173757, 3499, 130, 1, 42, "Input",ExpressionUUID->"b0be8569-04e1-4464-99e7-b5511ccc8bf4"],
Cell[173890, 3502, 300, 7, 42, "Input",ExpressionUUID->"48b8243c-3d7a-4d87-9b99-9c0dc1ddf9bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174227, 3514, 89, 0, 79, "Subsubsection",ExpressionUUID->"0655e5a0-2066-4fe4-a58e-e4bee4ee3770"],
Cell[174319, 3516, 177, 2, 35, "Text",ExpressionUUID->"db8fe9f5-bf61-45f7-8f69-5d63cceac244"],
Cell[174499, 3520, 358, 10, 35, "Text",ExpressionUUID->"a393f637-d8c6-41b4-8a34-ae1c5ecec549"],
Cell[174860, 3532, 266, 6, 42, "Input",ExpressionUUID->"ed384848-25c8-423d-9a5b-47cdbda9f089"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175163, 3543, 89, 0, 79, "Subsubsection",ExpressionUUID->"05065130-56aa-4da0-8d06-6a320eee7b00"],
Cell[175255, 3545, 171, 2, 35, "Text",ExpressionUUID->"a1dd1f2b-5b0c-466b-b7f6-ca7b50ac826a"],
Cell[175429, 3549, 386, 9, 35, "Text",ExpressionUUID->"a564ae7d-3e93-4694-aebc-1fc5858dd447"],
Cell[175818, 3560, 666, 12, 358, "Input",ExpressionUUID->"aedfb276-74b4-4e67-81dc-b666c3795411"],
Cell[176487, 3574, 365, 11, 64, "Input",ExpressionUUID->"66dd17f6-6c52-4234-a236-33494cc3159b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176889, 3590, 97, 0, 79, "Subsubsection",ExpressionUUID->"1855dab1-5344-4e6b-bb84-8b24bc13e1af"],
Cell[176989, 3592, 142, 2, 35, "Text",ExpressionUUID->"b2dc9e89-a38e-41bb-8b1d-01b1e1e844df"],
Cell[177134, 3596, 324, 7, 35, "Item",ExpressionUUID->"af954b64-2ff7-470c-9322-33b985a279f5"],
Cell[177461, 3605, 195, 3, 35, "Item",ExpressionUUID->"0954d2bb-bec0-4498-835f-47f8a94c359a"],
Cell[177659, 3610, 207, 5, 35, "Item",ExpressionUUID->"bc08ea41-f511-4d88-896f-90cd9f1dc324"],
Cell[177869, 3617, 77, 0, 136, "EndOfSlide",ExpressionUUID->"e52bd786-9fd8-401f-9136-02756d97f2ff"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178007, 3624, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"06ea562f-b061-4033-a372-f6c6a228a0cd",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[178168, 3630, 102, 0, 91, "Subsection",ExpressionUUID->"bbb6c004-5d97-4646-bd18-03a4778e54b7"],
Cell[178273, 3632, 231, 3, 35, "Text",ExpressionUUID->"650e9a1e-5f58-4209-a109-74403b42bae4"],
Cell[178507, 3637, 461, 11, 35, "Text",ExpressionUUID->"e4e610e2-aecd-4d0c-9b1a-bf7a55b77052"],
Cell[178971, 3650, 84072, 1383, 239, "Input",ExpressionUUID->"ccd1099e-b1e4-42f8-938d-46abef43f8df"],
Cell[263046, 5035, 389, 9, 35, "Text",ExpressionUUID->"c3d4c755-7c5d-476a-bda1-d4b7f093d99a"],
Cell[263438, 5046, 164, 3, 42, "Input",ExpressionUUID->"d5dd52e1-3859-45cb-af37-46c11713b16f"],
Cell[263605, 5051, 77, 0, 136, "EndOfSlide",ExpressionUUID->"25fef284-3d2f-491d-91e8-a627ea65f0ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263731, 5057, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"cad70cea-6a7c-47d6-a5bc-975f51ab8620",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[263892, 5063, 115, 2, 139, "Section",ExpressionUUID->"92d06fd9-8822-4d54-b743-b9a2aed971f7",
 CellTags->"ChatObjects"],
Cell[CellGroupData[{
Cell[264032, 5069, 95, 0, 91, "Subsection",ExpressionUUID->"32331a10-96db-4aa0-9f1c-d36a697f0274"],
Cell[264130, 5071, 385, 9, 35, "Text",ExpressionUUID->"695ca9ba-2b77-4e0f-885d-7db1a6e8b518"],
Cell[264518, 5082, 342, 8, 35, "Text",ExpressionUUID->"d1517a67-c785-4545-9a63-2616362873e9"],
Cell[264863, 5092, 222, 5, 42, "Input",ExpressionUUID->"033446ff-5ec5-44d3-a5f8-dc76fd72c8a5"],
Cell[265088, 5099, 115, 0, 35, "Text",ExpressionUUID->"de7f3514-314f-4132-bfbc-f45222c1226b"],
Cell[265206, 5101, 380, 9, 42, "Input",ExpressionUUID->"91178611-1c4b-4548-9f56-f081fd15d1cf"],
Cell[265589, 5112, 360, 8, 42, "Input",ExpressionUUID->"d041c7bd-b363-4914-989f-4b5977d958f7"],
Cell[265952, 5122, 399, 10, 42, "Input",ExpressionUUID->"564c75cb-b05a-4279-a4db-0281aa573fad"],
Cell[266354, 5134, 102, 0, 35, "Text",ExpressionUUID->"640e4054-1421-4841-bb23-148e65a663e9"],
Cell[266459, 5136, 129, 1, 42, "Input",ExpressionUUID->"7dc35792-5227-4d4f-a726-a2869d691598"],
Cell[266591, 5139, 127, 1, 42, "Input",ExpressionUUID->"750a065f-09fd-4f6b-8285-d94701857c78"],
Cell[266721, 5142, 124, 1, 42, "Input",ExpressionUUID->"2b11f8ee-cc67-44f1-a295-e3f01993d5a7"],
Cell[266848, 5145, 125, 1, 42, "Input",ExpressionUUID->"aef98459-746d-4ba3-8b67-18020f270e2e"],
Cell[CellGroupData[{
Cell[266998, 5150, 105, 0, 79, "Subsubsection",ExpressionUUID->"35871187-9fb9-4fcc-951c-df9a621ef1c5"],
Cell[267106, 5152, 140, 2, 35, "Text",ExpressionUUID->"b424ec42-6811-4e5a-8bee-56708d765f19"],
Cell[267249, 5156, 166, 3, 42, "Input",ExpressionUUID->"005abcc8-1c2a-40af-9eff-4454bf1a2388"],
Cell[267418, 5161, 124, 0, 35, "Text",ExpressionUUID->"49f2cf6b-bb39-40f0-883a-882a8c792598"],
Cell[267545, 5163, 534, 14, 85, "Input",ExpressionUUID->"0958856e-8942-45fb-a9d2-410f2f258cda"],
Cell[268082, 5179, 77, 0, 136, "EndOfSlide",ExpressionUUID->"bd68d815-d0ce-4ab6-8d36-5c4d5db1f8f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[268232, 5187, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b2a072c5-ce5d-49cb-813d-586beb282f16",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[268393, 5193, 107, 1, 139, "Section",ExpressionUUID->"5dc27fe4-a6c8-40b5-916b-37d63c81ae97",
 CellTags->"Chatbooks"],
Cell[268503, 5196, 141, 2, 35, "Text",ExpressionUUID->"4d03b8e9-f6e7-4889-a26f-575d9d3ceb9e"],
Cell[268647, 5200, 166, 2, 35, "Item",ExpressionUUID->"e9ef5677-7750-43b7-90b0-ed2ae79517a9"],
Cell[268816, 5204, 125, 0, 35, "Item",ExpressionUUID->"f543c014-fae5-4a09-ac47-3015cb3bf45a"],
Cell[268944, 5206, 122, 0, 35, "Item",ExpressionUUID->"01c2f56b-4a5c-4ced-a754-12ccefda19ab"],
Cell[269069, 5208, 130, 0, 35, "Item",ExpressionUUID->"700ee815-7b5d-43f9-8db2-4df5c026ae76"],
Cell[CellGroupData[{
Cell[269224, 5212, 92, 0, 91, "Subsection",ExpressionUUID->"9e9bbf3c-ea58-4a24-8191-7fbe5209f880"],
Cell[269319, 5214, 208, 3, 35, "Text",ExpressionUUID->"15bff773-0973-4881-80a6-7e245e6c415e"],
Cell[269530, 5219, 160, 3, 42, "Input",ExpressionUUID->"9f6c8428-28c0-4b28-a17c-9b1416f09621"],
Cell[269693, 5224, 199, 3, 35, "Text",ExpressionUUID->"9b9049a3-c543-4f75-a563-9649c27f6763"],
Cell[269895, 5229, 159, 3, 42, "Input",ExpressionUUID->"844ae9bf-4d33-485b-aaab-166351692aa8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270091, 5237, 87, 0, 91, "Subsection",ExpressionUUID->"64240400-3510-47f2-9121-23e09e591f97"],
Cell[270181, 5239, 176, 3, 35, "Text",ExpressionUUID->"1d5dc2af-ffb0-431d-be7b-02928620349a"],
Cell[CellGroupData[{
Cell[270382, 5246, 92, 0, 62, "Subsubsubsection",ExpressionUUID->"2c031b4f-3818-4d2e-a225-97de3ff0da3d"],
Cell[270477, 5248, 382, 7, 35, "Text",ExpressionUUID->"13a0b900-4d2d-493b-a06f-1677b2085a6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270896, 5260, 96, 0, 62, "Subsubsubsection",ExpressionUUID->"b0c50464-a949-41bc-8495-daf7e364b858"],
Cell[270995, 5262, 549, 13, 58, "Text",ExpressionUUID->"9d70055d-5b27-4c21-9247-514c186f986b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271581, 5280, 91, 0, 62, "Subsubsubsection",ExpressionUUID->"f7a7e1e9-796c-4c39-b4b5-791fad1e8a24"],
Cell[271675, 5282, 513, 9, 58, "Text",ExpressionUUID->"b774f166-1e80-45dc-a026-583a5da0c366"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272225, 5296, 98, 0, 62, "Subsubsubsection",ExpressionUUID->"5b1f597c-b6de-44b3-86f9-a10cd09366b0"],
Cell[272326, 5298, 426, 7, 58, "Text",ExpressionUUID->"864f73a8-edbc-4df0-ae8b-1e62d160a0fa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[272801, 5311, 99, 0, 91, "Subsection",ExpressionUUID->"066989c4-6555-4530-9ab5-6dbf602ae430"],
Cell[272903, 5313, 167, 3, 35, "Text",ExpressionUUID->"d2fed8b1-e02c-4c55-8002-f0a156fd62e9"],
Cell[273073, 5318, 86, 0, 35, "Item",ExpressionUUID->"8c434929-4af4-4ac5-b02f-499a6c559bd1"],
Cell[273162, 5320, 87, 0, 35, "Item",ExpressionUUID->"c39dde1c-31aa-4338-897f-2067f4cfdd95"],
Cell[273252, 5322, 87, 0, 35, "Item",ExpressionUUID->"aecff30e-fe91-498a-bc47-90bbb6b22e79"],
Cell[273342, 5324, 77, 0, 136, "EndOfSlide",ExpressionUUID->"732f6ff0-e029-4345-bbfc-d4b0962a0dba"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273480, 5331, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"099d7181-6e31-46ae-b55a-d0aa06ba19db",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[273641, 5337, 89, 0, 91, "Subsection",ExpressionUUID->"d57a3109-3852-4855-87d8-16ce1881c6c6"],
Cell[CellGroupData[{
Cell[273755, 5341, 135, 2, 79, "Subsubsection",ExpressionUUID->"7379b20a-edd7-4df4-a569-6710b466dc09"],
Cell[CellGroupData[{
Cell[273915, 5347, 80, 0, 49, "ChatDelimiter",ExpressionUUID->"fdc42e25-25b0-48bd-9ae3-650ea27d3d81"],
Cell[273998, 5349, 508, 14, 157, "ChatInput",ExpressionUUID->"00bd6257-4dfe-4be1-9421-8f9292b98ab1"],
Cell[274509, 5365, 393, 10, 71, "ChatInput",ExpressionUUID->"f41a86d2-feac-4192-8628-24dfc225a7dc"],
Cell[274905, 5377, 462, 11, 71, "ChatInput",ExpressionUUID->"f0672709-c5cb-46c1-baeb-a26bb13ad7a0"],
Cell[275370, 5390, 393, 10, 71, "ChatInput",ExpressionUUID->"7603520b-08ce-4619-be5a-b6f72b082362"],
Cell[275766, 5402, 390, 10, 71, "ChatInput",ExpressionUUID->"9fed226e-924f-451a-9a2f-57b0b2ad5561"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[276205, 5418, 128, 2, 43, "Subsubsection",ExpressionUUID->"1d6b63a4-c38d-4854-824d-85fb500cfba0"],
Cell[CellGroupData[{
Cell[276358, 5424, 80, 0, 49, "ChatDelimiter",ExpressionUUID->"884c2fa8-4b84-4564-ba1e-0892214afc2e"],
Cell[276441, 5426, 411, 10, 71, "ChatInput",ExpressionUUID->"7b89169c-ec5c-4625-a501-8f3149d94305"],
Cell[276855, 5438, 385, 10, 71, "ChatInput",ExpressionUUID->"ca93519b-f660-495f-898e-f426bf245160"],
Cell[277243, 5450, 395, 10, 71, "ChatInput",ExpressionUUID->"412f59e4-cffb-421c-a26a-721925d93c3f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[277687, 5466, 151, 2, 43, "Subsubsection",ExpressionUUID->"e759a0df-6888-48f2-8cfb-b9b9b9fc6aab"],
Cell[CellGroupData[{
Cell[277863, 5472, 80, 0, 49, "ChatDelimiter",ExpressionUUID->"331086f6-02c5-4287-a697-b2d80653e941"],
Cell[277946, 5474, 1247, 30, 75, "ChatInput",ExpressionUUID->"e721c83c-a042-46c9-8c22-7582c2243635"],
Cell[279196, 5506, 836, 19, 75, "ChatInput",ExpressionUUID->"a63bedd3-35c8-47f3-b0fc-47e276ed966f"],
Cell[280035, 5527, 879, 21, 75, "ChatInput",ExpressionUUID->"f3cd850f-8271-4d23-b7f7-86dd12526680"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[280963, 5554, 94, 1, 16, "Subsubsection",ExpressionUUID->"1e917770-2974-4748-b25d-17377b4e0334"],
Cell[281060, 5557, 77, 0, 136, "EndOfSlide",ExpressionUUID->"1b760c7d-17e4-4176-8ae4-7783ad057238"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281198, 5564, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"238d4d1b-7561-4b4c-a003-4bd844b03af0",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[281359, 5570, 103, 1, 139, "Section",ExpressionUUID->"f3ad6de8-4a0a-4013-a08f-f93a82931ad4",
 CellTags->"Summary"],
Cell[281465, 5573, 111, 0, 35, "Text",ExpressionUUID->"c3dbf1b2-88d2-4b41-97b2-4fa3ac4c44b7"],
Cell[281579, 5575, 224, 4, 35, "Item",ExpressionUUID->"e1b01193-691f-4180-a224-36f9092ebb43"],
Cell[281806, 5581, 227, 4, 35, "Item",ExpressionUUID->"fda55784-3a9b-4669-b9af-8dc49e4cd8fb"],
Cell[282036, 5587, 195, 4, 35, "Item",ExpressionUUID->"a23acd30-d23f-40a3-b819-e1a26811acdd"],
Cell[282234, 5593, 190, 4, 35, "Item",ExpressionUUID->"ab2695d2-98a8-40e2-841d-cbc0c3944a13"],
Cell[282427, 5599, 77, 0, 136, "EndOfSlide",ExpressionUUID->"c07c5d7c-f6aa-42a3-83fc-f379c7cb0efa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[282553, 5605, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e71ce211-5740-471c-8a79-7d0052e9b757",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[282714, 5611, 107, 1, 139, "Section",ExpressionUUID->"e9cc8953-b544-46db-a6b6-6d3171d6d5b8",
 CellTags->"Resources"],
Cell[CellGroupData[{
Cell[282846, 5616, 102, 0, 79, "Subsubsection",ExpressionUUID->"90453c2b-55b8-4195-9acd-393e1137609a"],
Cell[282951, 5618, 350, 7, 35, "Item",ExpressionUUID->"0e04ae52-b81a-4aea-a349-6c4fbf953d56"],
Cell[283304, 5627, 348, 7, 35, "Item",ExpressionUUID->"8bd6c2eb-ee2c-48e3-92c6-82af6d2d4d40"],
Cell[283655, 5636, 307, 7, 35, "Item",ExpressionUUID->"565e54bc-b0b9-4068-b1ed-72160c23c070"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283999, 5648, 97, 0, 79, "Subsubsection",ExpressionUUID->"8b0dae50-ab61-452b-a404-1ee50c0d70c5"],
Cell[284099, 5650, 526, 12, 35, "Item",ExpressionUUID->"607b34f0-f1e8-4176-b79e-2819ddf25014"],
Cell[284628, 5664, 498, 11, 35, "Item",ExpressionUUID->"3a2d6991-e729-4b89-af1b-74babad2a160"],
Cell[285129, 5677, 362, 7, 35, "Item",ExpressionUUID->"52960952-ce22-4794-9ce5-9410517b1a22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285528, 5689, 98, 0, 79, "Subsubsection",ExpressionUUID->"b6b83679-3450-425d-ac95-d39552a39205"],
Cell[CellGroupData[{
Cell[285651, 5693, 101, 0, 35, "Item",ExpressionUUID->"4884acdc-b5df-4682-94aa-2b312f30e7e7"],
Cell[285755, 5695, 556, 12, 34, "Subitem",ExpressionUUID->"87a92ae4-7341-441f-be84-29ef8a2f05d5"],
Cell[286314, 5709, 520, 11, 34, "Subitem",ExpressionUUID->"4644cdda-2d6b-4e50-bf22-18046afcc5bd"],
Cell[286837, 5722, 503, 11, 34, "Subitem",ExpressionUUID->"0a99ea5c-a6e4-4e9e-9c21-8e9195d8eb03"],
Cell[287343, 5735, 712, 19, 34, "Subitem",ExpressionUUID->"983d1ec1-d844-48b8-920a-8de729923ad0"],
Cell[288058, 5756, 574, 11, 34, "Subitem",ExpressionUUID->"3ab07e1a-64a2-4eab-b5a2-00a79ed96295"]
}, Open  ]],
Cell[288647, 5770, 422, 10, 35, "Item",ExpressionUUID->"aee79c0b-4c88-47b1-af49-8a8de04b999e"],
Cell[CellGroupData[{
Cell[289094, 5784, 143, 2, 35, "Item",ExpressionUUID->"1ed9ecfb-f09e-46ee-a259-ea7c8b285730"],
Cell[289240, 5788, 350, 6, 34, "Subitem",ExpressionUUID->"ec4f23a1-e528-4085-a810-7260cf46bf25"],
Cell[289593, 5796, 334, 6, 34, "Subitem",ExpressionUUID->"24961bb1-1071-433c-a22e-6b25a4d34b5e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289976, 5808, 100, 0, 79, "Subsubsection",ExpressionUUID->"011ad601-2a77-4052-97fb-390611751d50"],
Cell[290079, 5810, 589, 16, 35, "Item",ExpressionUUID->"02b8bf53-0d1f-4a2b-92c2-5ffcc503f860"],
Cell[290671, 5828, 400, 10, 35, "Item",ExpressionUUID->"dfe74c28-88e2-475f-8e93-038d8be4e6b3"],
Cell[291074, 5840, 370, 9, 35, "Item",ExpressionUUID->"f80d752f-1a86-41c4-ac6e-2611fd3a4a60"],
Cell[291447, 5851, 344, 8, 35, "Item",ExpressionUUID->"f6bee4ef-7ff8-469b-9fc0-e8a79b3b1126"],
Cell[291794, 5861, 375, 9, 35, "Item",ExpressionUUID->"8f9f009b-af5a-48ad-86df-b8a58132fc9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292206, 5875, 101, 0, 79, "Subsubsection",ExpressionUUID->"eff86fa6-89aa-4992-9d22-3ce877e15ce2"],
Cell[292310, 5877, 330, 7, 35, "Item",ExpressionUUID->"cdde4346-49c3-4201-99ac-2dca8cd3a5cb"],
Cell[292643, 5886, 412, 10, 35, "Item",ExpressionUUID->"df0124f6-7849-4b35-91e8-1d4c4f492d0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293092, 5901, 97, 0, 79, "Subsubsection",ExpressionUUID->"58217755-691f-4315-9632-622de039d2b0"],
Cell[293192, 5903, 407, 8, 35, "Item",ExpressionUUID->"5254f1ee-e2a2-4ed5-94fe-35037972329d"],
Cell[293602, 5913, 390, 8, 35, "Item",ExpressionUUID->"ccf605cb-2ef2-4874-aa8c-84138eb6d23a"],
Cell[293995, 5923, 77, 0, 136, "EndOfSlide",ExpressionUUID->"667a47e4-7120-418c-bc6d-d33d72fe60b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

